{
  "0shot": [
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Sarah",
            "start_time": "2:45PM",
            "end_time": "4:30PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Helen",
            "start_time": "9:45PM",
            "end_time": "10:15PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Sarah",
            "start_time": "2:45PM",
            "end_time": "4:30PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Mary",
            "start_time": "4:48PM",
            "end_time": "6:03PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Helen",
            "start_time": "9:45PM",
            "end_time": "10:15PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Haight-Ashbury\": {\n        \"Fisherman's Wharf\": 23,\n        \"Richmond District\": 10,\n        \"Mission District\": 11,\n        \"Bayview\": 18\n    },\n    \"Fisherman's Wharf\": {\n        \"Haight-Ashbury\": 22,\n        \"Richmond District\": 18,\n        \"Mission District\": 22,\n        \"Bayview\": 26\n    },\n    \"Richmond District\": {\n        \"Haight-Ashbury\": 10,\n        \"Fisherman's Wharf\": 18,\n        \"Mission District\": 20,\n        \"Bayview\": 26\n    },\n    \"Mission District\": {\n        \"Haight-Ashbury\": 12,\n        \"Fisherman's Wharf\": 22,\n        \"Richmond District\": 20,\n        \"Bayview\": 15\n    },\n    \"Bayview\": {\n        \"Haight-Ashbury\": 19,\n        \"Fisherman's Wharf\": 25,\n        \"Richmond District\": 25,\n        \"Mission District\": 13\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Sarah\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 14*60 + 45, \"end_time\": 17*60 + 30, \"min_duration\": 105},\n    \"Mary\": {\"location\": \"Richmond District\", \"start_time\": 13*60 + 0, \"end_time\": 19*60 + 15, \"min_duration\": 75},\n    \"Helen\": {\"location\": \"Mission District\", \"start_time\": 21*60 + 45, \"end_time\": 22*60 + 30, \"min_duration\": 30},\n    \"Thomas\": {\"location\": \"Bayview\", \"start_time\": 15*60 + 15, \"end_time\": 18*60 + 45, \"min_duration\": 120}\n}\n\ndef calculate_schedule():\n    # Start at Haight-Ashbury at 9:00 AM\n    schedule = [{\"action\": \"start\", \"location\": \"Haight-Ashbury\", \"time\": \"9:00AM\"}]\n    current_time = 9*60\n\n    # Visit Sarah\n    if current_time < constraints[\"Sarah\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Fisherman's Wharf\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Fisherman's Wharf\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Fisherman's Wharf\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Sarah\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Fisherman's Wharf\", \"duration\": constraints[\"Sarah\"][\"min_duration\"], \"time\": f\"2:45PM\"})\n        current_time += constraints[\"Sarah\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Fisherman's Wharf\", \"time\": f\"5:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Sarah\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Fisherman's Wharf\", \"duration\": travel_distances[\"Fisherman's Wharf\"][\"Haight-Ashbury\"], \"time\": f\"5:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Fisherman's Wharf\"][\"Haight-Ashbury\"]\n\n    # Visit Mary\n    if current_time < constraints[\"Mary\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Richmond District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Richmond District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Mary\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Richmond District\", \"duration\": constraints[\"Mary\"][\"min_duration\"], \"time\": f\"1:00PM\"})\n        current_time += constraints[\"Mary\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": f\"4:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Mary\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_distances[\"Richmond District\"][\"Haight-Ashbury\"], \"time\": f\"4:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Richmond District\"][\"Haight-Ashbury\"]\n\n    # Visit Helen\n    if current_time < constraints[\"Helen\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Mission District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Mission District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Helen\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Mission District\", \"duration\": constraints[\"Helen\"][\"min_duration\"], \"time\": f\"9:45PM\"})\n        current_time += constraints[\"Helen\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": f\"10:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Helen\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Mission District\", \"duration\": travel_distances[\"Mission District\"][\"Haight-Ashbury\"], \"time\": f\"10:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Mission District\"][\"Haight-Ashbury\"]\n\n    # Visit Thomas\n    if current_time < constraints[\"Thomas\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Bayview\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Bayview\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Bayview\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Thomas\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Bayview\", \"duration\": constraints[\"Thomas\"][\"min_duration\"], \"time\": f\"3:15PM\"})\n        current_time += constraints[\"Thomas\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Bayview\", \"time\": f\"6:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Thomas\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_distances[\"Bayview\"][\"Haight-Ashbury\"], \"time\": f\"6:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Bayview\"][\"Haight-Ashbury\"]\n\n    return schedule\n\ndef main():\n    schedule = calculate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_389"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Kimberly",
            "start_time": "3:30PM",
            "end_time": "3:45PM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Elizabeth",
            "start_time": "7:15PM",
            "end_time": "7:30PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Joshua",
            "start_time": "10:30AM",
            "end_time": "11:15AM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Kimberly",
            "start_time": "3:30PM",
            "end_time": "3:45PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Kenneth",
            "start_time": "4:03PM",
            "end_time": "4:33PM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Betty",
            "start_time": "4:57PM",
            "end_time": "5:57PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Daniel",
            "start_time": "6:30PM",
            "end_time": "6:45PM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Elizabeth",
            "start_time": "7:15PM",
            "end_time": "7:30PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Deborah",
            "start_time": "7:45PM",
            "end_time": "8:00PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Union Square\": {\n        \"Presidio\": 24,\n        \"Alamo Square\": 15,\n        \"Marina District\": 18,\n        \"Financial District\": 9,\n        \"Nob Hill\": 9,\n        \"Sunset District\": 27,\n        \"Chinatown\": 7,\n        \"Russian Hill\": 13,\n        \"North Beach\": 10,\n        \"Haight-Ashbury\": 18\n    },\n    \"Presidio\": {\n        \"Union Square\": 22,\n        \"Alamo Square\": 19,\n        \"Marina District\": 11,\n        \"Financial District\": 23,\n        \"Nob Hill\": 18,\n        \"Sunset District\": 15,\n        \"Chinatown\": 21,\n        \"Russian Hill\": 14,\n        \"North Beach\": 18,\n        \"Haight-Ashbury\": 15\n    },\n    \"Alamo Square\": {\n        \"Union Square\": 14,\n        \"Presidio\": 17,\n        \"Marina District\": 15,\n        \"Financial District\": 17,\n        \"Nob Hill\": 11,\n        \"Sunset District\": 16,\n        \"Chinatown\": 15,\n        \"Russian Hill\": 13,\n        \"North Beach\": 15,\n        \"Haight-Ashbury\": 5\n    },\n    \"Marina District\": {\n        \"Union Square\": 16,\n        \"Presidio\": 10,\n        \"Alamo Square\": 15,\n        \"Financial District\": 17,\n        \"Nob Hill\": 12,\n        \"Sunset District\": 19,\n        \"Chinatown\": 15,\n        \"Russian Hill\": 8,\n        \"North Beach\": 11,\n        \"Haight-Ashbury\": 16\n    },\n    \"Financial District\": {\n        \"Union Square\": 9,\n        \"Presidio\": 22,\n        \"Alamo Square\": 17,\n        \"Marina District\": 15,\n        \"Nob Hill\": 8,\n        \"Sunset District\": 30,\n        \"Chinatown\": 5,\n        \"Russian Hill\": 11,\n        \"North Beach\": 7,\n        \"Haight-Ashbury\": 19\n    },\n    \"Nob Hill\": {\n        \"Union Square\": 7,\n        \"Presidio\": 17,\n        \"Alamo Square\": 11,\n        \"Marina District\": 11,\n        \"Financial District\": 9,\n        \"Sunset District\": 24,\n        \"Chinatown\": 6,\n        \"Russian Hill\": 5,\n        \"North Beach\": 8,\n        \"Haight-Ashbury\": 13\n    },\n    \"Sunset District\": {\n        \"Union Square\": 30,\n        \"Presidio\": 16,\n        \"Alamo Square\": 17,\n        \"Marina District\": 21,\n        \"Financial District\": 30,\n        \"Nob Hill\": 27,\n        \"Chinatown\": 30,\n        \"Russian Hill\": 24,\n        \"North Beach\": 28,\n        \"Haight-Ashbury\": 15\n    },\n    \"Chinatown\": {\n        \"Union Square\": 7,\n        \"Presidio\": 19,\n        \"Alamo Square\": 17,\n        \"Marina District\": 12,\n        \"Financial District\": 5,\n        \"Nob Hill\": 9,\n        \"Sunset District\": 29,\n        \"Russian Hill\": 7,\n        \"North Beach\": 3,\n        \"Haight-Ashbury\": 19\n    },\n    \"Russian Hill\": {\n        \"Union Square\": 10,\n        \"Presidio\": 14,\n        \"Alamo Square\": 15,\n        \"Marina District\": 7,\n        \"Financial District\": 11,\n        \"Nob Hill\": 5,\n        \"Sunset District\": 23,\n        \"Chinatown\": 9,\n        \"North Beach\": 5,\n        \"Haight-Ashbury\": 17\n    },\n    \"North Beach\": {\n        \"Union Square\": 7,\n        \"Presidio\": 17,\n        \"Alamo Square\": 16,\n        \"Marina District\": 9,\n        \"Financial District\": 8,\n        \"Nob Hill\": 7,\n        \"Sunset District\": 27,\n        \"Chinatown\": 6,\n        \"Russian Hill\": 4,\n        \"Haight-Ashbury\": 18\n    },\n    \"Haight-Ashbury\": {\n        \"Union Square\": 19,\n        \"Presidio\": 15,\n        \"Alamo Square\": 5,\n        \"Marina District\": 17,\n        \"Financial District\": 21,\n        \"Nob Hill\": 15,\n        \"Sunset District\": 15,\n        \"Chinatown\": 19,\n        \"Russian Hill\": 17,\n        \"North Beach\": 19\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Kimberly\": {\"location\": \"Presidio\", \"start_time\": 15*60 + 30, \"end_time\": 16*60 + 0, \"min_duration\": 15},\n    \"Elizabeth\": {\"location\": \"Alamo Square\", \"start_time\": 19*60 + 15, \"end_time\": 20*60 + 15, \"min_duration\": 15},\n    \"Joshua\": {\"location\": \"Marina District\", \"start_time\": 10*60 + 30, \"end_time\": 14*60 + 15, \"min_duration\": 45},\n    \"Sandra\": {\"location\": \"Financial District\", \"start_time\": 19*60 + 30, \"end_time\": 20*60 + 15, \"min_duration\": 45},\n    \"Kenneth\": {\"location\": \"Nob Hill\", \"start_time\": 12*60 + 45, \"end_time\": 21*60 + 45, \"min_duration\": 30},\n    \"Betty\": {\"location\": \"Sunset District\", \"start_time\": 14*60 + 0, \"end_time\": 19*60 + 0, \"min_duration\": 60},\n    \"Deborah\": {\"location\": \"Chinatown\", \"start_time\": 15*60 + 15, \"end_time\": 20*60 + 30, \"min_duration\": 15},\n    \"Barbara\": {\"location\": \"Russian Hill\", \"start_time\": 15*60 + 30, \"end_time\": 21*60 + 15, \"min_duration\": 120},\n    \"Steven\": {\"location\": \"North Beach\", \"start_time\": 15*60 + 45, \"end_time\": 20*60 + 45, \"min_duration\": 90},\n    \"Daniel\": {\"location\": \"Haight-Ashbury\", \"start_time\": 18*60 + 30, \"end_time\": 18*60 + 45, \"min_duration\": 15}\n}\n\ndef calculate_schedule():\n    # Start at Union Square at 9:00 AM\n    schedule = [{\"action\": \"start\", \"location\": \"Union Square\", \"time\": \"9:00AM\"}]\n    current_time = 9*60\n\n    # Visit Kimberly\n    if current_time < constraints[\"Kimberly\"][\"start_time\"]:\n        travel_time = travel_distances[\"Union Square\"][\"Presidio\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Presidio\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Presidio\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Kimberly\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Presidio\", \"duration\": constraints[\"Kimberly\"][\"min_duration\"], \"time\": f\"3:30PM\"})\n        current_time += constraints[\"Kimberly\"][\"min_duration\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_distances[\"Presidio\"][\"Union Square\"], \"time\": f\"3:{current_time//60:02d}PM\", \"to\": \"Union Square\"})\n        current_time += travel_distances[\"Presidio\"][\"Union Square\"]\n\n    # Visit Joshua\n    if current_time < constraints[\"Joshua\"][\"start_time\"]:\n        travel_time = travel_distances[\"Union Square\"][\"Marina District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Marina District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Marina District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Joshua\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Marina District\", \"duration\": constraints[\"Joshua\"][\"min_duration\"], \"time\": f\"10:30AM\"})\n        current_time += constraints[\"Joshua\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Marina District\", \"time\": f\"1:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Joshua\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_distances[\"Marina District\"][\"Union Square\"], \"time\": f\"1:{current_time//60:02d}PM\", \"to\": \"Union Square\"})\n        current_time += travel_distances[\"Marina District\"][\"Union Square\"]\n\n    # Visit Elizabeth\n    if current_time < constraints[\"Elizabeth\"][\"start_time\"]:\n        travel_time = travel_distances[\"Union Square\"][\"Alamo Square\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Alamo Square\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Alamo Square\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Elizabeth\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Alamo Square\", \"duration\": constraints[\"Elizabeth\"][\"min_duration\"], \"time\": f\"7:15PM\"})\n        current_time += constraints[\"Elizabeth\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Alamo Square\", \"time\": f\"8:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Elizabeth\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Alamo Square\", \"duration\": travel_distances[\"Alamo Square\"][\"Union Square\"], \"time\": f\"8:{current_time//60:02d}PM\", \"to\": \"Union Square\"})\n        current_time += travel_distances[\"Alamo Square\"][\"Union Square\"]\n\n    # Visit Sandra\n    if current_time < constraints[\"Sandra\"][\"start_time\"]:\n        travel_time = travel_distances[\"Union Square\"][\"Financial District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Financial District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Sandra\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Financial District\", \"duration\": constraints[\"Sandra\"][\"min_duration\"], \"time\": f\"7:30PM\"})\n        current_time += constraints[\"Sandra\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": f\"8:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Sandra\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_distances[\"Financial District\"][\"Union Square\"], \"time\": f\"8:{current_time//60:02d}PM\", \"to\": \"Union Square\"})\n        current_time += travel_distances[\"Financial District\"][\"Union Square\"]\n\n    # Visit Kenneth\n    if current_time < constraints[\"Kenneth\"][\"start_time\"]:\n        travel_time = travel_distances[\"Union Square\"][\"Nob Hill\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Nob Hill\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Nob Hill\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Kenneth\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Nob Hill\", \"duration\": constraints[\"Kenneth\"][\"min_duration\"], \"time\": f\"12:45PM\"})\n        current_time += constraints[\"Kenneth\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Nob Hill\", \"time\": f\"9:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Kenneth\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Nob Hill\", \"duration\": travel_distances[\"Nob Hill\"][\"Union Square\"], \"time\": f\"9:{current_time//60:02d}PM\", \"to\": \"Union Square\"})\n        current_time += travel_distances[\"Nob Hill\"][\"Union Square\"]\n\n    # Visit Betty\n    if current_time < constraints[\"Betty\"][\"start_time\"]:\n        travel_time = travel_distances[\"Union Square\"][\"Sunset District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Sunset District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Sunset District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Betty\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Sunset District\", \"duration\": constraints[\"Betty\"][\"min_duration\"], \"time\": f\"2:00PM\"})\n        current_time += constraints[\"Betty\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Sunset District\", \"time\": f\"4:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Betty\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Sunset District\", \"duration\": travel_distances[\"Sunset District\"][\"Union Square\"], \"time\": f\"4:{current_time//60:02d}PM\", \"to\": \"Union Square\"})\n        current_time += travel_distances[\"Sunset District\"][\"Union Square\"]\n\n    # Visit Deborah\n    if current_time < constraints[\"Deborah\"][\"start_time\"]:\n        travel_time = travel_distances[\"Union Square\"][\"Chinatown\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Chinatown\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Chinatown\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Deborah\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Chinatown\", \"duration\": constraints[\"Deborah\"][\"min_duration\"], \"time\": f\"5:15PM\"})\n        current_time += constraints[\"Deborah\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Chinatown\", \"time\": f\"8:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Deborah\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Chinatown\", \"duration\": travel_distances[\"Chinatown\"][\"Union Square\"], \"time\": f\"8:{current_time//60:02d}PM\", \"to\": \"Union Square\"})\n        current_time += travel_distances[\"Chinatown\"][\"Union Square\"]\n\n    # Visit Barbara\n    if current_time < constraints[\"Barbara\"][\"start_time\"]:\n        travel_time = travel_distances[\"Union Square\"][\"Russian Hill\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Russian Hill\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Barbara\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Russian Hill\", \"duration\": constraints[\"Barbara\"][\"min_duration\"], \"time\": f\"5:30PM\"})\n        current_time += constraints[\"Barbara\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": f\"9:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Barbara\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Russian Hill\", \"duration\": travel_distances[\"Russian Hill\"][\"Union Square\"], \"time\": f\"9:{current_time//60:02d}PM\", \"to\": \"Union Square\"})\n        current_time += travel_distances[\"Russian Hill\"][\"Union Square\"]\n\n    # Visit Steven\n    if current_time < constraints[\"Steven\"][\"start_time\"]:\n        travel_time = travel_distances[\"Union Square\"][\"North Beach\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"North Beach\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"North Beach\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Steven\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"North Beach\", \"duration\": constraints[\"Steven\"][\"min_duration\"], \"time\": f\"5:45PM\"})\n        current_time += constraints[\"Steven\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"North Beach\", \"time\": f\"8:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Steven\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"North Beach\", \"duration\": travel_distances[\"North Beach\"][\"Union Square\"], \"time\": f\"8:{current_time//60:02d}PM\", \"to\": \"Union Square\"})\n        current_time += travel_distances[\"North Beach\"][\"Union Square\"]\n\n    # Visit Daniel\n    if current_time < constraints[\"Daniel\"][\"start_time\"]:\n        travel_time = travel_distances[\"Union Square\"][\"Haight-Ashbury\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Haight-Ashbury\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Daniel\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Haight-Ashbury\", \"duration\": constraints[\"Daniel\"][\"min_duration\"], \"time\": f\"6:30PM\"})\n        current_time += constraints[\"Daniel\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Haight-Ashbury\", \"time\": f\"6:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Daniel\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_distances[\"Haight-Ashbury\"][\"Union Square\"], \"time\": f\"6:{current_time//60:02d}PM\", \"to\": \"Union Square\"})\n        current_time += travel_distances[\"Haight-Ashbury\"][\"Union Square\"]\n\n    return schedule\n\ndef main():\n    schedule = calculate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_912"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Margaret",
            "start_time": "9:30AM",
            "end_time": "10:00AM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Kimberly",
            "start_time": "1:15PM",
            "end_time": "1:30PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Kenneth",
            "start_time": "7:30PM",
            "end_time": "8:45PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Robert",
            "start_time": "12:15PM",
            "end_time": "12:30PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Margaret",
            "start_time": "12:52PM",
            "end_time": "1:22PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Kimberly",
            "start_time": "1:47PM",
            "end_time": "2:02PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Rebecca",
            "start_time": "2:19PM",
            "end_time": "3:34PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Kenneth",
            "start_time": "7:30PM",
            "end_time": "8:45PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Richmond District\": {\n        \"Marina District\": 9,\n        \"Chinatown\": 20,\n        \"Financial District\": 22,\n        \"Bayview\": 26,\n        \"Union Square\": 21\n    },\n    \"Marina District\": {\n        \"Richmond District\": 11,\n        \"Chinatown\": 12,\n        \"Financial District\": 17,\n        \"Bayview\": 25,\n        \"Union Square\": 16\n    },\n    \"Chinatown\": {\n        \"Richmond District\": 20,\n        \"Marina District\": 16,\n        \"Financial District\": 5,\n        \"Bayview\": 22,\n        \"Union Square\": 7\n    },\n    \"Financial District\": {\n        \"Richmond District\": 21,\n        \"Marina District\": 15,\n        \"Chinatown\": 5,\n        \"Bayview\": 19,\n        \"Union Square\": 9\n    },\n    \"Bayview\": {\n        \"Richmond District\": 25,\n        \"Marina District\": 25,\n        \"Chinatown\": 18,\n        \"Financial District\": 19,\n        \"Union Square\": 17\n    },\n    \"Union Square\": {\n        \"Richmond District\": 20,\n        \"Marina District\": 18,\n        \"Chinatown\": 7,\n        \"Financial District\": 9,\n        \"Bayview\": 15\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Kimberly\": {\"location\": \"Marina District\", \"start_time\": 13*60 + 15, \"end_time\": 16*60 + 45, \"min_duration\": 15},\n    \"Robert\": {\"location\": \"Chinatown\", \"start_time\": 12*60 + 15, \"end_time\": 20*60 + 15, \"min_duration\": 15},\n    \"Rebecca\": {\"location\": \"Financial District\", \"start_time\": 13*60 + 15, \"end_time\": 16*60 + 45, \"min_duration\": 75},\n    \"Margaret\": {\"location\": \"Bayview\", \"start_time\": 9*60 + 30, \"end_time\": 13*60 + 30, \"min_duration\": 30},\n    \"Kenneth\": {\"location\": \"Union Square\", \"start_time\": 19*60 + 30, \"end_time\": 21*60 + 15, \"min_duration\": 75}\n}\n\ndef calculate_schedule():\n    # Start at Richmond District at 9:00 AM\n    schedule = [{\"action\": \"start\", \"location\": \"Richmond District\", \"time\": \"9:00AM\"}]\n    current_time = 9*60\n\n    # Visit Margaret\n    if current_time < constraints[\"Margaret\"][\"start_time\"]:\n        travel_time = travel_distances[\"Richmond District\"][\"Bayview\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Bayview\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Bayview\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Margaret\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Bayview\", \"duration\": constraints[\"Margaret\"][\"min_duration\"], \"time\": f\"9:30AM\"})\n        current_time += constraints[\"Margaret\"][\"min_duration\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_distances[\"Bayview\"][\"Richmond District\"], \"time\": f\"9:{current_time//60:02d}AM\", \"to\": \"Richmond District\"})\n        current_time += travel_distances[\"Bayview\"][\"Richmond District\"]\n\n    # Visit Kimberly\n    if current_time < constraints[\"Kimberly\"][\"start_time\"]:\n        travel_time = travel_distances[\"Richmond District\"][\"Marina District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Marina District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Marina District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Kimberly\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Marina District\", \"duration\": constraints[\"Kimberly\"][\"min_duration\"], \"time\": f\"1:15PM\"})\n        current_time += constraints[\"Kimberly\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Marina District\", \"time\": f\"4:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Kimberly\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_distances[\"Marina District\"][\"Richmond District\"], \"time\": f\"4:{current_time//60:02d}PM\", \"to\": \"Richmond District\"})\n        current_time += travel_distances[\"Marina District\"][\"Richmond District\"]\n\n    # Visit Rebecca\n    if current_time < constraints[\"Rebecca\"][\"start_time\"]:\n        travel_time = travel_distances[\"Richmond District\"][\"Financial District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Financial District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Rebecca\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Financial District\", \"duration\": constraints[\"Rebecca\"][\"min_duration\"], \"time\": f\"1:15PM\"})\n        current_time += constraints[\"Rebecca\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": f\"4:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Rebecca\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_distances[\"Financial District\"][\"Richmond District\"], \"time\": f\"4:{current_time//60:02d}PM\", \"to\": \"Richmond District\"})\n        current_time += travel_distances[\"Financial District\"][\"Richmond District\"]\n\n    # Visit Robert\n    if current_time < constraints[\"Robert\"][\"start_time\"]:\n        travel_time = travel_distances[\"Richmond District\"][\"Chinatown\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Chinatown\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Chinatown\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Robert\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Chinatown\", \"duration\": constraints[\"Robert\"][\"min_duration\"], \"time\": f\"12:15PM\"})\n        current_time += constraints[\"Robert\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Chinatown\", \"time\": f\"8:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Robert\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Chinatown\", \"duration\": travel_distances[\"Chinatown\"][\"Richmond District\"], \"time\": f\"8:{current_time//60:02d}PM\", \"to\": \"Richmond District\"})\n        current_time += travel_distances[\"Chinatown\"][\"Richmond District\"]\n\n    # Visit Kenneth\n    if current_time < constraints[\"Kenneth\"][\"start_time\"]:\n        travel_time = travel_distances[\"Richmond District\"][\"Union Square\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Union Square\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Kenneth\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Union Square\", \"duration\": constraints[\"Kenneth\"][\"min_duration\"], \"time\": f\"7:30PM\"})\n        current_time += constraints[\"Kenneth\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": f\"9:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Kenneth\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_distances[\"Union Square\"][\"Richmond District\"], \"time\": f\"9:{current_time//60:02d}PM\", \"to\": \"Richmond District\"})\n        current_time += travel_distances[\"Union Square\"][\"Richmond District\"]\n\n    return schedule\n\ndef main():\n    schedule = calculate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_446"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Laura",
            "start_time": "12:30PM",
            "end_time": "12:45PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Ronald",
            "start_time": "1:45PM",
            "end_time": "3:30PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Patricia",
            "start_time": "9:31AM",
            "end_time": "10:31AM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Laura",
            "start_time": "12:30PM",
            "end_time": "12:45PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Ronald",
            "start_time": "1:45PM",
            "end_time": "3:30PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Emily",
            "start_time": "4:15PM",
            "end_time": "5:15PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Financial District\": {\n        \"Russian Hill\": 10,\n        \"Sunset District\": 31,\n        \"North Beach\": 7,\n        \"The Castro\": 23,\n        \"Golden Gate Park\": 23\n    },\n    \"Russian Hill\": {\n        \"Financial District\": 11,\n        \"Sunset District\": 23,\n        \"North Beach\": 5,\n        \"The Castro\": 21,\n        \"Golden Gate Park\": 21\n    },\n    \"Sunset District\": {\n        \"Financial District\": 30,\n        \"Russian Hill\": 24,\n        \"North Beach\": 29,\n        \"The Castro\": 17,\n        \"Golden Gate Park\": 11\n    },\n    \"North Beach\": {\n        \"Financial District\": 8,\n        \"Russian Hill\": 4,\n        \"Sunset District\": 27,\n        \"The Castro\": 22,\n        \"Golden Gate Park\": 22\n    },\n    \"The Castro\": {\n        \"Financial District\": 20,\n        \"Russian Hill\": 18,\n        \"Sunset District\": 17,\n        \"North Beach\": 20,\n        \"Golden Gate Park\": 13\n    },\n    \"Golden Gate Park\": {\n        \"Financial District\": 26,\n        \"Russian Hill\": 19,\n        \"Sunset District\": 10,\n        \"North Beach\": 24,\n        \"The Castro\": 13\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Ronald\": {\"location\": \"Russian Hill\", \"start_time\": 13*60 + 45, \"end_time\": 17*60 + 15, \"min_duration\": 105},\n    \"Patricia\": {\"location\": \"Sunset District\", \"start_time\": 9*60 + 15, \"end_time\": 22*60 + 0, \"min_duration\": 60},\n    \"Laura\": {\"location\": \"North Beach\", \"start_time\": 12*60 + 30, \"end_time\": 12*60 + 45, \"min_duration\": 15},\n    \"Emily\": {\"location\": \"The Castro\", \"start_time\": 16*60 + 15, \"end_time\": 20*60 + 30, \"min_duration\": 60},\n    \"Mary\": {\"location\": \"Golden Gate Park\", \"start_time\": 15*60 + 0, \"end_time\": 16*60 + 30, \"min_duration\": 60}\n}\n\ndef calculate_schedule():\n    # Start at Financial District at 9:00 AM\n    schedule = [{\"action\": \"start\", \"location\": \"Financial District\", \"time\": \"9:00AM\"}]\n    current_time = 9*60\n\n    # Visit Laura\n    if current_time < constraints[\"Laura\"][\"start_time\"]:\n        travel_time = travel_distances[\"Financial District\"][\"North Beach\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"North Beach\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"North Beach\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Laura\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"North Beach\", \"duration\": constraints[\"Laura\"][\"min_duration\"], \"time\": f\"12:30PM\"})\n        current_time += constraints[\"Laura\"][\"min_duration\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"North Beach\", \"duration\": travel_distances[\"North Beach\"][\"Financial District\"], \"time\": f\"12:{current_time//60:02d}PM\", \"to\": \"Financial District\"})\n        current_time += travel_distances[\"North Beach\"][\"Financial District\"]\n\n    # Visit Patricia\n    if current_time < constraints[\"Patricia\"][\"start_time\"]:\n        travel_time = travel_distances[\"Financial District\"][\"Sunset District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Sunset District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Sunset District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Patricia\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Sunset District\", \"duration\": constraints[\"Patricia\"][\"min_duration\"], \"time\": f\"9:15AM\"})\n        current_time += constraints[\"Patricia\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Sunset District\", \"time\": f\"10:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Patricia\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Sunset District\", \"duration\": travel_distances[\"Sunset District\"][\"Financial District\"], \"time\": f\"10:{current_time//60:02d}PM\", \"to\": \"Financial District\"})\n        current_time += travel_distances[\"Sunset District\"][\"Financial District\"]\n\n    # Visit Ronald\n    if current_time < constraints[\"Ronald\"][\"start_time\"]:\n        travel_time = travel_distances[\"Financial District\"][\"Russian Hill\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Russian Hill\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Ronald\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Russian Hill\", \"duration\": constraints[\"Ronald\"][\"min_duration\"], \"time\": f\"1:45PM\"})\n        current_time += constraints[\"Ronald\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": f\"5:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Ronald\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Russian Hill\", \"duration\": travel_distances[\"Russian Hill\"][\"Financial District\"], \"time\": f\"5:{current_time//60:02d}PM\", \"to\": \"Financial District\"})\n        current_time += travel_distances[\"Russian Hill\"][\"Financial District\"]\n\n    # Visit Emily\n    if current_time < constraints[\"Emily\"][\"start_time\"]:\n        travel_time = travel_distances[\"Financial District\"][\"The Castro\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"The Castro\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"The Castro\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Emily\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"The Castro\", \"duration\": constraints[\"Emily\"][\"min_duration\"], \"time\": f\"4:15PM\"})\n        current_time += constraints[\"Emily\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"The Castro\", \"time\": f\"6:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Emily\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"The Castro\", \"duration\": travel_distances[\"The Castro\"][\"Financial District\"], \"time\": f\"6:{current_time//60:02d}PM\", \"to\": \"Financial District\"})\n        current_time += travel_distances[\"The Castro\"][\"Financial District\"]\n\n    # Visit Mary\n    if current_time < constraints[\"Mary\"][\"start_time\"]:\n        travel_time = travel_distances[\"Financial District\"][\"Golden Gate Park\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Golden Gate Park\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Mary\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": constraints[\"Mary\"][\"min_duration\"], \"time\": f\"3:00PM\"})\n        current_time += constraints[\"Mary\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": f\"4:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Mary\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_distances[\"Golden Gate Park\"][\"Financial District\"], \"time\": f\"4:{current_time//60:02d}PM\", \"to\": \"Financial District\"})\n        current_time += travel_distances[\"Golden Gate Park\"][\"Financial District\"]\n\n    return schedule\n\ndef main():\n    schedule = calculate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_444"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Mary",
            "start_time": "10:00AM",
            "end_time": "10:45AM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Lisa",
            "start_time": "8:30PM",
            "end_time": "9:45PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Mary",
            "start_time": "10:00AM",
            "end_time": "10:45AM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Betty",
            "start_time": "10:56AM",
            "end_time": "12:26PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Charles",
            "start_time": "12:47PM",
            "end_time": "2:47PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Lisa",
            "start_time": "8:30PM",
            "end_time": "9:45PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Bayview\": {\n        \"Pacific Heights\": 23,\n        \"Mission District\": 13,\n        \"Haight-Ashbury\": 19,\n        \"Financial District\": 19\n    },\n    \"Pacific Heights\": {\n        \"Bayview\": 22,\n        \"Mission District\": 15,\n        \"Haight-Ashbury\": 11,\n        \"Financial District\": 13\n    },\n    \"Mission District\": {\n        \"Bayview\": 15,\n        \"Pacific Heights\": 16,\n        \"Haight-Ashbury\": 12,\n        \"Financial District\": 17\n    },\n    \"Haight-Ashbury\": {\n        \"Bayview\": 18,\n        \"Pacific Heights\": 12,\n        \"Mission District\": 11,\n        \"Financial District\": 21\n    },\n    \"Financial District\": {\n        \"Bayview\": 19,\n        \"Pacific Heights\": 13,\n        \"Mission District\": 17,\n        \"Haight-Ashbury\": 19\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Mary\": {\"location\": \"Pacific Heights\", \"start_time\": 10*60, \"end_time\": 19*60, \"min_duration\": 45},\n    \"Lisa\": {\"location\": \"Mission District\", \"start_time\": 20*60 + 30, \"end_time\": 22*60, \"min_duration\": 75},\n    \"Betty\": {\"location\": \"Haight-Ashbury\", \"start_time\": 7*60 + 15, \"end_time\": 17*60 + 15, \"min_duration\": 90},\n    \"Charles\": {\"location\": \"Financial District\", \"start_time\": 11*60 + 15, \"end_time\": 15*60, \"min_duration\": 120}\n}\n\ndef calculate_schedule():\n    # Start at Bayview at 9:00 AM\n    schedule = [{\"action\": \"start\", \"location\": \"Bayview\", \"time\": \"9:00AM\"}]\n    current_time = 9*60\n\n    # Visit Mary\n    if current_time < constraints[\"Mary\"][\"start_time\"]:\n        travel_time = travel_distances[\"Bayview\"][\"Pacific Heights\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Pacific Heights\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Pacific Heights\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Mary\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Pacific Heights\", \"duration\": constraints[\"Mary\"][\"min_duration\"], \"time\": f\"10:00AM\"})\n        current_time += constraints[\"Mary\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Pacific Heights\", \"time\": f\"7:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Mary\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Pacific Heights\", \"duration\": travel_distances[\"Pacific Heights\"][\"Bayview\"], \"time\": f\"7:{current_time//60:02d}PM\", \"to\": \"Bayview\"})\n        current_time += travel_distances[\"Pacific Heights\"][\"Bayview\"]\n\n    # Visit Charles\n    if current_time < constraints[\"Charles\"][\"start_time\"]:\n        travel_time = travel_distances[\"Bayview\"][\"Financial District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Financial District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Charles\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Financial District\", \"duration\": constraints[\"Charles\"][\"min_duration\"], \"time\": f\"11:15AM\"})\n        current_time += constraints[\"Charles\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": f\"3:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Charles\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_distances[\"Financial District\"][\"Bayview\"], \"time\": f\"3:{current_time//60:02d}PM\", \"to\": \"Bayview\"})\n        current_time += travel_distances[\"Financial District\"][\"Bayview\"]\n\n    # Visit Betty\n    if current_time < constraints[\"Betty\"][\"start_time\"]:\n        travel_time = travel_distances[\"Bayview\"][\"Haight-Ashbury\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Haight-Ashbury\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Betty\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Haight-Ashbury\", \"duration\": constraints[\"Betty\"][\"min_duration\"], \"time\": f\"7:15AM\"})\n        current_time += constraints[\"Betty\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Haight-Ashbury\", \"time\": f\"5:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Betty\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_distances[\"Haight-Ashbury\"][\"Bayview\"], \"time\": f\"5:{current_time//60:02d}PM\", \"to\": \"Bayview\"})\n        current_time += travel_distances[\"Haight-Ashbury\"][\"Bayview\"]\n\n    # Visit Lisa\n    if current_time < constraints[\"Lisa\"][\"start_time\"]:\n        travel_time = travel_distances[\"Bayview\"][\"Mission District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Mission District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Lisa\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Mission District\", \"duration\": constraints[\"Lisa\"][\"min_duration\"], \"time\": f\"8:30PM\"})\n        current_time += constraints[\"Lisa\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": f\"10:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Lisa\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Mission District\", \"duration\": travel_distances[\"Mission District\"][\"Bayview\"], \"time\": f\"10:{current_time//60:02d}PM\", \"to\": \"Bayview\"})\n        current_time += travel_distances[\"Mission District\"][\"Bayview\"]\n\n    return schedule\n\ndef main():\n    schedule = calculate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_350"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Elizabeth",
            "start_time": "10:30AM",
            "end_time": "12:00PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Sandra",
            "start_time": "9:12AM",
            "end_time": "11:12AM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Robert",
            "start_time": "11:25AM",
            "end_time": "11:40AM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Kenneth",
            "start_time": "11:49AM",
            "end_time": "12:34PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Elizabeth",
            "start_time": "12:54PM",
            "end_time": "2:24PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "David",
            "start_time": "3:15PM",
            "end_time": "4:00PM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Kimberly",
            "start_time": "4:27PM",
            "end_time": "6:12PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Amanda",
            "start_time": "6:23PM",
            "end_time": "6:38PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Melissa",
            "start_time": "6:45PM",
            "end_time": "7:00PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Thomas",
            "start_time": "7:30PM",
            "end_time": "8:00PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Haight-Ashbury\": {\n        \"Mission District\": 11,\n        \"Union Square\": 19,\n        \"Pacific Heights\": 12,\n        \"Bayview\": 18,\n        \"Fisherman's Wharf\": 23,\n        \"Marina District\": 17,\n        \"Richmond District\": 10,\n        \"Sunset District\": 15,\n        \"Golden Gate Park\": 7\n    },\n    \"Mission District\": {\n        \"Haight-Ashbury\": 12,\n        \"Union Square\": 14,\n        \"Pacific Heights\": 15,\n        \"Bayview\": 13,\n        \"Fisherman's Wharf\": 22,\n        \"Marina District\": 19,\n        \"Richmond District\": 20,\n        \"Sunset District\": 24,\n        \"Golden Gate Park\": 17\n    },\n    \"Union Square\": {\n        \"Haight-Ashbury\": 18,\n        \"Mission District\": 14,\n        \"Pacific Heights\": 12,\n        \"Bayview\": 15,\n        \"Fisherman's Wharf\": 15,\n        \"Marina District\": 18,\n        \"Richmond District\": 20,\n        \"Sunset District\": 27,\n        \"Golden Gate Park\": 22\n    },\n    \"Pacific Heights\": {\n        \"Haight-Ashbury\": 11,\n        \"Mission District\": 15,\n        \"Union Square\": 12,\n        \"Bayview\": 22,\n        \"Fisherman's Wharf\": 13,\n        \"Marina District\": 6,\n        \"Richmond District\": 12,\n        \"Sunset District\": 21,\n        \"Golden Gate Park\": 15\n    },\n    \"Bayview\": {\n        \"Haight-Ashbury\": 19,\n        \"Mission District\": 13,\n        \"Union Square\": 18,\n        \"Pacific Heights\": 23,\n        \"Fisherman's Wharf\": 25,\n        \"Marina District\": 27,\n        \"Richmond District\": 25,\n        \"Sunset District\": 23,\n        \"Golden Gate Park\": 22\n    },\n    \"Fisherman's Wharf\": {\n        \"Haight-Ashbury\": 22,\n        \"Mission District\": 22,\n        \"Union Square\": 13,\n        \"Pacific Heights\": 12,\n        \"Bayview\": 26,\n        \"Marina District\": 9,\n        \"Richmond District\": 18,\n        \"Sunset District\": 27,\n        \"Golden Gate Park\": 25\n    },\n    \"Marina District\": {\n        \"Haight-Ashbury\": 16,\n        \"Mission District\": 20,\n        \"Union Square\": 16,\n        \"Pacific Heights\": 7,\n        \"Bayview\": 27,\n        \"Fisherman's Wharf\": 10,\n        \"Richmond District\": 11,\n        \"Sunset District\": 19,\n        \"Golden Gate Park\": 18\n    },\n    \"Richmond District\": {\n        \"Haight-Ashbury\": 10,\n        \"Mission District\": 20,\n        \"Union Square\": 21,\n        \"Pacific Heights\": 10,\n        \"Bayview\": 27,\n        \"Fisherman's Wharf\": 18,\n        \"Marina District\": 9,\n        \"Sunset District\": 11,\n        \"Golden Gate Park\": 9\n    },\n    \"Sunset District\": {\n        \"Haight-Ashbury\": 15,\n        \"Mission District\": 25,\n        \"Union Square\": 30,\n        \"Pacific Heights\": 21,\n        \"Bayview\": 22,\n        \"Fisherman's Wharf\": 29,\n        \"Marina District\": 21,\n        \"Richmond District\": 12,\n        \"Golden Gate Park\": 11\n    },\n    \"Golden Gate Park\": {\n        \"Haight-Ashbury\": 7,\n        \"Mission District\": 17,\n        \"Union Square\": 22,\n        \"Pacific Heights\": 16,\n        \"Bayview\": 23,\n        \"Fisherman's Wharf\": 24,\n        \"Marina District\": 16,\n        \"Richmond District\": 7,\n        \"Sunset District\": 10\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Elizabeth\": {\"location\": \"Mission District\", \"start_time\": 10*60 + 30, \"end_time\": 20*60, \"min_duration\": 90},\n    \"David\": {\"location\": \"Union Square\", \"start_time\": 15*60 + 15, \"end_time\": 19*60, \"min_duration\": 45},\n    \"Sandra\": {\"location\": \"Pacific Heights\", \"start_time\": 7*60, \"end_time\": 20*60, \"min_duration\": 120},\n    \"Thomas\": {\"location\": \"Bayview\", \"start_time\": 19*60 + 30, \"end_time\": 20*60 + 30, \"min_duration\": 30},\n    \"Robert\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 10*60, \"end_time\": 15*60, \"min_duration\": 15},\n    \"Kenneth\": {\"location\": \"Marina District\", \"start_time\": 10*60 + 45, \"end_time\": 13*60, \"min_duration\": 45},\n    \"Melissa\": {\"location\": \"Richmond District\", \"start_time\": 18*60 + 15, \"end_time\": 20*60, \"min_duration\": 15},\n    \"Kimberly\": {\"location\": \"Sunset District\", \"start_time\": 10*60 + 15, \"end_time\": 18*60 + 15, \"min_duration\": 105},\n    \"Amanda\": {\"location\": \"Golden Gate Park\", \"start_time\": 7*60 + 45, \"end_time\": 18*60 + 45, \"min_duration\": 15}\n}\n\ndef calculate_schedule():\n    # Start at Haight-Ashbury at 9:00 AM\n    schedule = [{\"action\": \"start\", \"location\": \"Haight-Ashbury\", \"time\": \"9:00AM\"}]\n    current_time = 9*60\n\n    # Visit Elizabeth\n    if current_time < constraints[\"Elizabeth\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Mission District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Mission District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Elizabeth\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Mission District\", \"duration\": constraints[\"Elizabeth\"][\"min_duration\"], \"time\": f\"10:30AM\"})\n        current_time += constraints[\"Elizabeth\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": f\"8:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Elizabeth\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Mission District\", \"duration\": travel_distances[\"Mission District\"][\"Haight-Ashbury\"], \"time\": f\"8:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Mission District\"][\"Haight-Ashbury\"]\n\n    # Visit David\n    if current_time < constraints[\"David\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Union Square\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Union Square\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"David\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Union Square\", \"duration\": constraints[\"David\"][\"min_duration\"], \"time\": f\"3:15PM\"})\n        current_time += constraints[\"David\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": f\"7:{current_time//60:02d}PM\"})\n        current_time = constraints[\"David\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_distances[\"Union Square\"][\"Haight-Ashbury\"], \"time\": f\"7:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Union Square\"][\"Haight-Ashbury\"]\n\n    # Visit Sandra\n    if current_time < constraints[\"Sandra\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Pacific Heights\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Pacific Heights\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Pacific Heights\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Sandra\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Pacific Heights\", \"duration\": constraints[\"Sandra\"][\"min_duration\"], \"time\": f\"7:00AM\"})\n        current_time += constraints[\"Sandra\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Pacific Heights\", \"time\": f\"8:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Sandra\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Pacific Heights\", \"duration\": travel_distances[\"Pacific Heights\"][\"Haight-Ashbury\"], \"time\": f\"8:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Pacific Heights\"][\"Haight-Ashbury\"]\n\n    # Visit Thomas\n    if current_time < constraints[\"Thomas\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Bayview\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Bayview\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Bayview\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Thomas\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Bayview\", \"duration\": constraints[\"Thomas\"][\"min_duration\"], \"time\": f\"7:30PM\"})\n        current_time += constraints[\"Thomas\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Bayview\", \"time\": f\"8:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Thomas\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_distances[\"Bayview\"][\"Haight-Ashbury\"], \"time\": f\"8:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Bayview\"][\"Haight-Ashbury\"]\n\n    # Visit Robert\n    if current_time < constraints[\"Robert\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Fisherman's Wharf\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Fisherman's Wharf\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Fisherman's Wharf\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Robert\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Fisherman's Wharf\", \"duration\": constraints[\"Robert\"][\"min_duration\"], \"time\": f\"10:00AM\"})\n        current_time += constraints[\"Robert\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Fisherman's Wharf\", \"time\": f\"3:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Robert\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Fisherman's Wharf\", \"duration\": travel_distances[\"Fisherman's Wharf\"][\"Haight-Ashbury\"], \"time\": f\"3:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Fisherman's Wharf\"][\"Haight-Ashbury\"]\n\n    # Visit Kenneth\n    if current_time < constraints[\"Kenneth\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Marina District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Marina District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Marina District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Kenneth\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Marina District\", \"duration\": constraints[\"Kenneth\"][\"min_duration\"], \"time\": f\"10:45AM\"})\n        current_time += constraints[\"Kenneth\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Marina District\", \"time\": f\"1:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Kenneth\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_distances[\"Marina District\"][\"Haight-Ashbury\"], \"time\": f\"1:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Marina District\"][\"Haight-Ashbury\"]\n\n    # Visit Melissa\n    if current_time < constraints[\"Melissa\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Richmond District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Richmond District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Melissa\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Richmond District\", \"duration\": constraints[\"Melissa\"][\"min_duration\"], \"time\": f\"6:15PM\"})\n        current_time += constraints[\"Melissa\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": f\"8:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Melissa\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_distances[\"Richmond District\"][\"Haight-Ashbury\"], \"time\": f\"8:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Richmond District\"][\"Haight-Ashbury\"]\n\n    # Visit Kimberly\n    if current_time < constraints[\"Kimberly\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Sunset District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Sunset District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Sunset District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Kimberly\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Sunset District\", \"duration\": constraints[\"Kimberly\"][\"min_duration\"], \"time\": f\"10:15AM\"})\n        current_time += constraints[\"Kimberly\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Sunset District\", \"time\": f\"6:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Kimberly\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Sunset District\", \"duration\": travel_distances[\"Sunset District\"][\"Haight-Ashbury\"], \"time\": f\"6:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Sunset District\"][\"Haight-Ashbury\"]\n\n    # Visit Amanda\n    if current_time < constraints[\"Amanda\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Golden Gate Park\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Golden Gate Park\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Amanda\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": constraints[\"Amanda\"][\"min_duration\"], \"time\": f\"7:45AM\"})\n        current_time += constraints[\"Amanda\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": f\"6:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Amanda\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_distances[\"Golden Gate Park\"][\"Haight-Ashbury\"], \"time\": f\"6:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Golden Gate Park\"][\"Haight-Ashbury\"]\n\n    return schedule\n\ndef main():\n    schedule = calculate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_867"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Brian",
            "start_time": "9:45AM",
            "end_time": "10:00AM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Jason",
            "start_time": "1:00PM",
            "end_time": "2:30PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Brian",
            "start_time": "2:52PM",
            "end_time": "3:07PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Elizabeth",
            "start_time": "3:30PM",
            "end_time": "5:15PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Laura",
            "start_time": "5:37PM",
            "end_time": "6:52PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Melissa",
            "start_time": "7:02PM",
            "end_time": "7:47PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Presidio\": {\n        \"Richmond District\": 7,\n        \"North Beach\": 18,\n        \"Financial District\": 23,\n        \"Golden Gate Park\": 12,\n        \"Union Square\": 22\n    },\n    \"Richmond District\": {\n        \"Presidio\": 7,\n        \"North Beach\": 18,\n        \"Financial District\": 22,\n        \"Golden Gate Park\": 9,\n        \"Union Square\": 21\n    },\n    \"North Beach\": {\n        \"Presidio\": 17,\n        \"Richmond District\": 18,\n        \"Financial District\": 8,\n        \"Golden Gate Park\": 22,\n        \"Union Square\": 7\n    },\n    \"Financial District\": {\n        \"Presidio\": 22,\n        \"Richmond District\": 21,\n        \"North Beach\": 7,\n        \"Golden Gate Park\": 23,\n        \"Union Square\": 9\n    },\n    \"Golden Gate Park\": {\n        \"Presidio\": 11,\n        \"Richmond District\": 7,\n        \"North Beach\": 24,\n        \"Financial District\": 26,\n        \"Union Square\": 22\n    },\n    \"Union Square\": {\n        \"Presidio\": 24,\n        \"Richmond District\": 20,\n        \"North Beach\": 10,\n        \"Financial District\": 9,\n        \"Golden Gate Park\": 22\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Jason\": {\"location\": \"Richmond District\", \"start_time\": 13*60, \"end_time\": 20*60 + 45, \"min_duration\": 90},\n    \"Melissa\": {\"location\": \"North Beach\", \"start_time\": 18*60 + 45, \"end_time\": 20*60 + 15, \"min_duration\": 45},\n    \"Brian\": {\"location\": \"Financial District\", \"start_time\": 9*60 + 45, \"end_time\": 21*60 + 45, \"min_duration\": 15},\n    \"Elizabeth\": {\"location\": \"Golden Gate Park\", \"start_time\": 8*60 + 45, \"end_time\": 21*60 + 30, \"min_duration\": 105},\n    \"Laura\": {\"location\": \"Union Square\", \"start_time\": 14*60 + 15, \"end_time\": 19*60 + 30, \"min_duration\": 75}\n}\n\ndef calculate_schedule():\n    # Start at Presidio at 9:00 AM\n    schedule = [{\"action\": \"start\", \"location\": \"Presidio\", \"time\": \"9:00AM\"}]\n    current_time = 9*60\n\n    # Visit Brian\n    if current_time < constraints[\"Brian\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Financial District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Financial District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Brian\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Financial District\", \"duration\": constraints[\"Brian\"][\"min_duration\"], \"time\": f\"9:45AM\"})\n        current_time += constraints[\"Brian\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": f\"9:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Brian\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_distances[\"Financial District\"][\"Presidio\"], \"time\": f\"9:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Financial District\"][\"Presidio\"]\n\n    # Visit Elizabeth\n    if current_time < constraints[\"Elizabeth\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Golden Gate Park\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Golden Gate Park\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Elizabeth\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": constraints[\"Elizabeth\"][\"min_duration\"], \"time\": f\"8:45AM\"})\n        current_time += constraints[\"Elizabeth\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": f\"9:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Elizabeth\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_distances[\"Golden Gate Park\"][\"Presidio\"], \"time\": f\"9:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Golden Gate Park\"][\"Presidio\"]\n\n    # Visit Jason\n    if current_time < constraints[\"Jason\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Richmond District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Richmond District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Jason\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Richmond District\", \"duration\": constraints[\"Jason\"][\"min_duration\"], \"time\": f\"1:00PM\"})\n        current_time += constraints[\"Jason\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": f\"8:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Jason\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_distances[\"Richmond District\"][\"Presidio\"], \"time\": f\"8:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Richmond District\"][\"Presidio\"]\n\n    # Visit Melissa\n    if current_time < constraints[\"Melissa\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"North Beach\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"North Beach\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"North Beach\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Melissa\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"North Beach\", \"duration\": constraints[\"Melissa\"][\"min_duration\"], \"time\": f\"6:45PM\"})\n        current_time += constraints[\"Melissa\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"North Beach\", \"time\": f\"8:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Melissa\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"North Beach\", \"duration\": travel_distances[\"North Beach\"][\"Presidio\"], \"time\": f\"8:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"North Beach\"][\"Presidio\"]\n\n    # Visit Laura\n    if current_time < constraints[\"Laura\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Union Square\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Union Square\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Laura\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Union Square\", \"duration\": constraints[\"Laura\"][\"min_duration\"], \"time\": f\"2:15PM\"})\n        current_time += constraints[\"Laura\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": f\"7:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Laura\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_distances[\"Union Square\"][\"Presidio\"], \"time\": f\"7:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Union Square\"][\"Presidio\"]\n\n    return schedule\n\ndef main():\n    schedule = calculate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_423"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Melissa",
            "start_time": "9:30AM",
            "end_time": "10:00AM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Karen",
            "start_time": "5:30PM",
            "end_time": "7:15PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Melissa",
            "start_time": "9:30AM",
            "end_time": "10:00AM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Matthew",
            "start_time": "10:19AM",
            "end_time": "10:49AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Robert",
            "start_time": "11:15AM",
            "end_time": "1:15PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Joseph",
            "start_time": "1:24PM",
            "end_time": "3:09PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Amanda",
            "start_time": "3:25PM",
            "end_time": "5:10PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Karen",
            "start_time": "5:30PM",
            "end_time": "7:15PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Nancy",
            "start_time": "7:31PM",
            "end_time": "9:16PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Presidio\": {\n        \"Marina District\": 11,\n        \"The Castro\": 21,\n        \"Fisherman's Wharf\": 19,\n        \"Bayview\": 31,\n        \"Pacific Heights\": 11,\n        \"Mission District\": 26,\n        \"Alamo Square\": 19,\n        \"Golden Gate Park\": 12\n    },\n    \"Marina District\": {\n        \"Presidio\": 10,\n        \"The Castro\": 22,\n        \"Fisherman's Wharf\": 10,\n        \"Bayview\": 27,\n        \"Pacific Heights\": 7,\n        \"Mission District\": 20,\n        \"Alamo Square\": 15,\n        \"Golden Gate Park\": 18\n    },\n    \"The Castro\": {\n        \"Presidio\": 20,\n        \"Marina District\": 21,\n        \"Fisherman's Wharf\": 24,\n        \"Bayview\": 19,\n        \"Pacific Heights\": 16,\n        \"Mission District\": 7,\n        \"Alamo Square\": 8,\n        \"Golden Gate Park\": 11\n    },\n    \"Fisherman's Wharf\": {\n        \"Presidio\": 17,\n        \"Marina District\": 9,\n        \"The Castro\": 27,\n        \"Bayview\": 26,\n        \"Pacific Heights\": 12,\n        \"Mission District\": 22,\n        \"Alamo Square\": 21,\n        \"Golden Gate Park\": 25\n    },\n    \"Bayview\": {\n        \"Presidio\": 32,\n        \"Marina District\": 27,\n        \"The Castro\": 19,\n        \"Fisherman's Wharf\": 25,\n        \"Pacific Heights\": 23,\n        \"Mission District\": 13,\n        \"Alamo Square\": 16,\n        \"Golden Gate Park\": 22\n    },\n    \"Pacific Heights\": {\n        \"Presidio\": 11,\n        \"Marina District\": 6,\n        \"The Castro\": 16,\n        \"Fisherman's Wharf\": 13,\n        \"Bayview\": 22,\n        \"Mission District\": 15,\n        \"Alamo Square\": 10,\n        \"Golden Gate Park\": 15\n    },\n    \"Mission District\": {\n        \"Presidio\": 25,\n        \"Marina District\": 19,\n        \"The Castro\": 7,\n        \"Fisherman's Wharf\": 22,\n        \"Bayview\": 14,\n        \"Pacific Heights\": 16,\n        \"Alamo Square\": 11,\n        \"Golden Gate Park\": 17\n    },\n    \"Alamo Square\": {\n        \"Presidio\": 17,\n        \"Marina District\": 15,\n        \"The Castro\": 8,\n        \"Fisherman's Wharf\": 19,\n        \"Bayview\": 16,\n        \"Pacific Heights\": 10,\n        \"Mission District\": 10,\n        \"Golden Gate Park\": 9\n    },\n    \"Golden Gate Park\": {\n        \"Presidio\": 11,\n        \"Marina District\": 16,\n        \"The Castro\": 13,\n        \"Fisherman's Wharf\": 24,\n        \"Bayview\": 23,\n        \"Pacific Heights\": 16,\n        \"Mission District\": 17,\n        \"Alamo Square\": 9\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Amanda\": {\"location\": \"Marina District\", \"start_time\": 14*60 + 45, \"end_time\": 19*60 + 30, \"min_duration\": 105},\n    \"Melissa\": {\"location\": \"The Castro\", \"start_time\": 9*60 + 30, \"end_time\": 17*60, \"min_duration\": 30},\n    \"Jeffrey\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 12*60 + 45, \"end_time\": 18*60 + 45, \"min_duration\": 120},\n    \"Matthew\": {\"location\": \"Bayview\", \"start_time\": 10*60 + 15, \"end_time\": 11*60 + 15, \"min_duration\": 30},\n    \"Nancy\": {\"location\": \"Pacific Heights\", \"start_time\": 17*60, \"end_time\": 21*60 + 30, \"min_duration\": 105},\n    \"Karen\": {\"location\": \"Mission District\", \"start_time\": 17*60 + 30, \"end_time\": 20*60 + 30, \"min_duration\": 105},\n    \"Robert\": {\"location\": \"Alamo Square\", \"start_time\": 11*60 + 15, \"end_time\": 17*60 + 30, \"min_duration\": 120},\n    \"Joseph\": {\"location\": \"Golden Gate Park\", \"start_time\": 8*60 + 30, \"end_time\": 21*60 + 15, \"min_duration\": 105}\n}\n\ndef calculate_schedule():\n    # Start at Presidio at 9:00 AM\n    schedule = [{\"action\": \"start\", \"location\": \"Presidio\", \"time\": \"9:00AM\"}]\n    current_time = 9*60\n\n    # Visit Melissa\n    if current_time < constraints[\"Melissa\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"The Castro\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"The Castro\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"The Castro\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Melissa\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"The Castro\", \"duration\": constraints[\"Melissa\"][\"min_duration\"], \"time\": f\"9:30AM\"})\n        current_time += constraints[\"Melissa\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"The Castro\", \"time\": f\"5:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Melissa\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"The Castro\", \"duration\": travel_distances[\"The Castro\"][\"Presidio\"], \"time\": f\"5:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"The Castro\"][\"Presidio\"]\n\n    # Visit Matthew\n    if current_time < constraints[\"Matthew\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Bayview\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Bayview\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Bayview\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Matthew\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Bayview\", \"duration\": constraints[\"Matthew\"][\"min_duration\"], \"time\": f\"10:15AM\"})\n        current_time += constraints[\"Matthew\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Bayview\", \"time\": f\"11:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Matthew\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_distances[\"Bayview\"][\"Presidio\"], \"time\": f\"11:{current_time//60:02d}AM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Bayview\"][\"Presidio\"]\n\n    # Visit Jeffrey\n    if current_time < constraints[\"Jeffrey\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Fisherman's Wharf\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Fisherman's Wharf\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Fisherman's Wharf\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Jeffrey\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Fisherman's Wharf\", \"duration\": constraints[\"Jeffrey\"][\"min_duration\"], \"time\": f\"12:45PM\"})\n        current_time += constraints[\"Jeffrey\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Fisherman's Wharf\", \"time\": f\"6:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Jeffrey\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Fisherman's Wharf\", \"duration\": travel_distances[\"Fisherman's Wharf\"][\"Presidio\"], \"time\": f\"6:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Fisherman's Wharf\"][\"Presidio\"]\n\n    # Visit Amanda\n    if current_time < constraints[\"Amanda\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Marina District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Marina District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Marina District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Amanda\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Marina District\", \"duration\": constraints[\"Amanda\"][\"min_duration\"], \"time\": f\"2:45PM\"})\n        current_time += constraints[\"Amanda\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Marina District\", \"time\": f\"7:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Amanda\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_distances[\"Marina District\"][\"Presidio\"], \"time\": f\"7:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Marina District\"][\"Presidio\"]\n\n    # Visit Nancy\n    if current_time < constraints[\"Nancy\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Pacific Heights\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Pacific Heights\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Pacific Heights\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Nancy\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Pacific Heights\", \"duration\": constraints[\"Nancy\"][\"min_duration\"], \"time\": f\"5:00PM\"})\n        current_time += constraints[\"Nancy\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Pacific Heights\", \"time\": f\"9:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Nancy\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Pacific Heights\", \"duration\": travel_distances[\"Pacific Heights\"][\"Presidio\"], \"time\": f\"9:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Pacific Heights\"][\"Presidio\"]\n\n    # Visit Karen\n    if current_time < constraints[\"Karen\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Mission District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Mission District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Karen\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Mission District\", \"duration\": constraints[\"Karen\"][\"min_duration\"], \"time\": f\"5:30PM\"})\n        current_time += constraints[\"Karen\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": f\"8:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Karen\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Mission District\", \"duration\": travel_distances[\"Mission District\"][\"Presidio\"], \"time\": f\"8:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Mission District\"][\"Presidio\"]\n\n    # Visit Robert\n    if current_time < constraints[\"Robert\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Alamo Square\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Alamo Square\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Alamo Square\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Robert\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Alamo Square\", \"duration\": constraints[\"Robert\"][\"min_duration\"], \"time\": f\"11:15AM\"})\n        current_time += constraints[\"Robert\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Alamo Square\", \"time\": f\"5:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Robert\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Alamo Square\", \"duration\": travel_distances[\"Alamo Square\"][\"Presidio\"], \"time\": f\"5:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Alamo Square\"][\"Presidio\"]\n\n    # Visit Joseph\n    if current_time < constraints[\"Joseph\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Golden Gate Park\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Golden Gate Park\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Joseph\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": constraints[\"Joseph\"][\"min_duration\"], \"time\": f\"8:30AM\"})\n        current_time += constraints[\"Joseph\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": f\"9:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Joseph\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_distances[\"Golden Gate Park\"][\"Presidio\"], \"time\": f\"9:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Golden Gate Park\"][\"Presidio\"]\n\n    return schedule\n\ndef main():\n    schedule = calculate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_715"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Sandra",
            "start_time": "2:45PM",
            "end_time": "3:30PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Steven",
            "start_time": "9:07AM",
            "end_time": "10:22AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Anthony",
            "start_time": "10:32AM",
            "end_time": "10:47AM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Sandra",
            "start_time": "2:45PM",
            "end_time": "3:30PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Stephanie",
            "start_time": "8:00PM",
            "end_time": "8:15PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Kevin",
            "start_time": "8:22PM",
            "end_time": "9:37PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Haight-Ashbury\": {\n        \"Russian Hill\": 17,\n        \"Fisherman's Wharf\": 23,\n        \"Nob Hill\": 15,\n        \"Golden Gate Park\": 7,\n        \"Alamo Square\": 5,\n        \"Pacific Heights\": 12\n    },\n    \"Russian Hill\": {\n        \"Haight-Ashbury\": 17,\n        \"Fisherman's Wharf\": 7,\n        \"Nob Hill\": 5,\n        \"Golden Gate Park\": 21,\n        \"Alamo Square\": 15,\n        \"Pacific Heights\": 7\n    },\n    \"Fisherman's Wharf\": {\n        \"Haight-Ashbury\": 22,\n        \"Russian Hill\": 7,\n        \"Nob Hill\": 11,\n        \"Golden Gate Park\": 25,\n        \"Alamo Square\": 20,\n        \"Pacific Heights\": 12\n    },\n    \"Nob Hill\": {\n        \"Haight-Ashbury\": 13,\n        \"Russian Hill\": 5,\n        \"Fisherman's Wharf\": 11,\n        \"Golden Gate Park\": 17,\n        \"Alamo Square\": 11,\n        \"Pacific Heights\": 8\n    },\n    \"Golden Gate Park\": {\n        \"Haight-Ashbury\": 7,\n        \"Russian Hill\": 19,\n        \"Fisherman's Wharf\": 24,\n        \"Nob Hill\": 20,\n        \"Alamo Square\": 10,\n        \"Pacific Heights\": 16\n    },\n    \"Alamo Square\": {\n        \"Haight-Ashbury\": 5,\n        \"Russian Hill\": 13,\n        \"Fisherman's Wharf\": 19,\n        \"Nob Hill\": 11,\n        \"Golden Gate Park\": 9,\n        \"Pacific Heights\": 10\n    },\n    \"Pacific Heights\": {\n        \"Haight-Ashbury\": 11,\n        \"Russian Hill\": 7,\n        \"Fisherman's Wharf\": 13,\n        \"Nob Hill\": 8,\n        \"Golden Gate Park\": 15,\n        \"Alamo Square\": 10\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Stephanie\": {\"location\": \"Russian Hill\", \"start_time\": 20*60, \"end_time\": 20*60 + 45, \"min_duration\": 15},\n    \"Kevin\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 19*60 + 15, \"end_time\": 22*60 + 45, \"min_duration\": 75},\n    \"Robert\": {\"location\": \"Nob Hill\", \"start_time\": 7*60 + 45, \"end_time\": 10*60 + 30, \"min_duration\": 90},\n    \"Steven\": {\"location\": \"Golden Gate Park\", \"start_time\": 8*60 + 30, \"end_time\": 17*60, \"min_duration\": 75},\n    \"Anthony\": {\"location\": \"Alamo Square\", \"start_time\": 7*60 + 45, \"end_time\": 19*60 + 45, \"min_duration\": 15},\n    \"Sandra\": {\"location\": \"Pacific Heights\", \"start_time\": 14*60 + 45, \"end_time\": 22*60 + 45, \"min_duration\": 45}\n}\n\ndef calculate_schedule():\n    # Start at Haight-Ashbury at 9:00 AM\n    schedule = [{\"action\": \"start\", \"location\": \"Haight-Ashbury\", \"time\": \"9:00AM\"}]\n    current_time = 9*60\n\n    # Visit Robert\n    if current_time < constraints[\"Robert\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Nob Hill\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Nob Hill\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Nob Hill\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Robert\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Nob Hill\", \"duration\": constraints[\"Robert\"][\"min_duration\"], \"time\": f\"7:45AM\"})\n        current_time += constraints[\"Robert\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Nob Hill\", \"time\": f\"10:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Robert\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Nob Hill\", \"duration\": travel_distances[\"Nob Hill\"][\"Haight-Ashbury\"], \"time\": f\"10:{current_time//60:02d}AM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Nob Hill\"][\"Haight-Ashbury\"]\n\n    # Visit Steven\n    if current_time < constraints[\"Steven\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Golden Gate Park\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Golden Gate Park\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Steven\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": constraints[\"Steven\"][\"min_duration\"], \"time\": f\"8:30AM\"})\n        current_time += constraints[\"Steven\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": f\"5:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Steven\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_distances[\"Golden Gate Park\"][\"Haight-Ashbury\"], \"time\": f\"5:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Golden Gate Park\"][\"Haight-Ashbury\"]\n\n    # Visit Anthony\n    if current_time < constraints[\"Anthony\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Alamo Square\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Alamo Square\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Alamo Square\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Anthony\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Alamo Square\", \"duration\": constraints[\"Anthony\"][\"min_duration\"], \"time\": f\"7:45AM\"})\n        current_time += constraints[\"Anthony\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Alamo Square\", \"time\": f\"7:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Anthony\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Alamo Square\", \"duration\": travel_distances[\"Alamo Square\"][\"Haight-Ashbury\"], \"time\": f\"7:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Alamo Square\"][\"Haight-Ashbury\"]\n\n    # Visit Sandra\n    if current_time < constraints[\"Sandra\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Pacific Heights\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Pacific Heights\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Pacific Heights\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Sandra\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Pacific Heights\", \"duration\": constraints[\"Sandra\"][\"min_duration\"], \"time\": f\"2:45PM\"})\n        current_time += constraints[\"Sandra\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Pacific Heights\", \"time\": f\"9:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Sandra\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Pacific Heights\", \"duration\": travel_distances[\"Pacific Heights\"][\"Haight-Ashbury\"], \"time\": f\"9:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Pacific Heights\"][\"Haight-Ashbury\"]\n\n    # Visit Stephanie\n    if current_time < constraints[\"Stephanie\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Russian Hill\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Russian Hill\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Stephanie\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Russian Hill\", \"duration\": constraints[\"Stephanie\"][\"min_duration\"], \"time\": f\"8:00PM\"})\n        current_time += constraints[\"Stephanie\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": f\"8:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Stephanie\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Russian Hill\", \"duration\": travel_distances[\"Russian Hill\"][\"Haight-Ashbury\"], \"time\": f\"8:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Russian Hill\"][\"Haight-Ashbury\"]\n\n    # Visit Kevin\n    if current_time < constraints[\"Kevin\"][\"start_time\"]:\n        travel_time = travel_distances[\"Haight-Ashbury\"][\"Fisherman's Wharf\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Fisherman's Wharf\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Fisherman's Wharf\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Kevin\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Fisherman's Wharf\", \"duration\": constraints[\"Kevin\"][\"min_duration\"], \"time\": f\"7:15PM\"})\n        current_time += constraints[\"Kevin\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Fisherman's Wharf\", \"time\": f\"9:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Kevin\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Fisherman's Wharf\", \"duration\": travel_distances[\"Fisherman's Wharf\"][\"Haight-Ashbury\"], \"time\": f\"9:{current_time//60:02d}PM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_distances[\"Fisherman's Wharf\"][\"Haight-Ashbury\"]\n\n    return schedule\n\ndef main():\n    schedule = calculate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_577"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Karen",
            "start_time": "2:15PM",
            "end_time": "2:45PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Elizabeth",
            "start_time": "10:00AM",
            "end_time": "11:15AM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Joseph",
            "start_time": "11:45AM",
            "end_time": "1:45PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Richard",
            "start_time": "2:30PM",
            "end_time": "3:00PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Kimberly",
            "start_time": "3:22PM",
            "end_time": "5:07PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Karen",
            "start_time": "5:18PM",
            "end_time": "5:48PM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Helen",
            "start_time": "6:12PM",
            "end_time": "7:57PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Ashley",
            "start_time": "8:21PM",
            "end_time": "9:06PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Robert",
            "start_time": "9:45PM",
            "end_time": "10:45PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Marina District\": {\n        \"Mission District\": 20,\n        \"Fisherman's Wharf\": 10,\n        \"Presidio\": 10,\n        \"Union Square\": 16,\n        \"Sunset District\": 19,\n        \"Financial District\": 17,\n        \"Haight-Ashbury\": 16,\n        \"Russian Hill\": 8\n    },\n    \"Mission District\": {\n        \"Marina District\": 19,\n        \"Fisherman's Wharf\": 22,\n        \"Presidio\": 25,\n        \"Union Square\": 15,\n        \"Sunset District\": 24,\n        \"Financial District\": 15,\n        \"Haight-Ashbury\": 12,\n        \"Russian Hill\": 15\n    },\n    \"Fisherman's Wharf\": {\n        \"Marina District\": 9,\n        \"Mission District\": 22,\n        \"Presidio\": 17,\n        \"Union Square\": 13,\n        \"Sunset District\": 27,\n        \"Financial District\": 11,\n        \"Haight-Ashbury\": 22,\n        \"Russian Hill\": 7\n    },\n    \"Presidio\": {\n        \"Marina District\": 11,\n        \"Mission District\": 26,\n        \"Fisherman's Wharf\": 19,\n        \"Union Square\": 22,\n        \"Sunset District\": 15,\n        \"Financial District\": 23,\n        \"Haight-Ashbury\": 15,\n        \"Russian Hill\": 14\n    },\n    \"Union Square\": {\n        \"Marina District\": 18,\n        \"Mission District\": 14,\n        \"Fisherman's Wharf\": 15,\n        \"Presidio\": 24,\n        \"Sunset District\": 27,\n        \"Financial District\": 9,\n        \"Haight-Ashbury\": 18,\n        \"Russian Hill\": 13\n    },\n    \"Sunset District\": {\n        \"Marina District\": 21,\n        \"Mission District\": 25,\n        \"Fisherman's Wharf\": 29,\n        \"Presidio\": 16,\n        \"Union Square\": 30,\n        \"Financial District\": 30,\n        \"Haight-Ashbury\": 15,\n        \"Russian Hill\": 24\n    },\n    \"Financial District\": {\n        \"Marina District\": 15,\n        \"Mission District\": 17,\n        \"Fisherman's Wharf\": 10,\n        \"Presidio\": 22,\n        \"Union Square\": 9,\n        \"Sunset District\": 30,\n        \"Haight-Ashbury\": 19,\n        \"Russian Hill\": 11\n    },\n    \"Haight-Ashbury\": {\n        \"Marina District\": 17,\n        \"Mission District\": 11,\n        \"Fisherman's Wharf\": 23,\n        \"Presidio\": 15,\n        \"Union Square\": 19,\n        \"Sunset District\": 15,\n        \"Financial District\": 21,\n        \"Russian Hill\": 17\n    },\n    \"Russian Hill\": {\n        \"Marina District\": 7,\n        \"Mission District\": 16,\n        \"Fisherman's Wharf\": 7,\n        \"Presidio\": 14,\n        \"Union Square\": 10,\n        \"Sunset District\": 23,\n        \"Financial District\": 11,\n        \"Haight-Ashbury\": 17\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Karen\": {\"location\": \"Mission District\", \"start_time\": 14*60 + 15, \"end_time\": 22*60, \"min_duration\": 30},\n    \"Richard\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 14*60 + 30, \"end_time\": 17*60 + 30, \"min_duration\": 30},\n    \"Robert\": {\"location\": \"Presidio\", \"start_time\": 21*60 + 45, \"end_time\": 22*60 + 45, \"min_duration\": 60},\n    \"Joseph\": {\"location\": \"Union Square\", \"start_time\": 11*60 + 45, \"end_time\": 14*60 + 45, \"min_duration\": 120},\n    \"Helen\": {\"location\": \"Sunset District\", \"start_time\": 14*60 + 45, \"end_time\": 20*60 + 45, \"min_duration\": 105},\n    \"Elizabeth\": {\"location\": \"Financial District\", \"start_time\": 10*60, \"end_time\": 12*60 + 45, \"min_duration\": 75},\n    \"Kimberly\": {\"location\": \"Haight-Ashbury\", \"start_time\": 14*60 + 15, \"end_time\": 17*60 + 30, \"min_duration\": 105},\n    \"Ashley\": {\"location\": \"Russian Hill\", \"start_time\": 11*60 + 30, \"end_time\": 21*60 + 30, \"min_duration\": 45}\n}\n\ndef calculate_schedule():\n    # Start at Marina District at 9:00 AM\n    schedule = [{\"action\": \"start\", \"location\": \"Marina District\", \"time\": \"9:00AM\"}]\n    current_time = 9*60\n\n    # Visit Karen\n    if current_time < constraints[\"Karen\"][\"start_time\"]:\n        travel_time = travel_distances[\"Marina District\"][\"Mission District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Mission District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Karen\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Mission District\", \"duration\": constraints[\"Karen\"][\"min_duration\"], \"time\": f\"2:15PM\"})\n        current_time += constraints[\"Karen\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": f\"10:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Karen\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Mission District\", \"duration\": travel_distances[\"Mission District\"][\"Marina District\"], \"time\": f\"10:{current_time//60:02d}PM\", \"to\": \"Marina District\"})\n        current_time += travel_distances[\"Mission District\"][\"Marina District\"]\n\n    # Visit Richard\n    if current_time < constraints[\"Richard\"][\"start_time\"]:\n        travel_time = travel_distances[\"Marina District\"][\"Fisherman's Wharf\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Fisherman's Wharf\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Fisherman's Wharf\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Richard\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Fisherman's Wharf\", \"duration\": constraints[\"Richard\"][\"min_duration\"], \"time\": f\"2:30PM\"})\n        current_time += constraints[\"Richard\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Fisherman's Wharf\", \"time\": f\"5:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Richard\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Fisherman's Wharf\", \"duration\": travel_distances[\"Fisherman's Wharf\"][\"Marina District\"], \"time\": f\"5:{current_time//60:02d}PM\", \"to\": \"Marina District\"})\n        current_time += travel_distances[\"Fisherman's Wharf\"][\"Marina District\"]\n\n    # Visit Robert\n    if current_time < constraints[\"Robert\"][\"start_time\"]:\n        travel_time = travel_distances[\"Marina District\"][\"Presidio\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Presidio\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Presidio\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Robert\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Presidio\", \"duration\": constraints[\"Robert\"][\"min_duration\"], \"time\": f\"9:45PM\"})\n        current_time += constraints[\"Robert\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Presidio\", \"time\": f\"10:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Robert\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_distances[\"Presidio\"][\"Marina District\"], \"time\": f\"10:{current_time//60:02d}PM\", \"to\": \"Marina District\"})\n        current_time += travel_distances[\"Presidio\"][\"Marina District\"]\n\n    # Visit Joseph\n    if current_time < constraints[\"Joseph\"][\"start_time\"]:\n        travel_time = travel_distances[\"Marina District\"][\"Union Square\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Union Square\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Joseph\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Union Square\", \"duration\": constraints[\"Joseph\"][\"min_duration\"], \"time\": f\"11:45AM\"})\n        current_time += constraints[\"Joseph\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": f\"2:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Joseph\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_distances[\"Union Square\"][\"Marina District\"], \"time\": f\"2:{current_time//60:02d}PM\", \"to\": \"Marina District\"})\n        current_time += travel_distances[\"Union Square\"][\"Marina District\"]\n\n    # Visit Helen\n    if current_time < constraints[\"Helen\"][\"start_time\"]:\n        travel_time = travel_distances[\"Marina District\"][\"Sunset District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Sunset District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Sunset District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Helen\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Sunset District\", \"duration\": constraints[\"Helen\"][\"min_duration\"], \"time\": f\"2:45PM\"})\n        current_time += constraints[\"Helen\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Sunset District\", \"time\": f\"8:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Helen\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Sunset District\", \"duration\": travel_distances[\"Sunset District\"][\"Marina District\"], \"time\": f\"8:{current_time//60:02d}PM\", \"to\": \"Marina District\"})\n        current_time += travel_distances[\"Sunset District\"][\"Marina District\"]\n\n    # Visit Elizabeth\n    if current_time < constraints[\"Elizabeth\"][\"start_time\"]:\n        travel_time = travel_distances[\"Marina District\"][\"Financial District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Financial District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Elizabeth\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Financial District\", \"duration\": constraints[\"Elizabeth\"][\"min_duration\"], \"time\": f\"10:00AM\"})\n        current_time += constraints[\"Elizabeth\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": f\"12:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Elizabeth\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_distances[\"Financial District\"][\"Marina District\"], \"time\": f\"12:{current_time//60:02d}PM\", \"to\": \"Marina District\"})\n        current_time += travel_distances[\"Financial District\"][\"Marina District\"]\n\n    # Visit Kimberly\n    if current_time < constraints[\"Kimberly\"][\"start_time\"]:\n        travel_time = travel_distances[\"Marina District\"][\"Haight-Ashbury\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Haight-Ashbury\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Haight-Ashbury\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Kimberly\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Haight-Ashbury\", \"duration\": constraints[\"Kimberly\"][\"min_duration\"], \"time\": f\"2:15PM\"})\n        current_time += constraints[\"Kimberly\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Haight-Ashbury\", \"time\": f\"5:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Kimberly\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_distances[\"Haight-Ashbury\"][\"Marina District\"], \"time\": f\"5:{current_time//60:02d}PM\", \"to\": \"Marina District\"})\n        current_time += travel_distances[\"Haight-Ashbury\"][\"Marina District\"]\n\n    # Visit Ashley\n    if current_time < constraints[\"Ashley\"][\"start_time\"]:\n        travel_time = travel_distances[\"Marina District\"][\"Russian Hill\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Russian Hill\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Ashley\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Russian Hill\", \"duration\": constraints[\"Ashley\"][\"min_duration\"], \"time\": f\"11:30AM\"})\n        current_time += constraints[\"Ashley\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": f\"9:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Ashley\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Russian Hill\", \"duration\": travel_distances[\"Russian Hill\"][\"Marina District\"], \"time\": f\"9:{current_time//60:02d}PM\", \"to\": \"Marina District\"})\n        current_time += travel_distances[\"Russian Hill\"][\"Marina District\"]\n\n    return schedule\n\ndef main():\n    schedule = calculate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_728"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Jeffrey",
            "start_time": "10:15AM",
            "end_time": "11:45AM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Melissa",
            "start_time": "5:45PM",
            "end_time": "6:00PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "George",
            "start_time": "7:00PM",
            "end_time": "8:15PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Jeffrey",
            "start_time": "10:15AM",
            "end_time": "11:45AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Ronald",
            "start_time": "12:06PM",
            "end_time": "2:06PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Margaret",
            "start_time": "2:22PM",
            "end_time": "3:52PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Richard",
            "start_time": "3:59PM",
            "end_time": "4:14PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Laura",
            "start_time": "4:34PM",
            "end_time": "5:34PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Melissa",
            "start_time": "5:55PM",
            "end_time": "6:10PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "George",
            "start_time": "7:00PM",
            "end_time": "8:15PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Presidio\": {\n        \"Fisherman's Wharf\": 19,\n        \"Alamo Square\": 19,\n        \"Financial District\": 23,\n        \"Union Square\": 22,\n        \"Sunset District\": 15,\n        \"Embarcadero\": 20,\n        \"Golden Gate Park\": 12,\n        \"Chinatown\": 21,\n        \"Richmond District\": 7\n    },\n    \"Fisherman's Wharf\": {\n        \"Presidio\": 17,\n        \"Alamo Square\": 21,\n        \"Financial District\": 11,\n        \"Union Square\": 13,\n        \"Sunset District\": 27,\n        \"Embarcadero\": 8,\n        \"Golden Gate Park\": 25,\n        \"Chinatown\": 12,\n        \"Richmond District\": 18\n    },\n    \"Alamo Square\": {\n        \"Presidio\": 17,\n        \"Fisherman's Wharf\": 19,\n        \"Financial District\": 17,\n        \"Union Square\": 14,\n        \"Sunset District\": 16,\n        \"Embarcadero\": 16,\n        \"Golden Gate Park\": 9,\n        \"Chinatown\": 15,\n        \"Richmond District\": 11\n    },\n    \"Financial District\": {\n        \"Presidio\": 22,\n        \"Fisherman's Wharf\": 10,\n        \"Alamo Square\": 17,\n        \"Union Square\": 9,\n        \"Sunset District\": 30,\n        \"Embarcadero\": 4,\n        \"Golden Gate Park\": 23,\n        \"Chinatown\": 5,\n        \"Richmond District\": 21\n    },\n    \"Union Square\": {\n        \"Presidio\": 24,\n        \"Fisherman's Wharf\": 15,\n        \"Alamo Square\": 15,\n        \"Financial District\": 9,\n        \"Sunset District\": 27,\n        \"Embarcadero\": 11,\n        \"Golden Gate Park\": 22,\n        \"Chinatown\": 7,\n        \"Richmond District\": 20\n    },\n    \"Sunset District\": {\n        \"Presidio\": 16,\n        \"Fisherman's Wharf\": 29,\n        \"Alamo Square\": 17,\n        \"Financial District\": 30,\n        \"Union Square\": 30,\n        \"Embarcadero\": 30,\n        \"Golden Gate Park\": 11,\n        \"Chinatown\": 30,\n        \"Richmond District\": 12\n    },\n    \"Embarcadero\": {\n        \"Presidio\": 20,\n        \"Fisherman's Wharf\": 6,\n        \"Alamo Square\": 19,\n        \"Financial District\": 5,\n        \"Union Square\": 10,\n        \"Sunset District\": 30,\n        \"Golden Gate Park\": 25,\n        \"Chinatown\": 7,\n        \"Richmond District\": 21\n    },\n    \"Golden Gate Park\": {\n        \"Presidio\": 11,\n        \"Fisherman's Wharf\": 24,\n        \"Alamo Square\": 9,\n        \"Financial District\": 26,\n        \"Union Square\": 22,\n        \"Sunset District\": 10,\n        \"Embarcadero\": 25,\n        \"Chinatown\": 23,\n        \"Richmond District\": 7\n    },\n    \"Chinatown\": {\n        \"Presidio\": 19,\n        \"Fisherman's Wharf\": 8,\n        \"Alamo Square\": 17,\n        \"Financial District\": 5,\n        \"Union Square\": 7,\n        \"Sunset District\": 29,\n        \"Embarcadero\": 5,\n        \"Golden Gate Park\": 23,\n        \"Richmond District\": 20\n    },\n    \"Richmond District\": {\n        \"Presidio\": 7,\n        \"Fisherman's Wharf\": 18,\n        \"Alamo Square\": 13,\n        \"Financial District\": 22,\n        \"Union Square\": 21,\n        \"Sunset District\": 11,\n        \"Embarcadero\": 19,\n        \"Golden Gate Park\": 9,\n        \"Chinatown\": 20\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Jeffrey\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 10*60 + 15, \"end_time\": 13*60, \"min_duration\": 90},\n    \"Ronald\": {\"location\": \"Alamo Square\", \"start_time\": 7*60 + 45, \"end_time\": 14*60 + 45, \"min_duration\": 120},\n    \"Jason\": {\"location\": \"Financial District\", \"start_time\": 10*60 + 45, \"end_time\": 16*60, \"min_duration\": 105},\n    \"Melissa\": {\"location\": \"Union Square\", \"start_time\": 17*60 + 45, \"end_time\": 17*60 + 15, \"min_duration\": 15},\n    \"Elizabeth\": {\"location\": \"Sunset District\", \"start_time\": 14*60 + 45, \"end_time\": 17*60 + 30, \"min_duration\": 105},\n    \"Margaret\": {\"location\": \"Embarcadero\", \"start_time\": 13*60 + 15, \"end_time\": 19*60, \"min_duration\": 90},\n    \"George\": {\"location\": \"Golden Gate Park\", \"start_time\": 19*60, \"end_time\": 22*60, \"min_duration\": 75},\n    \"Richard\": {\"location\": \"Chinatown\", \"start_time\": 9*60 + 30, \"end_time\": 21*60, \"min_duration\": 15},\n    \"Laura\": {\"location\": \"Richmond District\", \"start_time\": 9*60 + 45, \"end_time\": 18*60, \"min_duration\": 60}\n}\n\ndef calculate_schedule():\n    # Start at Presidio at 9:00 AM\n    schedule = [{\"action\": \"start\", \"location\": \"Presidio\", \"time\": \"9:00AM\"}]\n    current_time = 9*60\n\n    # Visit Jeffrey\n    if current_time < constraints[\"Jeffrey\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Fisherman's Wharf\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Fisherman's Wharf\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Fisherman's Wharf\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Jeffrey\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Fisherman's Wharf\", \"duration\": constraints[\"Jeffrey\"][\"min_duration\"], \"time\": f\"10:15AM\"})\n        current_time += constraints[\"Jeffrey\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Fisherman's Wharf\", \"time\": f\"1:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Jeffrey\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Fisherman's Wharf\", \"duration\": travel_distances[\"Fisherman's Wharf\"][\"Presidio\"], \"time\": f\"1:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Fisherman's Wharf\"][\"Presidio\"]\n\n    # Visit Ronald\n    if current_time < constraints[\"Ronald\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Alamo Square\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Alamo Square\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Alamo Square\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Ronald\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Alamo Square\", \"duration\": constraints[\"Ronald\"][\"min_duration\"], \"time\": f\"7:45AM\"})\n        current_time += constraints[\"Ronald\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Alamo Square\", \"time\": f\"2:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Ronald\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Alamo Square\", \"duration\": travel_distances[\"Alamo Square\"][\"Presidio\"], \"time\": f\"2:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Alamo Square\"][\"Presidio\"]\n\n    # Visit Jason\n    if current_time < constraints[\"Jason\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Financial District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Financial District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Jason\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Financial District\", \"duration\": constraints[\"Jason\"][\"min_duration\"], \"time\": f\"10:45AM\"})\n        current_time += constraints[\"Jason\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": f\"4:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Jason\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_distances[\"Financial District\"][\"Presidio\"], \"time\": f\"4:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Financial District\"][\"Presidio\"]\n\n    # Visit Melissa\n    if current_time < constraints[\"Melissa\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Union Square\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Union Square\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Melissa\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Union Square\", \"duration\": constraints[\"Melissa\"][\"min_duration\"], \"time\": f\"5:45PM\"})\n        current_time += constraints[\"Melissa\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": f\"6:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Melissa\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_distances[\"Union Square\"][\"Presidio\"], \"time\": f\"6:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Union Square\"][\"Presidio\"]\n\n    # Visit Elizabeth\n    if current_time < constraints[\"Elizabeth\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Sunset District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Sunset District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Sunset District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Elizabeth\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Sunset District\", \"duration\": constraints[\"Elizabeth\"][\"min_duration\"], \"time\": f\"2:45PM\"})\n        current_time += constraints[\"Elizabeth\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Sunset District\", \"time\": f\"5:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Elizabeth\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Sunset District\", \"duration\": travel_distances[\"Sunset District\"][\"Presidio\"], \"time\": f\"5:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Sunset District\"][\"Presidio\"]\n\n    # Visit Margaret\n    if current_time < constraints[\"Margaret\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Embarcadero\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Embarcadero\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Embarcadero\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Margaret\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Embarcadero\", \"duration\": constraints[\"Margaret\"][\"min_duration\"], \"time\": f\"1:15PM\"})\n        current_time += constraints[\"Margaret\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Embarcadero\", \"time\": f\"7:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Margaret\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Embarcadero\", \"duration\": travel_distances[\"Embarcadero\"][\"Presidio\"], \"time\": f\"7:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Embarcadero\"][\"Presidio\"]\n\n    # Visit George\n    if current_time < constraints[\"George\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Golden Gate Park\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Golden Gate Park\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"George\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": constraints[\"George\"][\"min_duration\"], \"time\": f\"7:00PM\"})\n        current_time += constraints[\"George\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": f\"10:{current_time//60:02d}PM\"})\n        current_time = constraints[\"George\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_distances[\"Golden Gate Park\"][\"Presidio\"], \"time\": f\"10:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Golden Gate Park\"][\"Presidio\"]\n\n    # Visit Richard\n    if current_time < constraints[\"Richard\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Chinatown\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Chinatown\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Chinatown\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Richard\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Chinatown\", \"duration\": constraints[\"Richard\"][\"min_duration\"], \"time\": f\"9:30AM\"})\n        current_time += constraints[\"Richard\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Chinatown\", \"time\": f\"9:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Richard\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Chinatown\", \"duration\": travel_distances[\"Chinatown\"][\"Presidio\"], \"time\": f\"9:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Chinatown\"][\"Presidio\"]\n\n    # Visit Laura\n    if current_time < constraints[\"Laura\"][\"start_time\"]:\n        travel_time = travel_distances[\"Presidio\"][\"Richmond District\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": f\"9:{current_time+travel_time//60:02d}AM\", \"to\": \"Richmond District\"})\n        current_time += travel_time\n        schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": f\"9:{current_time//60:02d}AM\"})\n        current_time = constraints[\"Laura\"][\"start_time\"]\n        schedule.append({\"action\": \"meet\", \"location\": \"Richmond District\", \"duration\": constraints[\"Laura\"][\"min_duration\"], \"time\": f\"9:45AM\"})\n        current_time += constraints[\"Laura\"][\"min_duration\"]\n        schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": f\"6:{current_time//60:02d}PM\"})\n        current_time = constraints[\"Laura\"][\"end_time\"]\n        schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_distances[\"Richmond District\"][\"Presidio\"], \"time\": f\"6:{current_time//60:02d}PM\", \"to\": \"Presidio\"})\n        current_time += travel_distances[\"Richmond District\"][\"Presidio\"]\n\n    return schedule\n\ndef main():\n    schedule = calculate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_831"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Betty",
            "start_time": "8:45AM",
            "end_time": "10:30AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Melissa",
            "start_time": "11:15AM",
            "end_time": "1:00PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Joshua",
            "start_time": "1:45PM",
            "end_time": "3:15PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Jeffrey",
            "start_time": "1:00PM",
            "end_time": "1:45PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "James",
            "start_time": "9:00AM",
            "end_time": "10:30AM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Anthony",
            "start_time": "1:00PM",
            "end_time": "2:15PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Timothy",
            "start_time": "2:00PM",
            "end_time": "3:30PM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Emily",
            "start_time": "9:30PM",
            "end_time": "11:30PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Betty",
            "start_time": "9:13AM",
            "end_time": "10:58AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Melissa",
            "start_time": "11:13AM",
            "end_time": "12:58PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Joshua",
            "start_time": "1:03PM",
            "end_time": "2:33PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Jeffrey",
            "start_time": "2:50PM",
            "end_time": "3:35PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "James",
            "start_time": "4:02PM",
            "end_time": "5:32PM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Emily",
            "start_time": "7:30PM",
            "end_time": "9:30PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Union Square\", \"Russian Hill\"): 13,\n    (\"Union Square\", \"Alamo Square\"): 15,\n    (\"Union Square\", \"Haight-Ashbury\"): 18,\n    (\"Union Square\", \"Marina District\"): 18,\n    (\"Union Square\", \"Bayview\"): 15,\n    (\"Union Square\", \"Chinatown\"): 7,\n    (\"Union Square\", \"Presidio\"): 24,\n    (\"Union Square\", \"Sunset District\"): 27,\n    (\"Russian Hill\", \"Union Square\"): 10,\n    (\"Russian Hill\", \"Alamo Square\"): 15,\n    (\"Russian Hill\", \"Haight-Ashbury\"): 17,\n    (\"Russian Hill\", \"Marina District\"): 7,\n    (\"Russian Hill\", \"Bayview\"): 23,\n    (\"Russian Hill\", \"Chinatown\"): 9,\n    (\"Russian Hill\", \"Presidio\"): 14,\n    (\"Russian Hill\", \"Sunset District\"): 23,\n    (\"Alamo Square\", \"Union Square\"): 14,\n    (\"Alamo Square\", \"Russian Hill\"): 13,\n    (\"Alamo Square\", \"Haight-Ashbury\"): 5,\n    (\"Alamo Square\", \"Marina District\"): 15,\n    (\"Alamo Square\", \"Bayview\"): 16,\n    (\"Alamo Square\", \"Chinatown\"): 15,\n    (\"Alamo Square\", \"Presidio\"): 17,\n    (\"Alamo Square\", \"Sunset District\"): 16,\n    (\"Haight-Ashbury\", \"Union Square\"): 19,\n    (\"Haight-Ashbury\", \"Russian Hill\"): 17,\n    (\"Haight-Ashbury\", \"Alamo Square\"): 5,\n    (\"Haight-Ashbury\", \"Marina District\"): 17,\n    (\"Haight-Ashbury\", \"Bayview\"): 18,\n    (\"Haight-Ashbury\", \"Chinatown\"): 19,\n    (\"Haight-Ashbury\", \"Presidio\"): 15,\n    (\"Haight-Ashbury\", \"Sunset District\"): 15,\n    (\"Marina District\", \"Union Square\"): 16,\n    (\"Marina District\", \"Russian Hill\"): 8,\n    (\"Marina District\", \"Alamo Square\"): 15,\n    (\"Marina District\", \"Haight-Ashbury\"): 16,\n    (\"Marina District\", \"Bayview\"): 27,\n    (\"Marina District\", \"Chinatown\"): 15,\n    (\"Marina District\", \"Presidio\"): 10,\n    (\"Marina District\", \"Sunset District\"): 19,\n    (\"Bayview\", \"Union Square\"): 18,\n    (\"Bayview\", \"Russian Hill\"): 23,\n    (\"Bayview\", \"Alamo Square\"): 16,\n    (\"Bayview\", \"Haight-Ashbury\"): 19,\n    (\"Bayview\", \"Marina District\"): 27,\n    (\"Bayview\", \"Chinatown\"): 19,\n    (\"Bayview\", \"Presidio\"): 32,\n    (\"Bayview\", \"Sunset District\"): 23,\n    (\"Chinatown\", \"Union Square\"): 7,\n    (\"Chinatown\", \"Russian Hill\"): 7,\n    (\"Chinatown\", \"Alamo Square\"): 17,\n    (\"Chinatown\", \"Haight-Ashbury\"): 19,\n    (\"Chinatown\", \"Marina District\"): 12,\n    (\"Chinatown\", \"Bayview\"): 20,\n    (\"Chinatown\", \"Presidio\"): 19,\n    (\"Chinatown\", \"Sunset District\"): 29,\n    (\"Presidio\", \"Union Square\"): 22,\n    (\"Presidio\", \"Russian Hill\"): 14,\n    (\"Presidio\", \"Alamo Square\"): 19,\n    (\"Presidio\", \"Haight-Ashbury\"): 15,\n    (\"Presidio\", \"Marina District\"): 11,\n    (\"Presidio\", \"Bayview\"): 31,\n    (\"Presidio\", \"Chinatown\"): 21,\n    (\"Presidio\", \"Sunset District\"): 15,\n    (\"Sunset District\", \"Union Square\"): 30,\n    (\"Sunset District\", \"Russian Hill\"): 24,\n    (\"Sunset District\", \"Alamo Square\"): 17,\n    (\"Sunset District\", \"Haight-Ashbury\"): 15,\n    (\"Sunset District\", \"Marina District\"): 21,\n    (\"Sunset District\", \"Bayview\"): 22,\n    (\"Sunset District\", \"Chinatown\"): 30,\n    (\"Sunset District\", \"Presidio\"): 16\n}\n\n# Meeting constraints\nconstraints = {\n    \"Betty\": {\"start\": \"7:00AM\", \"end\": \"4:45PM\", \"duration\": 105},\n    \"Melissa\": {\"start\": \"9:30AM\", \"end\": \"5:15PM\", \"duration\": 105},\n    \"Joshua\": {\"start\": \"12:15PM\", \"end\": \"7:00PM\", \"duration\": 90},\n    \"Jeffrey\": {\"start\": \"12:15PM\", \"end\": \"6:00PM\", \"duration\": 45},\n    \"James\": {\"start\": \"7:30AM\", \"end\": \"8:00PM\", \"duration\": 90},\n    \"Anthony\": {\"start\": \"11:45AM\", \"end\": \"1:30PM\", \"duration\": 75},\n    \"Timothy\": {\"start\": \"12:30PM\", \"end\": \"2:45PM\", \"duration\": 90},\n    \"Emily\": {\"start\": \"7:30PM\", \"end\": \"9:30PM\", \"duration\": 120}\n}\n\n# Compute optimal meeting schedule\ndef compute_schedule():\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    schedule = []\n    current_location = \"Union Square\"\n\n    # Meet Betty\n    betty_start = datetime.strptime(constraints[\"Betty\"][\"start\"], \"%I:%M%p\")\n    betty_end = datetime.strptime(constraints[\"Betty\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Union Square\", \"Russian Hill\")]\n    wait_time = (betty_start - start_time).total_seconds() / 60\n    meet_time = betty_start + timedelta(minutes=constraints[\"Betty\"][\"duration\"])\n    schedule.append({\"action\": \"start\", \"location\": \"Union Square\", \"time\": start_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": \"Russian Hill\", \"duration\": travel_time, \"time\": start_time.strftime(\"%I:%M%p\"), \"to\": \"Russian Hill\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Russian Hill\", \"duration\": constraints[\"Betty\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"Russian Hill\"\n\n    # Meet Melissa\n    melissa_start = datetime.strptime(constraints[\"Melissa\"][\"start\"], \"%I:%M%p\")\n    melissa_end = datetime.strptime(constraints[\"Melissa\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Russian Hill\", \"Alamo Square\")]\n    wait_time = (melissa_start - meet_time).total_seconds() / 60\n    meet_time = melissa_start + timedelta(minutes=constraints[\"Melissa\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Alamo Square\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Alamo Square\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Alamo Square\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Alamo Square\", \"duration\": constraints[\"Melissa\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"Alamo Square\"\n\n    # Meet Joshua\n    joshua_start = datetime.strptime(constraints[\"Joshua\"][\"start\"], \"%I:%M%p\")\n    joshua_end = datetime.strptime(constraints[\"Joshua\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Alamo Square\", \"Haight-Ashbury\")]\n    wait_time = (joshua_start - meet_time).total_seconds() / 60\n    meet_time = joshua_start + timedelta(minutes=constraints[\"Joshua\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Haight-Ashbury\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Haight-Ashbury\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Haight-Ashbury\", \"duration\": constraints[\"Joshua\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"Haight-Ashbury\"\n\n    # Meet Jeffrey\n    jeffrey_start = datetime.strptime(constraints[\"Jeffrey\"][\"start\"], \"%I:%M%p\")\n    jeffrey_end = datetime.strptime(constraints[\"Jeffrey\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Haight-Ashbury\", \"Marina District\")]\n    wait_time = (jeffrey_start - meet_time).total_seconds() / 60\n    meet_time = jeffrey_start + timedelta(minutes=constraints[\"Jeffrey\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Marina District\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Marina District\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Marina District\", \"duration\": constraints[\"Jeffrey\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"Marina District\"\n\n    # Meet James\n    james_start = datetime.strptime(constraints[\"James\"][\"start\"], \"%I:%M%p\")\n    james_end = datetime.strptime(constraints[\"James\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Marina District\", \"Bayview\")]\n    wait_time = (james_start - meet_time).total_seconds() / 60\n    meet_time = james_start + timedelta(minutes=constraints[\"James\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Bayview\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Bayview\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Bayview\", \"duration\": constraints[\"James\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"Bayview\"\n\n    # Meet Anthony\n    anthony_start = datetime.strptime(constraints[\"Anthony\"][\"start\"], \"%I:%M%p\")\n    anthony_end = datetime.strptime(constraints[\"Anthony\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Bayview\", \"Chinatown\")]\n    wait_time = (anthony_start - meet_time).total_seconds() / 60\n    meet_time = anthony_start + timedelta(minutes=constraints[\"Anthony\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Chinatown\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Chinatown\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Chinatown\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Chinatown\", \"duration\": constraints[\"Anthony\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"Chinatown\"\n\n    # Meet Timothy\n    timothy_start = datetime.strptime(constraints[\"Timothy\"][\"start\"], \"%I:%M%p\")\n    timothy_end = datetime.strptime(constraints[\"Timothy\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Chinatown\", \"Presidio\")]\n    wait_time = (timothy_start - meet_time).total_seconds() / 60\n    meet_time = timothy_start + timedelta(minutes=constraints[\"Timothy\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Presidio\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Presidio\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Presidio\", \"duration\": constraints[\"Timothy\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"Presidio\"\n\n    # Meet Emily\n    emily_start = datetime.strptime(constraints[\"Emily\"][\"start\"], \"%I:%M%p\")\n    emily_end = datetime.strptime(constraints[\"Emily\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Presidio\", \"Sunset District\")]\n    wait_time = (emily_start - meet_time).total_seconds() / 60\n    meet_time = emily_start + timedelta(minutes=constraints[\"Emily\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Sunset District\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Sunset District\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Sunset District\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Sunset District\", \"duration\": constraints[\"Emily\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\n# Output schedule as JSON\nschedule = compute_schedule()\nprint(json.dumps({\"schedule\": schedule}, indent=4))\n\n```",
      "count": "meeting_planning_example_789"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Emily",
            "start_time": "1:30PM",
            "end_time": "3:15PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Barbara",
            "start_time": "5:45PM",
            "end_time": "6:45PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "William",
            "start_time": "7:00PM",
            "end_time": "8:45PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Emily",
            "start_time": "11:45AM",
            "end_time": "1:30PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Barbara",
            "start_time": "4:45PM",
            "end_time": "5:45PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"The Castro\", \"Alamo Square\"): 8,\n    (\"The Castro\", \"Union Square\"): 19,\n    (\"The Castro\", \"Chinatown\"): 20,\n    (\"Alamo Square\", \"The Castro\"): 8,\n    (\"Alamo Square\", \"Union Square\"): 14,\n    (\"Alamo Square\", \"Chinatown\"): 16,\n    (\"Union Square\", \"The Castro\"): 19,\n    (\"Union Square\", \"Alamo Square\"): 15,\n    (\"Union Square\", \"Chinatown\"): 7,\n    (\"Chinatown\", \"The Castro\"): 22,\n    (\"Chinatown\", \"Alamo Square\"): 17,\n    (\"Chinatown\", \"Union Square\"): 7\n}\n\n# Meeting constraints\nconstraints = {\n    \"Emily\": {\"start\": \"11:45AM\", \"end\": \"3:15PM\", \"duration\": 105},\n    \"Barbara\": {\"start\": \"4:45PM\", \"end\": \"6:15PM\", \"duration\": 60},\n    \"William\": {\"start\": \"5:15PM\", \"end\": \"7:00PM\", \"duration\": 105}\n}\n\n# Compute optimal meeting schedule\ndef compute_schedule():\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    schedule = []\n    current_location = \"The Castro\"\n\n    # Meet Emily\n    emily_start = datetime.strptime(constraints[\"Emily\"][\"start\"], \"%I:%M%p\")\n    emily_end = datetime.strptime(constraints[\"Emily\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"The Castro\", \"Alamo Square\")]\n    wait_time = (emily_start - start_time).total_seconds() / 60\n    meet_time = emily_start + timedelta(minutes=constraints[\"Emily\"][\"duration\"])\n    schedule.append({\"action\": \"start\", \"location\": \"The Castro\", \"time\": start_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": \"Alamo Square\", \"duration\": travel_time, \"time\": start_time.strftime(\"%I:%M%p\"), \"to\": \"Alamo Square\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Alamo Square\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Alamo Square\", \"duration\": constraints[\"Emily\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"Alamo Square\"\n\n    # Meet Barbara\n    barbara_start = datetime.strptime(constraints[\"Barbara\"][\"start\"], \"%I:%M%p\")\n    barbara_end = datetime.strptime(constraints[\"Barbara\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Alamo Square\", \"Union Square\")]\n    wait_time = (barbara_start - meet_time).total_seconds() / 60\n    meet_time = barbara_start + timedelta(minutes=constraints[\"Barbara\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Union Square\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Union Square\", \"duration\": constraints[\"Barbara\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"Union Square\"\n\n    # Meet William\n    william_start = datetime.strptime(constraints[\"William\"][\"start\"], \"%I:%M%p\")\n    william_end = datetime.strptime(constraints[\"William\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Union Square\", \"Chinatown\")]\n    wait_time = (william_start - meet_time).total_seconds() / 60\n    meet_time = william_start + timedelta(minutes=constraints[\"William\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Chinatown\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Chinatown\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Chinatown\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Chinatown\", \"duration\": constraints[\"William\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\n# Output schedule as JSON\nschedule = compute_schedule()\nprint(json.dumps({\"schedule\": schedule}, indent=4))\n```",
      "count": "meeting_planning_example_219"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "William",
            "start_time": "8:30AM",
            "end_time": "10:00AM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Stephanie",
            "start_time": "8:15AM",
            "end_time": "9:00AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Joseph",
            "start_time": "11:45AM",
            "end_time": "12:00PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Kimberly",
            "start_time": "4:15PM",
            "end_time": "4:45PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Karen",
            "start_time": "3:00PM",
            "end_time": "3:30PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Laura",
            "start_time": "9:30PM",
            "end_time": "11:15PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Daniel",
            "start_time": "9:30PM",
            "end_time": "9:45PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Joseph",
            "start_time": "11:30AM",
            "end_time": "11:45AM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Karen",
            "start_time": "2:30PM",
            "end_time": "3:00PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Kimberly",
            "start_time": "3:45PM",
            "end_time": "4:15PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Laura",
            "start_time": "7:45PM",
            "end_time": "9:30PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Fisherman's Wharf\", \"The Castro\"): 26,\n    (\"Fisherman's Wharf\", \"Golden Gate Park\"): 25,\n    (\"Fisherman's Wharf\", \"Embarcadero\"): 8,\n    (\"Fisherman's Wharf\", \"Russian Hill\"): 7,\n    (\"Fisherman's Wharf\", \"Nob Hill\"): 11,\n    (\"Fisherman's Wharf\", \"Alamo Square\"): 20,\n    (\"Fisherman's Wharf\", \"North Beach\"): 6,\n    (\"The Castro\", \"Fisherman's Wharf\"): 24,\n    (\"The Castro\", \"Golden Gate Park\"): 11,\n    (\"The Castro\", \"Embarcadero\"): 22,\n    (\"The Castro\", \"Russian Hill\"): 18,\n    (\"The Castro\", \"Nob Hill\"): 16,\n    (\"The Castro\", \"Alamo Square\"): 8,\n    (\"The Castro\", \"North Beach\"): 20,\n    (\"Golden Gate Park\", \"Fisherman's Wharf\"): 24,\n    (\"Golden Gate Park\", \"The Castro\"): 13,\n    (\"Golden Gate Park\", \"Embarcadero\"): 25,\n    (\"Golden Gate Park\", \"Russian Hill\"): 19,\n    (\"Golden Gate Park\", \"Nob Hill\"): 20,\n    (\"Golden Gate Park\", \"Alamo Square\"): 10,\n    (\"Golden Gate Park\", \"North Beach\"): 24,\n    (\"Embarcadero\", \"Fisherman's Wharf\"): 6,\n    (\"Embarcadero\", \"The Castro\"): 25,\n    (\"Embarcadero\", \"Golden Gate Park\"): 25,\n    (\"Embarcadero\", \"Russian Hill\"): 8,\n    (\"Embarcadero\", \"Nob Hill\"): 10,\n    (\"Embarcadero\", \"Alamo Square\"): 19,\n    (\"Embarcadero\", \"North Beach\"): 5,\n    (\"Russian Hill\", \"Fisherman's Wharf\"): 7,\n    (\"Russian Hill\", \"The Castro\"): 21,\n    (\"Russian Hill\", \"Golden Gate Park\"): 21,\n    (\"Russian Hill\", \"Embarcadero\"): 8,\n    (\"Russian Hill\", \"Nob Hill\"): 5,\n    (\"Russian Hill\", \"Alamo Square\"): 15,\n    (\"Russian Hill\", \"North Beach\"): 5,\n    (\"Nob Hill\", \"Fisherman's Wharf\"): 11,\n    (\"Nob Hill\", \"The Castro\"): 17,\n    (\"Nob Hill\", \"Golden Gate Park\"): 17,\n    (\"Nob Hill\", \"Embarcadero\"): 9,\n    (\"Nob Hill\", \"Russian Hill\"): 5,\n    (\"Nob Hill\", \"Alamo Square\"): 11,\n    (\"Nob Hill\", \"North Beach\"): 8,\n    (\"Alamo Square\", \"Fisherman's Wharf\"): 19,\n    (\"Alamo Square\", \"The Castro\"): 8,\n    (\"Alamo Square\", \"Golden Gate Park\"): 9,\n    (\"Alamo Square\", \"Embarcadero\"): 17,\n    (\"Alamo Square\", \"Russian Hill\"): 13,\n    (\"Alamo Square\", \"Nob Hill\"): 11,\n    (\"Alamo Square\", \"North Beach\"): 16,\n    (\"North Beach\", \"Fisherman's Wharf\"): 5,\n    (\"North Beach\", \"The Castro\"): 22,\n    (\"North Beach\", \"Golden Gate Park\"): 22,\n    (\"North Beach\", \"Embarcadero\"): 6,\n    (\"North Beach\", \"Russian Hill\"): 4,\n    (\"North Beach\", \"Nob Hill\"): 7,\n    (\"North Beach\", \"Alamo Square\"): 16\n}\n\n# Meeting constraints\nconstraints = {\n    \"Laura\": {\"start\": \"7:45PM\", \"end\": \"9:30PM\", \"duration\": 105},\n    \"Daniel\": {\"start\": \"9:15PM\", \"end\": \"9:45PM\", \"duration\": 15},\n    \"William\": {\"start\": \"7:00AM\", \"end\": \"9:00AM\", \"duration\": 90},\n    \"Karen\": {\"start\": \"2:30PM\", \"end\": \"7:45PM\", \"duration\": 30},\n    \"Stephanie\": {\"start\": \"7:30AM\", \"end\": \"9:30AM\", \"duration\": 45},\n    \"Joseph\": {\"start\": \"11:30AM\", \"end\": \"12:45PM\", \"duration\": 15},\n    \"Kimberly\": {\"start\": \"3:45PM\", \"end\": \"7:15PM\", \"duration\": 30}\n}\n\n# Compute optimal meeting schedule\ndef compute_schedule():\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    schedule = []\n    current_location = \"Fisherman's Wharf\"\n\n    # Meet William\n    william_start = datetime.strptime(constraints[\"William\"][\"start\"], \"%I:%M%p\")\n    william_end = datetime.strptime(constraints[\"William\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Fisherman's Wharf\", \"Embarcadero\")]\n    wait_time = (william_start - start_time).total_seconds() / 60\n    meet_time = william_start + timedelta(minutes=constraints[\"William\"][\"duration\"])\n    schedule.append({\"action\": \"start\", \"location\": \"Fisherman's Wharf\", \"time\": start_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": \"Embarcadero\", \"duration\": travel_time, \"time\": start_time.strftime(\"%I:%M%p\"), \"to\": \"Embarcadero\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Embarcadero\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Embarcadero\", \"duration\": constraints[\"William\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"Embarcadero\"\n\n    # Meet Stephanie\n    stephanie_start = datetime.strptime(constraints[\"Stephanie\"][\"start\"], \"%I:%M%p\")\n    stephanie_end = datetime.strptime(constraints[\"Stephanie\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Embarcadero\", \"Nob Hill\")]\n    wait_time = (stephanie_start - meet_time).total_seconds() / 60\n    meet_time = stephanie_start + timedelta(minutes=constraints[\"Stephanie\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Nob Hill\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Nob Hill\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Nob Hill\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Nob Hill\", \"duration\": constraints[\"Stephanie\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"Nob Hill\"\n\n    # Meet Joseph\n    joseph_start = datetime.strptime(constraints[\"Joseph\"][\"start\"], \"%I:%M%p\")\n    joseph_end = datetime.strptime(constraints[\"Joseph\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Nob Hill\", \"Alamo Square\")]\n    wait_time = (joseph_start - meet_time).total_seconds() / 60\n    meet_time = joseph_start + timedelta(minutes=constraints[\"Joseph\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Alamo Square\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Alamo Square\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Alamo Square\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Alamo Square\", \"duration\": constraints[\"Joseph\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"Alamo Square\"\n\n    # Meet Kimberly\n    kimberly_start = datetime.strptime(constraints[\"Kimberly\"][\"start\"], \"%I:%M%p\")\n    kimberly_end = datetime.strptime(constraints[\"Kimberly\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Alamo Square\", \"North Beach\")]\n    wait_time = (kimberly_start - meet_time).total_seconds() / 60\n    meet_time = kimberly_start + timedelta(minutes=constraints[\"Kimberly\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"North Beach\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"North Beach\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"North Beach\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"North Beach\", \"duration\": constraints[\"Kimberly\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Karen\n    karen_start = datetime.strptime(constraints[\"Karen\"][\"start\"], \"%I:%M%p\")\n    karen_end = datetime.strptime(constraints[\"Karen\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"North Beach\", \"Russian Hill\")]\n    wait_time = (karen_start - meet_time).total_seconds() / 60\n    meet_time = karen_start + timedelta(minutes=constraints[\"Karen\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Russian Hill\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Russian Hill\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Russian Hill\", \"duration\": constraints[\"Karen\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Laura\n    laura_start = datetime.strptime(constraints[\"Laura\"][\"start\"], \"%I:%M%p\")\n    laura_end = datetime.strptime(constraints[\"Laura\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Russian Hill\", \"The Castro\")]\n    wait_time = (laura_start - meet_time).total_seconds() / 60\n    meet_time = laura_start + timedelta(minutes=constraints[\"Laura\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"The Castro\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"The Castro\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"The Castro\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"The Castro\", \"duration\": constraints[\"Laura\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Daniel\n    daniel_start = datetime.strptime(constraints[\"Daniel\"][\"start\"], \"%I:%M%p\")\n    daniel_end = datetime.strptime(constraints[\"Daniel\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"The Castro\", \"Golden Gate Park\")]\n    wait_time = (daniel_start - meet_time).total_seconds() / 60\n    meet_time = daniel_start + timedelta(minutes=constraints[\"Daniel\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": constraints[\"Daniel\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\n# Output schedule as JSON\nschedule = compute_schedule()\nprint(json.dumps({\"schedule\": schedule}, indent=4))\n```",
      "count": "meeting_planning_example_604"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Barbara",
            "start_time": "2:00PM",
            "end_time": "2:45PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Barbara",
            "start_time": "1:15PM",
            "end_time": "2:00PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Russian Hill\", \"Richmond District\"): 14,\n    (\"Richmond District\", \"Russian Hill\"): 13\n}\n\n# Meeting constraints\nconstraints = {\n    \"Barbara\": {\"start\": \"1:15PM\", \"end\": \"6:15PM\", \"duration\": 45}\n}\n\n# Compute optimal meeting schedule\ndef compute_schedule():\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    schedule = []\n    current_location = \"Russian Hill\"\n\n    # Meet Barbara\n    barbara_start = datetime.strptime(constraints[\"Barbara\"][\"start\"], \"%I:%M%p\")\n    barbara_end = datetime.strptime(constraints[\"Barbara\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Russian Hill\", \"Richmond District\")]\n    wait_time = (barbara_start - start_time).total_seconds() / 60\n    meet_time = barbara_start + timedelta(minutes=constraints[\"Barbara\"][\"duration\"])\n    schedule.append({\"action\": \"start\", \"location\": \"Russian Hill\", \"time\": start_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_time, \"time\": start_time.strftime(\"%I:%M%p\"), \"to\": \"Richmond District\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Richmond District\", \"duration\": constraints[\"Barbara\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\n# Output schedule as JSON\nschedule = compute_schedule()\nprint(json.dumps({\"schedule\": schedule}, indent=4))\n```",
      "count": "meeting_planning_example_52"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Barbara",
            "start_time": "9:00AM",
            "end_time": "9:45AM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Kenneth",
            "start_time": "1:30PM",
            "end_time": "3:00PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Kenneth",
            "start_time": "12:00PM",
            "end_time": "1:30PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Barbara",
            "start_time": "1:53PM",
            "end_time": "2:38PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Financial District\", \"Chinatown\"): 5,\n    (\"Financial District\", \"Golden Gate Park\"): 23,\n    (\"Chinatown\", \"Financial District\"): 5,\n    (\"Chinatown\", \"Golden Gate Park\"): 23,\n    (\"Golden Gate Park\", \"Financial District\"): 26,\n    (\"Golden Gate Park\", \"Chinatown\"): 23\n}\n\n# Meeting constraints\nconstraints = {\n    \"Kenneth\": {\"start\": \"12:00PM\", \"end\": \"3:00PM\", \"duration\": 90},\n    \"Barbara\": {\"start\": \"8:15AM\", \"end\": \"7:00PM\", \"duration\": 45}\n}\n\n# Compute optimal meeting schedule\ndef compute_schedule():\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    schedule = []\n    current_location = \"Financial District\"\n\n    # Meet Barbara\n    barbara_start = datetime.strptime(constraints[\"Barbara\"][\"start\"], \"%I:%M%p\")\n    barbara_end = datetime.strptime(constraints[\"Barbara\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Financial District\", \"Golden Gate Park\")]\n    wait_time = (barbara_start - start_time).total_seconds() / 60\n    meet_time = barbara_start + timedelta(minutes=constraints[\"Barbara\"][\"duration\"])\n    schedule.append({\"action\": \"start\", \"location\": \"Financial District\", \"time\": start_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_time, \"time\": start_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": constraints[\"Barbara\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"Golden Gate Park\"\n\n    # Meet Kenneth\n    kenny_start = datetime.strptime(constraints[\"Kenneth\"][\"start\"], \"%I:%M%p\")\n    kenny_end = datetime.strptime(constraints[\"Kenneth\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Golden Gate Park\", \"Chinatown\")]\n    wait_time = (kenny_start - meet_time).total_seconds() / 60\n    meet_time = kenny_start + timedelta(minutes=constraints[\"Kenneth\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Chinatown\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Chinatown\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Chinatown\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Chinatown\", \"duration\": constraints[\"Kenneth\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\n# Output schedule as JSON\nschedule = compute_schedule()\nprint(json.dumps({\"schedule\": schedule}, indent=4))\n```",
      "count": "meeting_planning_example_137"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Stephanie",
            "start_time": "11:30AM",
            "end_time": "12:45PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "David",
            "start_time": "1:15PM",
            "end_time": "3:15PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "James",
            "start_time": "5:00PM",
            "end_time": "7:00PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Elizabeth",
            "start_time": "12:30PM",
            "end_time": "1:30PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Robert",
            "start_time": "2:00PM",
            "end_time": "2:45PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Steven",
            "start_time": "5:45PM",
            "end_time": "6:00PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Sarah",
            "start_time": "6:15PM",
            "end_time": "7:30PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Brian",
            "start_time": "4:00PM",
            "end_time": "5:45PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Melissa",
            "start_time": "2:30PM",
            "end_time": "3:00PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Nancy",
            "start_time": "9:45AM",
            "end_time": "11:15AM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Nancy",
            "start_time": "9:16AM",
            "end_time": "10:46AM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Stephanie",
            "start_time": "10:59AM",
            "end_time": "12:14PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Elizabeth",
            "start_time": "12:33PM",
            "end_time": "1:33PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Robert",
            "start_time": "1:42PM",
            "end_time": "2:27PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Melissa",
            "start_time": "2:48PM",
            "end_time": "3:18PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "James",
            "start_time": "3:25PM",
            "end_time": "5:25PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Sarah",
            "start_time": "5:37PM",
            "end_time": "6:52PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Steven",
            "start_time": "7:15PM",
            "end_time": "7:30PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"The Castro\", \"North Beach\"): 20,\n    (\"The Castro\", \"Golden Gate Park\"): 11,\n    (\"The Castro\", \"Embarcadero\"): 22,\n    (\"The Castro\", \"Haight-Ashbury\"): 6,\n    (\"The Castro\", \"Richmond District\"): 16,\n    (\"The Castro\", \"Nob Hill\"): 16,\n    (\"The Castro\", \"Marina District\"): 21,\n    (\"The Castro\", \"Presidio\"): 20,\n    (\"The Castro\", \"Union Square\"): 19,\n    (\"The Castro\", \"Financial District\"): 21,\n    (\"North Beach\", \"The Castro\"): 23,\n    (\"North Beach\", \"Golden Gate Park\"): 22,\n    (\"North Beach\", \"Embarcadero\"): 6,\n    (\"North Beach\", \"Haight-Ashbury\"): 18,\n    (\"North Beach\", \"Richmond District\"): 18,\n    (\"North Beach\", \"Nob Hill\"): 7,\n    (\"North Beach\", \"Marina District\"): 9,\n    (\"North Beach\", \"Presidio\"): 17,\n    (\"North Beach\", \"Union Square\"): 7,\n    (\"North Beach\", \"Financial District\"): 8,\n    (\"Golden Gate Park\", \"The Castro\"): 13,\n    (\"Golden Gate Park\", \"North Beach\"): 23,\n    (\"Golden Gate Park\", \"Embarcadero\"): 25,\n    (\"Golden Gate Park\", \"Haight-Ashbury\"): 7,\n    (\"Golden Gate Park\", \"Richmond District\"): 7,\n    (\"Golden Gate Park\", \"Nob Hill\"): 20,\n    (\"Golden Gate Park\", \"Marina District\"): 16,\n    (\"Golden Gate Park\", \"Presidio\"): 11,\n    (\"Golden Gate Park\", \"Union Square\"): 22,\n    (\"Golden Gate Park\", \"Financial District\"): 26,\n    (\"Embarcadero\", \"The Castro\"): 25,\n    (\"Embarcadero\", \"North Beach\"): 5,\n    (\"Embarcadero\", \"Golden Gate Park\"): 25,\n    (\"Embarcadero\", \"Haight-Ashbury\"): 21,\n    (\"Embarcadero\", \"Richmond District\"): 21,\n    (\"Embarcadero\", \"Nob Hill\"): 10,\n    (\"Embarcadero\", \"Marina District\"): 12,\n    (\"Embarcadero\", \"Presidio\"): 20,\n    (\"Embarcadero\", \"Union Square\"): 10,\n    (\"Embarcadero\", \"Financial District\"): 4,\n    (\"Haight-Ashbury\", \"The Castro\"): 6,\n    (\"Haight-Ashbury\", \"North Beach\"): 19,\n    (\"Haight-Ashbury\", \"Golden Gate Park\"): 7,\n    (\"Haight-Ashbury\", \"Embarcadero\"): 20,\n    (\"Haight-Ashbury\", \"Richmond District\"): 10,\n    (\"Haight-Ashbury\", \"Nob Hill\"): 15,\n    (\"Haight-Ashbury\", \"Marina District\"): 17,\n    (\"Haight-Ashbury\", \"Presidio\"): 15,\n    (\"Haight-Ashbury\", \"Union Square\"): 19,\n    (\"Haight-Ashbury\", \"Financial District\"): 21,\n    (\"Richmond District\", \"The Castro\"): 16,\n    (\"Richmond District\", \"North Beach\"): 17,\n    (\"Richmond District\", \"Golden Gate Park\"): 9,\n    (\"Richmond District\", \"Embarcadero\"): 19,\n    (\"Richmond District\", \"Haight-Ashbury\"): 10,\n    (\"Richmond District\", \"Nob Hill\"): 17,\n    (\"Richmond District\", \"Marina District\"): 9,\n    (\"Richmond District\", \"Presidio\"): 7,\n    (\"Richmond District\", \"Union Square\"): 21,\n    (\"Richmond District\", \"Financial District\"): 22,\n    (\"Nob Hill\", \"The Castro\"): 17,\n    (\"Nob Hill\", \"North Beach\"): 8,\n    (\"Nob Hill\", \"Golden Gate Park\"): 17,\n    (\"Nob Hill\", \"Embarcadero\"): 9,\n    (\"Nob Hill\", \"Haight-Ashbury\"): 13,\n    (\"Nob Hill\", \"Richmond District\"): 14,\n    (\"Nob Hill\", \"Marina District\"): 11,\n    (\"Nob Hill\", \"Presidio\"): 17,\n    (\"Nob Hill\", \"Union Square\"): 7,\n    (\"Nob Hill\", \"Financial District\"): 9,\n    (\"Marina District\", \"The Castro\"): 22,\n    (\"Marina District\", \"North Beach\"): 11,\n    (\"Marina District\", \"Golden Gate Park\"): 18,\n    (\"Marina District\", \"Embarcadero\"): 14,\n    (\"Marina District\", \"Haight-Ashbury\"): 16,\n    (\"Marina District\", \"Richmond District\"): 11,\n    (\"Marina District\", \"Nob Hill\"): 12,\n    (\"Marina District\", \"Presidio\"): 10,\n    (\"Marina District\", \"Union Square\"): 16,\n    (\"Marina District\", \"Financial District\"): 17,\n    (\"Presidio\", \"The Castro\"): 21,\n    (\"Presidio\", \"North Beach\"): 18,\n    (\"Presidio\", \"Golden Gate Park\"): 12,\n    (\"Presidio\", \"Embarcadero\"): 20,\n    (\"Presidio\", \"Haight-Ashbury\"): 15,\n    (\"Presidio\", \"Richmond District\"): 7,\n    (\"Presidio\", \"Nob Hill\"): 18,\n    (\"Presidio\", \"Marina District\"): 11,\n    (\"Presidio\", \"Union Square\"): 22,\n    (\"Presidio\", \"Financial District\"): 23,\n    (\"Union Square\", \"The Castro\"): 17,\n    (\"Union Square\", \"North Beach\"): 10,\n    (\"Union Square\", \"Golden Gate Park\"): 22,\n    (\"Union Square\", \"Embarcadero\"): 11,\n    (\"Union Square\", \"Haight-Ashbury\"): 18,\n    (\"Union Square\", \"Richmond District\"): 20,\n    (\"Union Square\", \"Nob Hill\"): 9,\n    (\"Union Square\", \"Marina District\"): 18,\n    (\"Union Square\", \"Presidio\"): 24,\n    (\"Union Square\", \"Financial District\"): 9,\n    (\"Financial District\", \"The Castro\"): 20,\n    (\"Financial District\", \"North Beach\"): 7,\n    (\"Financial District\", \"Golden Gate Park\"): 23,\n    (\"Financial District\", \"Embarcadero\"): 4,\n    (\"Financial District\", \"Haight-Ashbury\"): 19,\n    (\"Financial District\", \"Richmond District\"): 21,\n    (\"Financial District\", \"Nob Hill\"): 8,\n    (\"Financial District\", \"Marina District\"): 15,\n    (\"Financial District\", \"Presidio\"): 22,\n    (\"Financial District\", \"Union Square\"): 9\n}\n\n# Meeting constraints\nconstraints = {\n    \"Steven\": {\"start\": \"5:30PM\", \"end\": \"8:30PM\", \"duration\": 15},\n    \"Sarah\": {\"start\": \"5:00PM\", \"end\": \"7:15PM\", \"duration\": 75},\n    \"Brian\": {\"start\": \"2:15PM\", \"end\": \"4:00PM\", \"duration\": 105},\n    \"Stephanie\": {\"start\": \"10:15AM\", \"end\": \"12:15PM\", \"duration\": 75},\n    \"Melissa\": {\"start\": \"2:00PM\", \"end\": \"7:30PM\", \"duration\": 30},\n    \"Nancy\": {\"start\": \"8:15AM\", \"end\": \"12:45PM\", \"duration\": 90},\n    \"David\": {\"start\": \"11:15AM\", \"end\": \"1:15PM\", \"duration\": 120},\n    \"James\": {\"start\": \"3:00PM\", \"end\": \"6:15PM\", \"duration\": 120},\n    \"Elizabeth\": {\"start\": \"11:30AM\", \"end\": \"9:00PM\", \"duration\": 60},\n    \"Robert\": {\"start\": \"1:15PM\", \"end\": \"3:15PM\", \"duration\": 45}\n}\n\n# Compute optimal meeting schedule\ndef compute_schedule():\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    schedule = []\n    current_location = \"The Castro\"\n\n    # Meet Stephanie\n    stephanie_start = datetime.strptime(constraints[\"Stephanie\"][\"start\"], \"%I:%M%p\")\n    stephanie_end = datetime.strptime(constraints[\"Stephanie\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"The Castro\", \"Haight-Ashbury\")]\n    wait_time = (stephanie_start - start_time).total_seconds() / 60\n    meet_time = stephanie_start + timedelta(minutes=constraints[\"Stephanie\"][\"duration\"])\n    schedule.append({\"action\": \"start\", \"location\": \"The Castro\", \"time\": start_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": start_time.strftime(\"%I:%M%p\"), \"to\": \"Haight-Ashbury\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Haight-Ashbury\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Haight-Ashbury\", \"duration\": constraints[\"Stephanie\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"Haight-Ashbury\"\n\n    # Meet David\n    david_start = datetime.strptime(constraints[\"David\"][\"start\"], \"%I:%M%p\")\n    david_end = datetime.strptime(constraints[\"David\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Haight-Ashbury\", \"Marina District\")]\n    wait_time = (david_start - meet_time).total_seconds() / 60\n    meet_time = david_start + timedelta(minutes=constraints[\"David\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Marina District\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Marina District\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Marina District\", \"duration\": constraints[\"David\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"Marina District\"\n\n    # Meet James\n    james_start = datetime.strptime(constraints[\"James\"][\"start\"], \"%I:%M%p\")\n    james_end = datetime.strptime(constraints[\"James\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Marina District\", \"Presidio\")]\n    wait_time = (james_start - meet_time).total_seconds() / 60\n    meet_time = james_start + timedelta(minutes=constraints[\"James\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Presidio\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Presidio\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Presidio\", \"duration\": constraints[\"James\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Elizabeth\n    elizabeth_start = datetime.strptime(constraints[\"Elizabeth\"][\"start\"], \"%I:%M%p\")\n    elizabeth_end = datetime.strptime(constraints[\"Elizabeth\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Presidio\", \"Union Square\")]\n    wait_time = (elizabeth_start - meet_time).total_seconds() / 60\n    meet_time = elizabeth_start + timedelta(minutes=constraints[\"Elizabeth\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Union Square\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Union Square\", \"duration\": constraints[\"Elizabeth\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Robert\n    robert_start = datetime.strptime(constraints[\"Robert\"][\"start\"], \"%I:%M%p\")\n    robert_end = datetime.strptime(constraints[\"Robert\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Union Square\", \"Financial District\")]\n    wait_time = (robert_start - meet_time).total_seconds() / 60\n    meet_time = robert_start + timedelta(minutes=constraints[\"Robert\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Financial District\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Financial District\", \"duration\": constraints[\"Robert\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Steven\n    steven_start = datetime.strptime(constraints[\"Steven\"][\"start\"], \"%I:%M%p\")\n    steven_end = datetime.strptime(constraints[\"Steven\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Financial District\", \"North Beach\")]\n    wait_time = (steven_start - meet_time).total_seconds() / 60\n    meet_time = steven_start + timedelta(minutes=constraints[\"Steven\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"North Beach\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"North Beach\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"North Beach\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"North Beach\", \"duration\": constraints[\"Steven\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Sarah\n    sarah_start = datetime.strptime(constraints[\"Sarah\"][\"start\"], \"%I:%M%p\")\n    sarah_end = datetime.strptime(constraints[\"Sarah\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"North Beach\", \"Golden Gate Park\")]\n    wait_time = (sarah_start - meet_time).total_seconds() / 60\n    meet_time = sarah_start + timedelta(minutes=constraints[\"Sarah\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": constraints[\"Sarah\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Brian\n    brian_start = datetime.strptime(constraints[\"Brian\"][\"start\"], \"%I:%M%p\")\n    brian_end = datetime.strptime(constraints[\"Brian\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Golden Gate Park\", \"Embarcadero\")]\n    wait_time = (brian_start - meet_time).total_seconds() / 60\n    meet_time = brian_start + timedelta(minutes=constraints[\"Brian\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Embarcadero\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Embarcadero\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Embarcadero\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Embarcadero\", \"duration\": constraints[\"Brian\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Melissa\n    melissa_start = datetime.strptime(constraints[\"Melissa\"][\"start\"], \"%I:%M%p\")\n    melissa_end = datetime.strptime(constraints[\"Melissa\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Embarcadero\", \"Richmond District\")]\n    wait_time = (melissa_start - meet_time).total_seconds() / 60\n    meet_time = melissa_start + timedelta(minutes=constraints[\"Melissa\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Richmond District\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Richmond District\", \"duration\": constraints[\"Melissa\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Nancy\n    nancy_start = datetime.strptime(constraints[\"Nancy\"][\"start\"], \"%I:%M%p\")\n    nancy_end = datetime.strptime(constraints[\"Nancy\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Richmond District\", \"Nob Hill\")]\n    wait_time = (nancy_start - meet_time).total_seconds() / 60\n    meet_time = nancy_start + timedelta(minutes=constraints[\"Nancy\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Nob Hill\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Nob Hill\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Nob Hill\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Nob Hill\", \"duration\": constraints[\"Nancy\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\n# Output schedule as JSON\nschedule = compute_schedule()\nprint(json.dumps({\"schedule\": schedule}, indent=4))\n```",
      "count": "meeting_planning_example_911"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Jeffrey",
            "start_time": "1:15PM",
            "end_time": "3:15PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Deborah",
            "start_time": "3:15PM",
            "end_time": "4:45PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Margaret",
            "start_time": "5:45PM",
            "end_time": "7:00PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Ronald",
            "start_time": "7:15PM",
            "end_time": "8:00PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Emily",
            "start_time": "7:15PM",
            "end_time": "7:30PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Jeffrey",
            "start_time": "11:15AM",
            "end_time": "1:15PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Deborah",
            "start_time": "1:45PM",
            "end_time": "3:15PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Margaret",
            "start_time": "4:30PM",
            "end_time": "5:45PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Ronald",
            "start_time": "6:30PM",
            "end_time": "7:15PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Emily",
            "start_time": "7:33PM",
            "end_time": "7:48PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Nob Hill\", \"Richmond District\"): 14,\n    (\"Nob Hill\", \"Financial District\"): 9,\n    (\"Nob Hill\", \"North Beach\"): 8,\n    (\"Nob Hill\", \"The Castro\"): 17,\n    (\"Nob Hill\", \"Golden Gate Park\"): 17,\n    (\"Richmond District\", \"Nob Hill\"): 17,\n    (\"Richmond District\", \"Financial District\"): 22,\n    (\"Richmond District\", \"North Beach\"): 18,\n    (\"Richmond District\", \"The Castro\"): 16,\n    (\"Richmond District\", \"Golden Gate Park\"): 9,\n    (\"Financial District\", \"Nob Hill\"): 8,\n    (\"Financial District\", \"Richmond District\"): 21,\n    (\"Financial District\", \"North Beach\"): 7,\n    (\"Financial District\", \"The Castro\"): 23,\n    (\"Financial District\", \"Golden Gate Park\"): 23,\n    (\"North Beach\", \"Nob Hill\"): 7,\n    (\"North Beach\", \"Richmond District\"): 18,\n    (\"North Beach\", \"Financial District\"): 8,\n    (\"North Beach\", \"The Castro\"): 22,\n    (\"North Beach\", \"Golden Gate Park\"): 22,\n    (\"The Castro\", \"Nob Hill\"): 16,\n    (\"The Castro\", \"Richmond District\"): 16,\n    (\"The Castro\", \"Financial District\"): 20,\n    (\"The Castro\", \"North Beach\"): 20,\n    (\"The Castro\", \"Golden Gate Park\"): 11,\n    (\"Golden Gate Park\", \"Nob Hill\"): 20,\n    (\"Golden Gate Park\", \"Richmond District\"): 7,\n    (\"Golden Gate Park\", \"Financial District\"): 26,\n    (\"Golden Gate Park\", \"North Beach\"): 24,\n    (\"Golden Gate Park\", \"The Castro\"): 13\n}\n\n# Meeting constraints\nconstraints = {\n    \"Emily\": {\"start\": \"7:00PM\", \"end\": \"9:00PM\", \"duration\": 15},\n    \"Margaret\": {\"start\": \"4:30PM\", \"end\": \"8:15PM\", \"duration\": 75},\n    \"Ronald\": {\"start\": \"6:30PM\", \"end\": \"7:30PM\", \"duration\": 45},\n    \"Deborah\": {\"start\": \"1:45PM\", \"end\": \"9:15PM\", \"duration\": 90},\n    \"Jeffrey\": {\"start\": \"11:15AM\", \"end\": \"2:30PM\", \"duration\": 120}\n}\n\n# Compute optimal meeting schedule\ndef compute_schedule():\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    schedule = []\n    current_location = \"Nob Hill\"\n\n    # Meet Jeffrey\n    jeffrey_start = datetime.strptime(constraints[\"Jeffrey\"][\"start\"], \"%I:%M%p\")\n    jeffrey_end = datetime.strptime(constraints[\"Jeffrey\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Nob Hill\", \"Golden Gate Park\")]\n    wait_time = (jeffrey_start - start_time).total_seconds() / 60\n    meet_time = jeffrey_start + timedelta(minutes=constraints[\"Jeffrey\"][\"duration\"])\n    schedule.append({\"action\": \"start\", \"location\": \"Nob Hill\", \"time\": start_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_time, \"time\": start_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": constraints[\"Jeffrey\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"Golden Gate Park\"\n\n    # Meet Deborah\n    deborah_start = datetime.strptime(constraints[\"Deborah\"][\"start\"], \"%I:%M%p\")\n    deborah_end = datetime.strptime(constraints[\"Deborah\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Golden Gate Park\", \"The Castro\")]\n    wait_time = (deborah_start - meet_time).total_seconds() / 60\n    meet_time = deborah_start + timedelta(minutes=constraints[\"Deborah\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"The Castro\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"The Castro\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"The Castro\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"The Castro\", \"duration\": constraints[\"Deborah\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n    current_location = \"The Castro\"\n\n    # Meet Margaret\n    margaret_start = datetime.strptime(constraints[\"Margaret\"][\"start\"], \"%I:%M%p\")\n    margaret_end = datetime.strptime(constraints[\"Margaret\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"The Castro\", \"Financial District\")]\n    wait_time = (margaret_start - meet_time).total_seconds() / 60\n    meet_time = margaret_start + timedelta(minutes=constraints[\"Margaret\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Financial District\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Financial District\", \"duration\": constraints[\"Margaret\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Ronald\n    ronald_start = datetime.strptime(constraints[\"Ronald\"][\"start\"], \"%I:%M%p\")\n    ronald_end = datetime.strptime(constraints[\"Ronald\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Financial District\", \"North Beach\")]\n    wait_time = (ronald_start - meet_time).total_seconds() / 60\n    meet_time = ronald_start + timedelta(minutes=constraints[\"Ronald\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"North Beach\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"North Beach\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"North Beach\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"North Beach\", \"duration\": constraints[\"Ronald\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Emily\n    emily_start = datetime.strptime(constraints[\"Emily\"][\"start\"], \"%I:%M%p\")\n    emily_end = datetime.strptime(constraints[\"Emily\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"North Beach\", \"Richmond District\")]\n    wait_time = (emily_start - meet_time).total_seconds() / 60\n    meet_time = emily_start + timedelta(minutes=constraints[\"Emily\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Richmond District\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Richmond District\", \"duration\": constraints[\"Emily\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\n# Output schedule as JSON\nschedule = compute_schedule()\nprint(json.dumps({\"schedule\": schedule}, indent=4))\n```",
      "count": "meeting_planning_example_433"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Timothy",
            "start_time": "10:15AM",
            "end_time": "11:30AM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "David",
            "start_time": "11:00AM",
            "end_time": "11:15AM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Robert",
            "start_time": "1:45PM",
            "end_time": "3:15PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "David",
            "start_time": "10:45AM",
            "end_time": "11:00AM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Timothy",
            "start_time": "11:12AM",
            "end_time": "12:27PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Robert",
            "start_time": "12:42PM",
            "end_time": "2:12PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Financial District\", \"Fisherman's Wharf\"): 10,\n    (\"Financial District\", \"Pacific Heights\"): 13,\n    (\"Financial District\", \"Mission District\"): 17,\n    (\"Fisherman's Wharf\", \"Financial District\"): 11,\n    (\"Fisherman's Wharf\", \"Pacific Heights\"): 12,\n    (\"Fisherman's Wharf\", \"Mission District\"): 22,\n    (\"Pacific Heights\", \"Financial District\"): 13,\n    (\"Pacific Heights\", \"Fisherman's Wharf\"): 13,\n    (\"Pacific Heights\", \"Mission District\"): 15,\n    (\"Mission District\", \"Financial District\"): 17,\n    (\"Mission District\", \"Fisherman's Wharf\"): 22,\n    (\"Mission District\", \"Pacific Heights\"): 16\n}\n\n# Meeting constraints\nconstraints = {\n    \"David\": {\"start\": \"10:45AM\", \"end\": \"3:30PM\", \"duration\": 15},\n    \"Timothy\": {\"start\": \"9:00AM\", \"end\": \"3:30PM\", \"duration\": 75},\n    \"Robert\": {\"start\": \"12:15PM\", \"end\": \"7:45PM\", \"duration\": 90}\n}\n\n# Compute optimal meeting schedule\ndef compute_schedule():\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    schedule = []\n    current_location = \"Financial District\"\n\n    # Meet Timothy\n    timothy_start = datetime.strptime(constraints[\"Timothy\"][\"start\"], \"%I:%M%p\")\n    timothy_end = datetime.strptime(constraints[\"Timothy\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Financial District\", \"Pacific Heights\")]\n    wait_time = (timothy_start - start_time).total_seconds() / 60\n    meet_time = timothy_start + timedelta(minutes=constraints[\"Timothy\"][\"duration\"])\n    schedule.append({\"action\": \"start\", \"location\": \"Financial District\", \"time\": start_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": \"Pacific Heights\", \"duration\": travel_time, \"time\": start_time.strftime(\"%I:%M%p\"), \"to\": \"Pacific Heights\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Pacific Heights\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Pacific Heights\", \"duration\": constraints[\"Timothy\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet David\n    david_start = datetime.strptime(constraints[\"David\"][\"start\"], \"%I:%M%p\")\n    david_end = datetime.strptime(constraints[\"David\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Pacific Heights\", \"Fisherman's Wharf\")]\n    wait_time = (david_start - meet_time).total_seconds() / 60\n    meet_time = david_start + timedelta(minutes=constraints[\"David\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Fisherman's Wharf\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Fisherman's Wharf\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Fisherman's Wharf\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Fisherman's Wharf\", \"duration\": constraints[\"David\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Robert\n    robert_start = datetime.strptime(constraints[\"Robert\"][\"start\"], \"%I:%M%p\")\n    robert_end = datetime.strptime(constraints[\"Robert\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Fisherman's Wharf\", \"Mission District\")]\n    wait_time = (robert_start - meet_time).total_seconds() / 60\n    meet_time = robert_start + timedelta(minutes=constraints[\"Robert\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Mission District\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Mission District\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Mission District\", \"duration\": constraints[\"Robert\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\n# Output schedule as JSON\nschedule = compute_schedule()\nprint(json.dumps({\"schedule\": schedule}, indent=4))\n```",
      "count": "meeting_planning_example_203"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Melissa",
            "start_time": "8:45AM",
            "end_time": "9:00AM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Nancy",
            "start_time": "9:30PM",
            "end_time": "11:15PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Emily",
            "start_time": "6:45PM",
            "end_time": "8:45PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Melissa",
            "start_time": "9:25AM",
            "end_time": "9:40AM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Emily",
            "start_time": "4:45PM",
            "end_time": "6:45PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Nancy",
            "start_time": "7:45PM",
            "end_time": "9:30PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Fisherman's Wharf\", \"Golden Gate Park\"): 25,\n    (\"Fisherman's Wharf\", \"Presidio\"): 17,\n    (\"Fisherman's Wharf\", \"Richmond District\"): 18,\n    (\"Golden Gate Park\", \"Fisherman's Wharf\"): 24,\n    (\"Golden Gate Park\", \"Presidio\"): 11,\n    (\"Golden Gate Park\", \"Richmond District\"): 7,\n    (\"Presidio\", \"Fisherman's Wharf\"): 19,\n    (\"Presidio\", \"Golden Gate Park\"): 12,\n    (\"Presidio\", \"Richmond District\"): 7,\n    (\"Richmond District\", \"Fisherman's Wharf\"): 18,\n    (\"Richmond District\", \"Golden Gate Park\"): 9,\n    (\"Richmond District\", \"Presidio\"): 7\n}\n\n# Meeting constraints\nconstraints = {\n    \"Melissa\": {\"start\": \"8:30AM\", \"end\": \"8:00PM\", \"duration\": 15},\n    \"Nancy\": {\"start\": \"7:45PM\", \"end\": \"10:00PM\", \"duration\": 105},\n    \"Emily\": {\"start\": \"4:45PM\", \"end\": \"10:00PM\", \"duration\": 120}\n}\n\n# Compute optimal meeting schedule\ndef compute_schedule():\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    schedule = []\n    current_location = \"Fisherman's Wharf\"\n\n    # Meet Melissa\n    melissa_start = datetime.strptime(constraints[\"Melissa\"][\"start\"], \"%I:%M%p\")\n    melissa_end = datetime.strptime(constraints[\"Melissa\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Fisherman's Wharf\", \"Golden Gate Park\")]\n    wait_time = (melissa_start - start_time).total_seconds() / 60\n    meet_time = melissa_start + timedelta(minutes=constraints[\"Melissa\"][\"duration\"])\n    schedule.append({\"action\": \"start\", \"location\": \"Fisherman's Wharf\", \"time\": start_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_time, \"time\": start_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": constraints[\"Melissa\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Nancy\n    nancy_start = datetime.strptime(constraints[\"Nancy\"][\"start\"], \"%I:%M%p\")\n    nancy_end = datetime.strptime(constraints[\"Nancy\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Golden Gate Park\", \"Presidio\")]\n    wait_time = (nancy_start - meet_time).total_seconds() / 60\n    meet_time = nancy_start + timedelta(minutes=constraints[\"Nancy\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Presidio\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Presidio\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Presidio\", \"duration\": constraints[\"Nancy\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Emily\n    emily_start = datetime.strptime(constraints[\"Emily\"][\"start\"], \"%I:%M%p\")\n    emily_end = datetime.strptime(constraints[\"Emily\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Presidio\", \"Richmond District\")]\n    wait_time = (emily_start - meet_time).total_seconds() / 60\n    meet_time = emily_start + timedelta(minutes=constraints[\"Emily\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Richmond District\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Richmond District\", \"duration\": constraints[\"Emily\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\n# Output schedule as JSON\nschedule = compute_schedule()\nprint(json.dumps({\"schedule\": schedule}, indent=4))\n```",
      "count": "meeting_planning_example_224"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Joshua",
            "start_time": "11:30AM",
            "end_time": "1:15PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Jeffrey",
            "start_time": "11:00AM",
            "end_time": "12:15PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Charles",
            "start_time": "12:45PM",
            "end_time": "2:45PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Joseph",
            "start_time": "8:00AM",
            "end_time": "9:00AM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Elizabeth",
            "start_time": "9:45AM",
            "end_time": "10:30AM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Matthew",
            "start_time": "11:45AM",
            "end_time": "12:30PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Carol",
            "start_time": "11:00AM",
            "end_time": "11:15AM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Paul",
            "start_time": "7:30PM",
            "end_time": "7:45PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Rebecca",
            "start_time": "5:45PM",
            "end_time": "6:30PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Joseph",
            "start_time": "9:15AM",
            "end_time": "10:15AM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Carol",
            "start_time": "10:45AM",
            "end_time": "11:00AM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Joshua",
            "start_time": "11:04AM",
            "end_time": "12:49PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Jeffrey",
            "start_time": "1:10PM",
            "end_time": "2:25PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Charles",
            "start_time": "2:43PM",
            "end_time": "4:43PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Matthew",
            "start_time": "5:05PM",
            "end_time": "5:50PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Paul",
            "start_time": "7:15PM",
            "end_time": "7:30PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Rebecca",
            "start_time": "7:41PM",
            "end_time": "8:26PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Marina District\", \"Embarcadero\"): 14,\n    (\"Marina District\", \"Bayview\"): 27,\n    (\"Marina District\", \"Union Square\"): 16,\n    (\"Marina District\", \"Chinatown\"): 15,\n    (\"Marina District\", \"Sunset District\"): 19,\n    (\"Marina District\", \"Golden Gate Park\"): 18,\n    (\"Marina District\", \"Financial District\"): 17,\n    (\"Marina District\", \"Haight-Ashbury\"): 16,\n    (\"Marina District\", \"Mission District\"): 20,\n    (\"Embarcadero\", \"Marina District\"): 12,\n    (\"Embarcadero\", \"Bayview\"): 21,\n    (\"Embarcadero\", \"Union Square\"): 10,\n    (\"Embarcadero\", \"Chinatown\"): 7,\n    (\"Embarcadero\", \"Sunset District\"): 30,\n    (\"Embarcadero\", \"Golden Gate Park\"): 25,\n    (\"Embarcadero\", \"Financial District\"): 5,\n    (\"Embarcadero\", \"Haight-Ashbury\"): 21,\n    (\"Embarcadero\", \"Mission District\"): 20,\n    (\"Bayview\", \"Marina District\"): 27,\n    (\"Bayview\", \"Embarcadero\"): 19,\n    (\"Bayview\", \"Union Square\"): 18,\n    (\"Bayview\", \"Chinatown\"): 19,\n    (\"Bayview\", \"Sunset District\"): 23,\n    (\"Bayview\", \"Golden Gate Park\"): 22,\n    (\"Bayview\", \"Financial District\"): 19,\n    (\"Bayview\", \"Haight-Ashbury\"): 19,\n    (\"Bayview\", \"Mission District\"): 13,\n    (\"Union Square\", \"Marina District\"): 18,\n    (\"Union Square\", \"Embarcadero\"): 11,\n    (\"Union Square\", \"Bayview\"): 15,\n    (\"Union Square\", \"Chinatown\"): 7,\n    (\"Union Square\", \"Sunset District\"): 27,\n    (\"Union Square\", \"Golden Gate Park\"): 22,\n    (\"Union Square\", \"Financial District\"): 9,\n    (\"Union Square\", \"Haight-Ashbury\"): 18,\n    (\"Union Square\", \"Mission District\"): 14,\n    (\"Chinatown\", \"Marina District\"): 12,\n    (\"Chinatown\", \"Embarcadero\"): 5,\n    (\"Chinatown\", \"Bayview\"): 20,\n    (\"Chinatown\", \"Union Square\"): 7,\n    (\"Chinatown\", \"Sunset District\"): 29,\n    (\"Chinatown\", \"Golden Gate Park\"): 23,\n    (\"Chinatown\", \"Financial District\"): 5,\n    (\"Chinatown\", \"Haight-Ashbury\"): 19,\n    (\"Chinatown\", \"Mission District\"): 17,\n    (\"Sunset District\", \"Marina District\"): 21,\n    (\"Sunset District\", \"Embarcadero\"): 30,\n    (\"Sunset District\", \"Bayview\"): 22,\n    (\"Sunset District\", \"Union Square\"): 30,\n    (\"Sunset District\", \"Chinatown\"): 30,\n    (\"Sunset District\", \"Golden Gate Park\"): 11,\n    (\"Sunset District\", \"Financial District\"): 30,\n    (\"Sunset District\", \"Haight-Ashbury\"): 15,\n    (\"Sunset District\", \"Mission District\"): 25,\n    (\"Golden Gate Park\", \"Marina District\"): 16,\n    (\"Golden Gate Park\", \"Embarcadero\"): 25,\n    (\"Golden Gate Park\", \"Bayview\"): 23,\n    (\"Golden Gate Park\", \"Union Square\"): 22,\n    (\"Golden Gate Park\", \"Chinatown\"): 23,\n    (\"Golden Gate Park\", \"Sunset District\"): 10,\n    (\"Golden Gate Park\", \"Financial District\"): 26,\n    (\"Golden Gate Park\", \"Haight-Ashbury\"): 7,\n    (\"Golden Gate Park\", \"Mission District\"): 17,\n    (\"Financial District\", \"Marina District\"): 15,\n    (\"Financial District\", \"Embarcadero\"): 4,\n    (\"Financial District\", \"Bayview\"): 19,\n    (\"Financial District\", \"Union Square\"): 9,\n    (\"Financial District\", \"Chinatown\"): 5,\n    (\"Financial District\", \"Sunset District\"): 30,\n    (\"Financial District\", \"Golden Gate Park\"): 23,\n    (\"Financial District\", \"Haight-Ashbury\"): 19,\n    (\"Financial District\", \"Mission District\"): 17,\n    (\"Haight-Ashbury\", \"Marina District\"): 17,\n    (\"Haight-Ashbury\", \"Embarcadero\"): 20,\n    (\"Haight-Ashbury\", \"Bayview\"): 18,\n    (\"Haight-Ashbury\", \"Union Square\"): 19,\n    (\"Haight-Ashbury\", \"Chinatown\"): 19,\n    (\"Haight-Ashbury\", \"Sunset District\"): 15,\n    (\"Haight-Ashbury\", \"Golden Gate Park\"): 7,\n    (\"Haight-Ashbury\", \"Financial District\"): 21,\n    (\"Haight-Ashbury\", \"Mission District\"): 11,\n    (\"Mission District\", \"Marina District\"): 19,\n    (\"Mission District\", \"Embarcadero\"): 19,\n    (\"Mission District\", \"Bayview\"): 14,\n    (\"Mission District\", \"Union Square\"): 15,\n    (\"Mission District\", \"Chinatown\"): 16,\n    (\"Mission District\", \"Sunset District\"): 24,\n    (\"Mission District\", \"Golden Gate Park\"): 17,\n    (\"Mission District\", \"Financial District\"): 15,\n    (\"Mission District\", \"Haight-Ashbury\"): 12\n}\n\n# Meeting constraints\nconstraints = {\n    \"Joshua\": {\"start\": \"9:45AM\", \"end\": \"6:00PM\", \"duration\": 105},\n    \"Jeffrey\": {\"start\": \"9:45AM\", \"end\": \"8:15PM\", \"duration\": 75},\n    \"Charles\": {\"start\": \"10:45AM\", \"end\": \"8:15PM\", \"duration\": 120},\n    \"Joseph\": {\"start\": \"7:00AM\", \"end\": \"3:30PM\", \"duration\": 60},\n    \"Elizabeth\": {\"start\": \"9:00AM\", \"end\": \"9:45AM\", \"duration\": 45},\n    \"Matthew\": {\"start\": \"11:00AM\", \"end\": \"7:30PM\", \"duration\": 45},\n    \"Carol\": {\"start\": \"10:45AM\", \"end\": \"11:15AM\", \"duration\": 15},\n    \"Paul\": {\"start\": \"7:15PM\", \"end\": \"8:30PM\", \"duration\": 15},\n    \"Rebecca\": {\"start\": \"5:00PM\", \"end\": \"9:45PM\", \"duration\": 45}\n}\n\n# Compute optimal meeting schedule\ndef compute_schedule():\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    schedule = []\n    current_location = \"Marina District\"\n\n    # Meet Joshua\n    joshua_start = datetime.strptime(constraints[\"Joshua\"][\"start\"], \"%I:%M%p\")\n    joshua_end = datetime.strptime(constraints[\"Joshua\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Marina District\", \"Embarcadero\")]\n    wait_time = (joshua_start - start_time).total_seconds() / 60\n    meet_time = joshua_start + timedelta(minutes=constraints[\"Joshua\"][\"duration\"])\n    schedule.append({\"action\": \"start\", \"location\": \"Marina District\", \"time\": start_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": \"Embarcadero\", \"duration\": travel_time, \"time\": start_time.strftime(\"%I:%M%p\"), \"to\": \"Embarcadero\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Embarcadero\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Embarcadero\", \"duration\": constraints[\"Joshua\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Jeffrey\n    jeffrey_start = datetime.strptime(constraints[\"Jeffrey\"][\"start\"], \"%I:%M%p\")\n    jeffrey_end = datetime.strptime(constraints[\"Jeffrey\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Embarcadero\", \"Bayview\")]\n    wait_time = (jeffrey_start - meet_time).total_seconds() / 60\n    meet_time = jeffrey_start + timedelta(minutes=constraints[\"Jeffrey\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Bayview\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Bayview\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Bayview\", \"duration\": constraints[\"Jeffrey\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Charles\n    charles_start = datetime.strptime(constraints[\"Charles\"][\"start\"], \"%I:%M%p\")\n    charles_end = datetime.strptime(constraints[\"Charles\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Bayview\", \"Union Square\")]\n    wait_time = (charles_start - meet_time).total_seconds() / 60\n    meet_time = charles_start + timedelta(minutes=constraints[\"Charles\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Union Square\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Union Square\", \"duration\": constraints[\"Charles\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Joseph\n    joseph_start = datetime.strptime(constraints[\"Joseph\"][\"start\"], \"%I:%M%p\")\n    joseph_end = datetime.strptime(constraints[\"Joseph\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Union Square\", \"Chinatown\")]\n    wait_time = (joseph_start - meet_time).total_seconds() / 60\n    meet_time = joseph_start + timedelta(minutes=constraints[\"Joseph\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Chinatown\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Chinatown\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Chinatown\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Chinatown\", \"duration\": constraints[\"Joseph\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Elizabeth\n    elizabeth_start = datetime.strptime(constraints[\"Elizabeth\"][\"start\"], \"%I:%M%p\")\n    elizabeth_end = datetime.strptime(constraints[\"Elizabeth\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Chinatown\", \"Sunset District\")]\n    wait_time = (elizabeth_start - meet_time).total_seconds() / 60\n    meet_time = elizabeth_start + timedelta(minutes=constraints[\"Elizabeth\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Sunset District\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Sunset District\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Sunset District\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Sunset District\", \"duration\": constraints[\"Elizabeth\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Matthew\n    matthew_start = datetime.strptime(constraints[\"Matthew\"][\"start\"], \"%I:%M%p\")\n    matthew_end = datetime.strptime(constraints[\"Matthew\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Sunset District\", \"Golden Gate Park\")]\n    wait_time = (matthew_start - meet_time).total_seconds() / 60\n    meet_time = matthew_start + timedelta(minutes=constraints[\"Matthew\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": constraints[\"Matthew\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Carol\n    carol_start = datetime.strptime(constraints[\"Carol\"][\"start\"], \"%I:%M%p\")\n    carol_end = datetime.strptime(constraints[\"Carol\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Golden Gate Park\", \"Financial District\")]\n    wait_time = (carol_start - meet_time).total_seconds() / 60\n    meet_time = carol_start + timedelta(minutes=constraints[\"Carol\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Financial District\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Financial District\", \"duration\": constraints[\"Carol\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Paul\n    paul_start = datetime.strptime(constraints[\"Paul\"][\"start\"], \"%I:%M%p\")\n    paul_end = datetime.strptime(constraints[\"Paul\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Financial District\", \"Haight-Ashbury\")]\n    wait_time = (paul_start - meet_time).total_seconds() / 60\n    meet_time = paul_start + timedelta(minutes=constraints[\"Paul\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Haight-Ashbury\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Haight-Ashbury\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Haight-Ashbury\", \"duration\": constraints[\"Paul\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Rebecca\n    rebecca_start = datetime.strptime(constraints[\"Rebecca\"][\"start\"], \"%I:%M%p\")\n    rebecca_end = datetime.strptime(constraints[\"Rebecca\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Haight-Ashbury\", \"Mission District\")]\n    wait_time = (rebecca_start - meet_time).total_seconds() / 60\n    meet_time = rebecca_start + timedelta(minutes=constraints[\"Rebecca\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Mission District\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Mission District\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Mission District\", \"duration\": constraints[\"Rebecca\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\n# Output schedule as JSON\nschedule = compute_schedule()\nprint(json.dumps({\"schedule\": schedule}, indent=4))\n```",
      "count": "meeting_planning_example_813"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Emily",
            "start_time": "4:45PM",
            "end_time": "5:30PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Margaret",
            "start_time": "9:00PM",
            "end_time": "11:00PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Emily",
            "start_time": "4:00PM",
            "end_time": "4:45PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Margaret",
            "start_time": "7:00PM",
            "end_time": "9:00PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"North Beach\", \"Union Square\"): 7,\n    (\"North Beach\", \"Russian Hill\"): 4,\n    (\"Union Square\", \"North Beach\"): 10,\n    (\"Union Square\", \"Russian Hill\"): 13,\n    (\"Russian Hill\", \"North Beach\"): 5,\n    (\"Russian Hill\", \"Union Square\"): 11\n}\n\n# Meeting constraints\nconstraints = {\n    \"Emily\": {\"start\": \"4:00PM\", \"end\": \"5:15PM\", \"duration\": 45},\n    \"Margaret\": {\"start\": \"7:00PM\", \"end\": \"9:00PM\", \"duration\": 120}\n}\n\n# Compute optimal meeting schedule\ndef compute_schedule():\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    schedule = []\n    current_location = \"North Beach\"\n\n    # Meet Emily\n    emily_start = datetime.strptime(constraints[\"Emily\"][\"start\"], \"%I:%M%p\")\n    emily_end = datetime.strptime(constraints[\"Emily\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"North Beach\", \"Union Square\")]\n    wait_time = (emily_start - start_time).total_seconds() / 60\n    meet_time = emily_start + timedelta(minutes=constraints[\"Emily\"][\"duration\"])\n    schedule.append({\"action\": \"start\", \"location\": \"North Beach\", \"time\": start_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": start_time.strftime(\"%I:%M%p\"), \"to\": \"Union Square\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Union Square\", \"duration\": constraints[\"Emily\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    # Meet Margaret\n    margaret_start = datetime.strptime(constraints[\"Margaret\"][\"start\"], \"%I:%M%p\")\n    margaret_end = datetime.strptime(constraints[\"Margaret\"][\"end\"], \"%I:%M%p\")\n    travel_time = travel_distances[(\"Union Square\", \"Russian Hill\")]\n    wait_time = (margaret_start - meet_time).total_seconds() / 60\n    meet_time = margaret_start + timedelta(minutes=constraints[\"Margaret\"][\"duration\"])\n    schedule.append({\"action\": \"travel\", \"location\": \"Russian Hill\", \"duration\": travel_time, \"time\": meet_time.strftime(\"%I:%M%p\"), \"to\": \"Russian Hill\"})\n    schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": meet_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"meet\", \"location\": \"Russian Hill\", \"duration\": constraints[\"Margaret\"][\"duration\"], \"time\": meet_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\n# Output schedule as JSON\nschedule = compute_schedule()\nprint(json.dumps({\"schedule\": schedule}, indent=4))\n```",
      "count": "meeting_planning_example_170"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Laura",
            "start_time": "9:14AM",
            "end_time": "10:59AM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Charles",
            "start_time": "11:30AM",
            "end_time": "12:15PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Margaret",
            "start_time": "2:15PM",
            "end_time": "4:15PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Rebecca",
            "start_time": "4:24PM",
            "end_time": "5:54PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Melissa",
            "start_time": "5:59PM",
            "end_time": "6:29PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Patricia",
            "start_time": "6:46PM",
            "end_time": "7:31PM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Robert",
            "start_time": "7:46PM",
            "end_time": "8:16PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Karen",
            "start_time": "8:28PM",
            "end_time": "9:28PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Marina District\", \"Bayview\"): 27,\n    (\"Marina District\", \"Sunset District\"): 19,\n    (\"Marina District\", \"Richmond District\"): 11,\n    (\"Marina District\", \"Nob Hill\"): 12,\n    (\"Marina District\", \"Chinatown\"): 15,\n    (\"Marina District\", \"Haight-Ashbury\"): 16,\n    (\"Marina District\", \"North Beach\"): 11,\n    (\"Marina District\", \"Russian Hill\"): 8,\n    (\"Marina District\", \"Embarcadero\"): 14,\n    (\"Bayview\", \"Marina District\"): 27,\n    (\"Bayview\", \"Sunset District\"): 23,\n    (\"Bayview\", \"Richmond District\"): 25,\n    (\"Bayview\", \"Nob Hill\"): 20,\n    (\"Bayview\", \"Chinatown\"): 19,\n    (\"Bayview\", \"Haight-Ashbury\"): 19,\n    (\"Bayview\", \"North Beach\"): 22,\n    (\"Bayview\", \"Russian Hill\"): 23,\n    (\"Bayview\", \"Embarcadero\"): 19,\n    (\"Sunset District\", \"Marina District\"): 21,\n    (\"Sunset District\", \"Bayview\"): 22,\n    (\"Sunset District\", \"Richmond District\"): 12,\n    (\"Sunset District\", \"Nob Hill\"): 27,\n    (\"Sunset District\", \"Chinatown\"): 30,\n    (\"Sunset District\", \"Haight-Ashbury\"): 15,\n    (\"Sunset District\", \"North Beach\"): 28,\n    (\"Sunset District\", \"Russian Hill\"): 24,\n    (\"Sunset District\", \"Embarcadero\"): 30,\n    (\"Richmond District\", \"Marina District\"): 9,\n    (\"Richmond District\", \"Bayview\"): 27,\n    (\"Richmond District\", \"Sunset District\"): 11,\n    (\"Richmond District\", \"Nob Hill\"): 17,\n    (\"Richmond District\", \"Chinatown\"): 20,\n    (\"Richmond District\", \"Haight-Ashbury\"): 10,\n    (\"Richmond District\", \"North Beach\"): 17,\n    (\"Richmond District\", \"Russian Hill\"): 13,\n    (\"Richmond District\", \"Embarcadero\"): 19,\n    (\"Nob Hill\", \"Marina District\"): 11,\n    (\"Nob Hill\", \"Bayview\"): 19,\n    (\"Nob Hill\", \"Sunset District\"): 24,\n    (\"Nob Hill\", \"Richmond District\"): 14,\n    (\"Nob Hill\", \"Chinatown\"): 6,\n    (\"Nob Hill\", \"Haight-Ashbury\"): 13,\n    (\"Nob Hill\", \"North Beach\"): 8,\n    (\"Nob Hill\", \"Russian Hill\"): 5,\n    (\"Nob Hill\", \"Embarcadero\"): 9,\n    (\"Chinatown\", \"Marina District\"): 12,\n    (\"Chinatown\", \"Bayview\"): 20,\n    (\"Chinatown\", \"Sunset District\"): 29,\n    (\"Chinatown\", \"Richmond District\"): 20,\n    (\"Chinatown\", \"Nob Hill\"): 9,\n    (\"Chinatown\", \"Haight-Ashbury\"): 19,\n    (\"Chinatown\", \"North Beach\"): 3,\n    (\"Chinatown\", \"Russian Hill\"): 7,\n    (\"Chinatown\", \"Embarcadero\"): 5,\n    (\"Haight-Ashbury\", \"Marina District\"): 17,\n    (\"Haight-Ashbury\", \"Bayview\"): 18,\n    (\"Haight-Ashbury\", \"Sunset District\"): 15,\n    (\"Haight-Ashbury\", \"Richmond District\"): 10,\n    (\"Haight-Ashbury\", \"Nob Hill\"): 15,\n    (\"Haight-Ashbury\", \"Chinatown\"): 19,\n    (\"Haight-Ashbury\", \"North Beach\"): 19,\n    (\"Haight-Ashbury\", \"Russian Hill\"): 17,\n    (\"Haight-Ashbury\", \"Embarcadero\"): 20,\n    (\"North Beach\", \"Marina District\"): 9,\n    (\"North Beach\", \"Bayview\"): 25,\n    (\"North Beach\", \"Sunset District\"): 27,\n    (\"North Beach\", \"Richmond District\"): 18,\n    (\"North Beach\", \"Nob Hill\"): 7,\n    (\"North Beach\", \"Chinatown\"): 6,\n    (\"North Beach\", \"Haight-Ashbury\"): 18,\n    (\"North Beach\", \"Russian Hill\"): 4,\n    (\"North Beach\", \"Embarcadero\"): 6,\n    (\"Russian Hill\", \"Marina District\"): 7,\n    (\"Russian Hill\", \"Bayview\"): 23,\n    (\"Russian Hill\", \"Sunset District\"): 23,\n    (\"Russian Hill\", \"Richmond District\"): 14,\n    (\"Russian Hill\", \"Nob Hill\"): 5,\n    (\"Russian Hill\", \"Chinatown\"): 9,\n    (\"Russian Hill\", \"Haight-Ashbury\"): 17,\n    (\"Russian Hill\", \"North Beach\"): 5,\n    (\"Russian Hill\", \"Embarcadero\"): 8,\n    (\"Embarcadero\", \"Marina District\"): 12,\n    (\"Embarcadero\", \"Bayview\"): 21,\n    (\"Embarcadero\", \"Sunset District\"): 30,\n    (\"Embarcadero\", \"Richmond District\"): 21,\n    (\"Embarcadero\", \"Nob Hill\"): 10,\n    (\"Embarcadero\", \"Chinatown\"): 7,\n    (\"Embarcadero\", \"Haight-Ashbury\"): 21,\n    (\"Embarcadero\", \"North Beach\"): 5,\n    (\"Embarcadero\", \"Russian Hill\"): 8\n}\n\n# Constraints\nconstraints = {\n    \"Charles\": {\"location\": \"Bayview\", \"start_time\": 11 * 60, \"end_time\": 14 * 60, \"duration\": 45},\n    \"Robert\": {\"location\": \"Sunset District\", \"start_time\": 16 * 60, \"end_time\": 21 * 60, \"duration\": 30},\n    \"Karen\": {\"location\": \"Richmond District\", \"start_time\": 17 * 60, \"end_time\": 21 * 60, \"duration\": 60},\n    \"Rebecca\": {\"location\": \"Nob Hill\", \"start_time\": 16 * 60, \"end_time\": 20 * 60, \"duration\": 90},\n    \"Margaret\": {\"location\": \"Chinatown\", \"start_time\": 13 * 60, \"end_time\": 19 * 60, \"duration\": 120},\n    \"Patricia\": {\"location\": \"Haight-Ashbury\", \"start_time\": 14 * 60, \"end_time\": 20 * 60, \"duration\": 45},\n    \"Mark\": {\"location\": \"North Beach\", \"start_time\": 14 * 60, \"end_time\": 18 * 60, \"duration\": 105},\n    \"Melissa\": {\"location\": \"Russian Hill\", \"start_time\": 13 * 60, \"end_time\": 19 * 60, \"duration\": 30},\n    \"Laura\": {\"location\": \"Embarcadero\", \"start_time\": 9 * 60, \"end_time\": 15 * 60, \"duration\": 105}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = 9 * 60  # 9:00 AM\n    current_location = \"Marina District\"\n\n    # Start at Marina District\n    schedule.append({\"action\": \"start\", \"location\": current_location, \"time\": f\"{current_time // 60}:{current_time % 60}AM\"})\n\n    # Visit Charles\n    travel_time = travel_distances[(current_location, constraints[\"Charles\"][\"location\"])]\n    wait_time = max(0, constraints[\"Charles\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Charles\"][\"start_time\"], current_time) + constraints[\"Charles\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Charles\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Charles\"][\"location\"], \"time\": f\"{(constraints['Charles']['start_time'] // 60):{2}d}:{constraints['Charles']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Charles\"][\"location\"], \"duration\": constraints[\"Charles\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Charles\"][\"location\"]\n\n    # Visit Laura\n    travel_time = travel_distances[(current_location, constraints[\"Laura\"][\"location\"])]\n    wait_time = max(0, constraints[\"Laura\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Laura\"][\"start_time\"], current_time) + constraints[\"Laura\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Laura\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Laura\"][\"location\"], \"time\": f\"{(constraints['Laura']['start_time'] // 60):{2}d}:{constraints['Laura']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Laura\"][\"location\"], \"duration\": constraints[\"Laura\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Laura\"][\"location\"]\n\n    # Visit Melissa\n    travel_time = travel_distances[(current_location, constraints[\"Melissa\"][\"location\"])]\n    wait_time = max(0, constraints[\"Melissa\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Melissa\"][\"start_time\"], current_time) + constraints[\"Melissa\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Melissa\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Melissa\"][\"location\"], \"time\": f\"{(constraints['Melissa']['start_time'] // 60):{2}d}:{constraints['Melissa']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Melissa\"][\"location\"], \"duration\": constraints[\"Melissa\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Melissa\"][\"location\"]\n\n    # Visit Rebecca\n    travel_time = travel_distances[(current_location, constraints[\"Rebecca\"][\"location\"])]\n    wait_time = max(0, constraints[\"Rebecca\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Rebecca\"][\"start_time\"], current_time) + constraints[\"Rebecca\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Rebecca\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Rebecca\"][\"location\"], \"time\": f\"{(constraints['Rebecca']['start_time'] // 60):{2}d}:{constraints['Rebecca']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Rebecca\"][\"location\"], \"duration\": constraints[\"Rebecca\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Rebecca\"][\"location\"]\n\n    # Visit Patricia\n    travel_time = travel_distances[(current_location, constraints[\"Patricia\"][\"location\"])]\n    wait_time = max(0, constraints[\"Patricia\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Patricia\"][\"start_time\"], current_time) + constraints[\"Patricia\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Patricia\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Patricia\"][\"location\"], \"time\": f\"{(constraints['Patricia']['start_time'] // 60):{2}d}:{constraints['Patricia']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Patricia\"][\"location\"], \"duration\": constraints[\"Patricia\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Patricia\"][\"location\"]\n\n    # Visit Mark\n    travel_time = travel_distances[(current_location, constraints[\"Mark\"][\"location\"])]\n    wait_time = max(0, constraints[\"Mark\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Mark\"][\"start_time\"], current_time) + constraints[\"Mark\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Mark\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Mark\"][\"location\"], \"time\": f\"{(constraints['Mark']['start_time'] // 60):{2}d}:{constraints['Mark']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Mark\"][\"location\"], \"duration\": constraints[\"Mark\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Mark\"][\"location\"]\n\n    # Visit Margaret\n    travel_time = travel_distances[(current_location, constraints[\"Margaret\"][\"location\"])]\n    wait_time = max(0, constraints[\"Margaret\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Margaret\"][\"start_time\"], current_time) + constraints[\"Margaret\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Margaret\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Margaret\"][\"location\"], \"time\": f\"{(constraints['Margaret']['start_time'] // 60):{2}d}:{constraints['Margaret']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Margaret\"][\"location\"], \"duration\": constraints[\"Margaret\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Margaret\"][\"location\"]\n\n    # Visit Robert\n    travel_time = travel_distances[(current_location, constraints[\"Robert\"][\"location\"])]\n    wait_time = max(0, constraints[\"Robert\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Robert\"][\"start_time\"], current_time) + constraints[\"Robert\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Robert\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Robert\"][\"location\"], \"time\": f\"{(constraints['Robert']['start_time'] // 60):{2}d}:{constraints['Robert']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Robert\"][\"location\"], \"duration\": constraints[\"Robert\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Robert\"][\"location\"]\n\n    # Visit Karen\n    travel_time = travel_distances[(current_location, constraints[\"Karen\"][\"location\"])]\n    wait_time = max(0, constraints[\"Karen\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Karen\"][\"start_time\"], current_time) + constraints[\"Karen\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Karen\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Karen\"][\"location\"], \"time\": f\"{(constraints['Karen']['start_time'] // 60):{2}d}:{constraints['Karen']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Karen\"][\"location\"], \"duration\": constraints[\"Karen\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Karen\"][\"location\"]\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    json_schedule = json.dumps(schedule, indent=4)\n    print(\"SOLUTION:\")\n    print(json_schedule)\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_892"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Betty",
            "start_time": "10:15AM",
            "end_time": "11:00AM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "David",
            "start_time": "1:00PM",
            "end_time": "2:30PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Barbara",
            "start_time": "2:48PM",
            "end_time": "4:48PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Embarcadero\", \"Presidio\"): 20,\n    (\"Embarcadero\", \"Richmond District\"): 21,\n    (\"Embarcadero\", \"Fisherman's Wharf\"): 6,\n    (\"Presidio\", \"Embarcadero\"): 20,\n    (\"Presidio\", \"Richmond District\"): 7,\n    (\"Presidio\", \"Fisherman's Wharf\"): 19,\n    (\"Richmond District\", \"Embarcadero\"): 19,\n    (\"Richmond District\", \"Presidio\"): 7,\n    (\"Richmond District\", \"Fisherman's Wharf\"): 18,\n    (\"Fisherman's Wharf\", \"Embarcadero\"): 8,\n    (\"Fisherman's Wharf\", \"Presidio\"): 17,\n    (\"Fisherman's Wharf\", \"Richmond District\"): 18\n}\n\n# Constraints\nconstraints = {\n    \"Betty\": {\"location\": \"Presidio\", \"start_time\": 11 * 60, \"end_time\": 21 * 60, \"duration\": 45},\n    \"David\": {\"location\": \"Richmond District\", \"start_time\": 13 * 60, \"end_time\": 19 * 60, \"duration\": 90},\n    \"Barbara\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 9 * 60, \"end_time\": 19 * 60, \"duration\": 120}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = 9 * 60  # 9:00 AM\n    current_location = \"Embarcadero\"\n\n    # Start at Embarcadero\n    schedule.append({\"action\": \"start\", \"location\": current_location, \"time\": f\"{current_time // 60}:{current_time % 60}AM\"})\n\n    # Visit Barbara\n    travel_time = travel_distances[(current_location, constraints[\"Barbara\"][\"location\"])]\n    wait_time = max(0, constraints[\"Barbara\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Barbara\"][\"start_time\"], current_time) + constraints[\"Barbara\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Barbara\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Barbara\"][\"location\"], \"time\": f\"{(constraints['Barbara']['start_time'] // 60):{2}d}:{constraints['Barbara']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Barbara\"][\"location\"], \"duration\": constraints[\"Barbara\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Barbara\"][\"location\"]\n\n    # Visit Betty\n    travel_time = travel_distances[(current_location, constraints[\"Betty\"][\"location\"])]\n    wait_time = max(0, constraints[\"Betty\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Betty\"][\"start_time\"], current_time) + constraints[\"Betty\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Betty\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Betty\"][\"location\"], \"time\": f\"{(constraints['Betty']['start_time'] // 60):{2}d}:{constraints['Betty']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Betty\"][\"location\"], \"duration\": constraints[\"Betty\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Betty\"][\"location\"]\n\n    # Visit David\n    travel_time = travel_distances[(current_location, constraints[\"David\"][\"location\"])]\n    wait_time = max(0, constraints[\"David\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"David\"][\"start_time\"], current_time) + constraints[\"David\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"David\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"David\"][\"location\"], \"time\": f\"{(constraints['David']['start_time'] // 60):{2}d}:{constraints['David']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"David\"][\"location\"], \"duration\": constraints[\"David\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"David\"][\"location\"]\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    json_schedule = json.dumps(schedule, indent=4)\n    print(\"SOLUTION:\")\n    print(json_schedule)\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_258"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Helen",
            "start_time": "11:00AM",
            "end_time": "11:45AM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Emily",
            "start_time": "4:15PM",
            "end_time": "4:45PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Mary",
            "start_time": "5:30PM",
            "end_time": "6:15PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Mark",
            "start_time": "6:26PM",
            "end_time": "7:41PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Michelle",
            "start_time": "8:00PM",
            "end_time": "8:15PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Presidio\", \"Pacific Heights\"): 11,\n    (\"Presidio\", \"Golden Gate Park\"): 12,\n    (\"Presidio\", \"Fisherman's Wharf\"): 19,\n    (\"Presidio\", \"Marina District\"): 11,\n    (\"Presidio\", \"Alamo Square\"): 19,\n    (\"Presidio\", \"Sunset District\"): 15,\n    (\"Presidio\", \"Nob Hill\"): 18,\n    (\"Presidio\", \"North Beach\"): 18,\n    (\"Pacific Heights\", \"Presidio\"): 11,\n    (\"Pacific Heights\", \"Golden Gate Park\"): 15,\n    (\"Pacific Heights\", \"Fisherman's Wharf\"): 13,\n    (\"Pacific Heights\", \"Marina District\"): 6,\n    (\"Pacific Heights\", \"Alamo Square\"): 10,\n    (\"Pacific Heights\", \"Sunset District\"): 21,\n    (\"Pacific Heights\", \"Nob Hill\"): 8,\n    (\"Pacific Heights\", \"North Beach\"): 9,\n    (\"Golden Gate Park\", \"Presidio\"): 12,\n    (\"Golden Gate Park\", \"Pacific Heights\"): 16,\n    (\"Golden Gate Park\", \"Fisherman's Wharf\"): 24,\n    (\"Golden Gate Park\", \"Marina District\"): 16,\n    (\"Golden Gate Park\", \"Alamo Square\"): 9,\n    (\"Golden Gate Park\", \"Sunset District\"): 10,\n    (\"Golden Gate Park\", \"Nob Hill\"): 20,\n    (\"Golden Gate Park\", \"North Beach\"): 23,\n    (\"Fisherman's Wharf\", \"Presidio\"): 17,\n    (\"Fisherman's Wharf\", \"Pacific Heights\"): 12,\n    (\"Fisherman's Wharf\", \"Golden Gate Park\"): 25,\n    (\"Fisherman's Wharf\", \"Marina District\"): 9,\n    (\"Fisherman's Wharf\", \"Alamo Square\"): 21,\n    (\"Fisherman's Wharf\", \"Sunset District\"): 27,\n    (\"Fisherman's Wharf\", \"Nob Hill\"): 11,\n    (\"Fisherman's Wharf\", \"North Beach\"): 6,\n    (\"Marina District\", \"Presidio\"): 10,\n    (\"Marina District\", \"Pacific Heights\"): 7,\n    (\"Marina District\", \"Golden Gate Park\"): 18,\n    (\"Marina District\", \"Fisherman's Wharf\"): 10,\n    (\"Marina District\", \"Alamo Square\"): 15,\n    (\"Marina District\", \"Sunset District\"): 19,\n    (\"Marina District\", \"Nob Hill\"): 12,\n    (\"Marina District\", \"North Beach\"): 11,\n    (\"Alamo Square\", \"Presidio\"): 17,\n    (\"Alamo Square\", \"Pacific Heights\"): 10,\n    (\"Alamo Square\", \"Golden Gate Park\"): 9,\n    (\"Alamo Square\", \"Fisherman's Wharf\"): 19,\n    (\"Alamo Square\", \"Marina District\"): 15,\n    (\"Alamo Square\", \"Sunset District\"): 16,\n    (\"Alamo Square\", \"Nob Hill\"): 11,\n    (\"Alamo Square\", \"North Beach\"): 15,\n    (\"Sunset District\", \"Presidio\"): 16,\n    (\"Sunset District\", \"Pacific Heights\"): 21,\n    (\"Sunset District\", \"Golden Gate Park\"): 11,\n    (\"Sunset District\", \"Fisherman's Wharf\"): 29,\n    (\"Sunset District\", \"Marina District\"): 21,\n    (\"Sunset District\", \"Alamo Square\"): 17,\n    (\"Sunset District\", \"Nob Hill\"): 27,\n    (\"Sunset District\", \"North Beach\"): 28,\n    (\"Nob Hill\", \"Presidio\"): 17,\n    (\"Nob Hill\", \"Pacific Heights\"): 8,\n    (\"Nob Hill\", \"Golden Gate Park\"): 17,\n    (\"Nob Hill\", \"Fisherman's Wharf\"): 10,\n    (\"Nob Hill\", \"Marina District\"): 11,\n    (\"Nob Hill\", \"Alamo Square\"): 11,\n    (\"Nob Hill\", \"Sunset District\"): 24,\n    (\"Nob Hill\", \"North Beach\"): 8,\n    (\"North Beach\", \"Presidio\"): 17,\n    (\"North Beach\", \"Pacific Heights\"): 8,\n    (\"North Beach\", \"Golden Gate Park\"): 22,\n    (\"North Beach\", \"Fisherman's Wharf\"): 5,\n    (\"North Beach\", \"Marina District\"): 9,\n    (\"North Beach\", \"Alamo Square\"): 16,\n    (\"North Beach\", \"Sunset District\"): 27,\n    (\"North Beach\", \"Nob Hill\"): 7\n}\n\n# Constraints\nconstraints = {\n    \"Kevin\": {\"location\": \"Pacific Heights\", \"start_time\": 7 * 60, \"end_time\": 8 * 60, \"duration\": 90},\n    \"Michelle\": {\"location\": \"Golden Gate Park\", \"start_time\": 20 * 60, \"end_time\": 21 * 60, \"duration\": 15},\n    \"Emily\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 16 * 60, \"end_time\": 19 * 60, \"duration\": 30},\n    \"Mark\": {\"location\": \"Marina District\", \"start_time\": 19 * 60, \"end_time\": 20 * 60, \"duration\": 75},\n    \"Barbara\": {\"location\": \"Alamo Square\", \"start_time\": 17 * 60, \"end_time\": 19 * 60, \"duration\": 120},\n    \"Laura\": {\"location\": \"Sunset District\", \"start_time\": 19 * 60, \"end_time\": 21 * 60, \"duration\": 75},\n    \"Mary\": {\"location\": \"Nob Hill\", \"start_time\": 17 * 60, \"end_time\": 19 * 60, \"duration\": 45},\n    \"Helen\": {\"location\": \"North Beach\", \"start_time\": 11 * 60, \"end_time\": 12 * 60, \"duration\": 45}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = 9 * 60  # 9:00 AM\n    current_location = \"Presidio\"\n\n    # Start at Presidio\n    schedule.append({\"action\": \"start\", \"location\": current_location, \"time\": f\"{current_time // 60}:{current_time % 60}AM\"})\n\n    # Visit Helen\n    travel_time = travel_distances[(current_location, constraints[\"Helen\"][\"location\"])]\n    wait_time = max(0, constraints[\"Helen\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Helen\"][\"start_time\"], current_time) + constraints[\"Helen\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Helen\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Helen\"][\"location\"], \"time\": f\"{(constraints['Helen']['start_time'] // 60):{2}d}:{constraints['Helen']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Helen\"][\"location\"], \"duration\": constraints[\"Helen\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Helen\"][\"location\"]\n\n    # Visit Kevin\n    travel_time = travel_distances[(current_location, constraints[\"Kevin\"][\"location\"])]\n    wait_time = max(0, constraints[\"Kevin\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Kevin\"][\"start_time\"], current_time) + constraints[\"Kevin\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Kevin\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Kevin\"][\"location\"], \"time\": f\"{(constraints['Kevin']['start_time'] // 60):{2}d}:{constraints['Kevin']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Kevin\"][\"location\"], \"duration\": constraints[\"Kevin\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Kevin\"][\"location\"]\n\n    # Visit Emily\n    travel_time = travel_distances[(current_location, constraints[\"Emily\"][\"location\"])]\n    wait_time = max(0, constraints[\"Emily\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Emily\"][\"start_time\"], current_time) + constraints[\"Emily\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Emily\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Emily\"][\"location\"], \"time\": f\"{(constraints['Emily']['start_time'] // 60):{2}d}:{constraints['Emily']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Emily\"][\"location\"], \"duration\": constraints[\"Emily\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Emily\"][\"location\"]\n\n    # Visit Mark\n    travel_time = travel_distances[(current_location, constraints[\"Mark\"][\"location\"])]\n    wait_time = max(0, constraints[\"Mark\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Mark\"][\"start_time\"], current_time) + constraints[\"Mark\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Mark\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Mark\"][\"location\"], \"time\": f\"{(constraints['Mark']['start_time'] // 60):{2}d}:{constraints['Mark']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Mark\"][\"location\"], \"duration\": constraints[\"Mark\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Mark\"][\"location\"]\n\n    # Visit Barbara\n    travel_time = travel_distances[(current_location, constraints[\"Barbara\"][\"location\"])]\n    wait_time = max(0, constraints[\"Barbara\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Barbara\"][\"start_time\"], current_time) + constraints[\"Barbara\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Barbara\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Barbara\"][\"location\"], \"time\": f\"{(constraints['Barbara']['start_time'] // 60):{2}d}:{constraints['Barbara']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Barbara\"][\"location\"], \"duration\": constraints[\"Barbara\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Barbara\"][\"location\"]\n\n    # Visit Laura\n    travel_time = travel_distances[(current_location, constraints[\"Laura\"][\"location\"])]\n    wait_time = max(0, constraints[\"Laura\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Laura\"][\"start_time\"], current_time) + constraints[\"Laura\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Laura\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Laura\"][\"location\"], \"time\": f\"{(constraints['Laura']['start_time'] // 60):{2}d}:{constraints['Laura']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Laura\"][\"location\"], \"duration\": constraints[\"Laura\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Laura\"][\"location\"]\n\n    # Visit Mary\n    travel_time = travel_distances[(current_location, constraints[\"Mary\"][\"location\"])]\n    wait_time = max(0, constraints[\"Mary\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Mary\"][\"start_time\"], current_time) + constraints[\"Mary\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Mary\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Mary\"][\"location\"], \"time\": f\"{(constraints['Mary']['start_time'] // 60):{2}d}:{constraints['Mary']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Mary\"][\"location\"], \"duration\": constraints[\"Mary\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Mary\"][\"location\"]\n\n    # Visit Michelle\n    travel_time = travel_distances[(current_location, constraints[\"Michelle\"][\"location\"])]\n    wait_time = max(0, constraints[\"Michelle\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Michelle\"][\"start_time\"], current_time) + constraints[\"Michelle\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Michelle\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Michelle\"][\"location\"], \"time\": f\"{(constraints['Michelle']['start_time'] // 60):{2}d}:{constraints['Michelle']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Michelle\"][\"location\"], \"duration\": constraints[\"Michelle\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Michelle\"][\"location\"]\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    json_schedule = json.dumps(schedule, indent=4)\n    print(\"SOLUTION:\")\n    print(json_schedule)\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_700"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Karen",
            "start_time": "9:25AM",
            "end_time": "9:55AM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Anthony",
            "start_time": "10:06AM",
            "end_time": "11:51AM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Betty",
            "start_time": "7:45PM",
            "end_time": "8:00PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Bayview\", \"Embarcadero\"): 19,\n    (\"Bayview\", \"Fisherman's Wharf\"): 25,\n    (\"Bayview\", \"Financial District\"): 19,\n    (\"Embarcadero\", \"Bayview\"): 21,\n    (\"Embarcadero\", \"Fisherman's Wharf\"): 6,\n    (\"Embarcadero\", \"Financial District\"): 5,\n    (\"Fisherman's Wharf\", \"Bayview\"): 26,\n    (\"Fisherman's Wharf\", \"Embarcadero\"): 8,\n    (\"Fisherman's Wharf\", \"Financial District\"): 11,\n    (\"Financial District\", \"Bayview\"): 19,\n    (\"Financial District\", \"Embarcadero\"): 4,\n    (\"Financial District\", \"Fisherman's Wharf\"): 10\n}\n\n# Constraints\nconstraints = {\n    \"Betty\": {\"location\": \"Embarcadero\", \"start_time\": 21 * 60, \"end_time\": 23 * 60, \"duration\": 15},\n    \"Karen\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 8 * 60, \"end_time\": 15 * 60, \"duration\": 30},\n    \"Anthony\": {\"location\": \"Financial District\", \"start_time\": 9 * 60, \"end_time\": 21 * 60, \"duration\": 105}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = 9 * 60  # 9:00 AM\n    current_location = \"Bayview\"\n\n    # Start at Bayview\n    schedule.append({\"action\": \"start\", \"location\": current_location, \"time\": f\"{current_time // 60}:{current_time % 60}AM\"})\n\n    # Visit Karen\n    travel_time = travel_distances[(current_location, constraints[\"Karen\"][\"location\"])]\n    wait_time = max(0, constraints[\"Karen\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Karen\"][\"start_time\"], current_time) + constraints[\"Karen\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Karen\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Karen\"][\"location\"], \"time\": f\"{(constraints['Karen']['start_time'] // 60):{2}d}:{constraints['Karen']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Karen\"][\"location\"], \"duration\": constraints[\"Karen\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Karen\"][\"location\"]\n\n    # Visit Anthony\n    travel_time = travel_distances[(current_location, constraints[\"Anthony\"][\"location\"])]\n    wait_time = max(0, constraints[\"Anthony\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Anthony\"][\"start_time\"], current_time) + constraints[\"Anthony\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Anthony\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Anthony\"][\"location\"], \"time\": f\"{(constraints['Anthony']['start_time'] // 60):{2}d}:{constraints['Anthony']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Anthony\"][\"location\"], \"duration\": constraints[\"Anthony\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Anthony\"][\"location\"]\n\n    # Visit Betty\n    travel_time = travel_distances[(current_location, constraints[\"Betty\"][\"location\"])]\n    wait_time = max(0, constraints[\"Betty\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Betty\"][\"start_time\"], current_time) + constraints[\"Betty\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Betty\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Betty\"][\"location\"], \"time\": f\"{(constraints['Betty']['start_time'] // 60):{2}d}:{constraints['Betty']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Betty\"][\"location\"], \"duration\": constraints[\"Betty\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Betty\"][\"location\"]\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    json_schedule = json.dumps(schedule, indent=4)\n    print(\"SOLUTION:\")\n    print(json_schedule)\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_263"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Sarah",
            "start_time": "10:45AM",
            "end_time": "11:15AM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Richard",
            "start_time": "11:45AM",
            "end_time": "1:15PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Elizabeth",
            "start_time": "1:26PM",
            "end_time": "3:26PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Michelle",
            "start_time": "6:15PM",
            "end_time": "7:45PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Richmond District\", \"Sunset District\"): 11,\n    (\"Richmond District\", \"Haight-Ashbury\"): 10,\n    (\"Richmond District\", \"Mission District\"): 20,\n    (\"Richmond District\", \"Golden Gate Park\"): 9,\n    (\"Sunset District\", \"Richmond District\"): 12,\n    (\"Sunset District\", \"Haight-Ashbury\"): 15,\n    (\"Sunset District\", \"Mission District\"): 24,\n    (\"Sunset District\", \"Golden Gate Park\"): 11,\n    (\"Haight-Ashbury\", \"Richmond District\"): 10,\n    (\"Haight-Ashbury\", \"Sunset District\"): 15,\n    (\"Haight-Ashbury\", \"Mission District\"): 11,\n    (\"Haight-Ashbury\", \"Golden Gate Park\"): 7,\n    (\"Mission District\", \"Richmond District\"): 20,\n    (\"Mission District\", \"Sunset District\"): 24,\n    (\"Mission District\", \"Haight-Ashbury\"): 12,\n    (\"Mission District\", \"Golden Gate Park\"): 17,\n    (\"Golden Gate Park\", \"Richmond District\"): 7,\n    (\"Golden Gate Park\", \"Sunset District\"): 10,\n    (\"Golden Gate Park\", \"Haight-Ashbury\"): 7,\n    (\"Golden Gate Park\", \"Mission District\"): 17\n}\n\n# Constraints\nconstraints = {\n    \"Sarah\": {\"location\": \"Sunset District\", \"start_time\": 10 * 60, \"end_time\": 19 * 60, \"duration\": 30},\n    \"Richard\": {\"location\": \"Haight-Ashbury\", \"start_time\": 11 * 60, \"end_time\": 16 * 60, \"duration\": 90},\n    \"Elizabeth\": {\"location\": \"Mission District\", \"start_time\": 11 * 60, \"end_time\": 17 * 60, \"duration\": 120},\n    \"Michelle\": {\"location\": \"Golden Gate Park\", \"start_time\": 18 * 60, \"end_time\": 20 * 60, \"duration\": 90}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = 9 * 60  # 9:00 AM\n    current_location = \"Richmond District\"\n\n    # Start at Richmond District\n    schedule.append({\"action\": \"start\", \"location\": current_location, \"time\": f\"{current_time // 60}:{current_time % 60}AM\"})\n\n    # Visit Sarah\n    travel_time = travel_distances[(current_location, constraints[\"Sarah\"][\"location\"])]\n    wait_time = max(0, constraints[\"Sarah\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Sarah\"][\"start_time\"], current_time) + constraints[\"Sarah\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Sarah\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Sarah\"][\"location\"], \"time\": f\"{(constraints['Sarah']['start_time'] // 60):{2}d}:{constraints['Sarah']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Sarah\"][\"location\"], \"duration\": constraints[\"Sarah\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Sarah\"][\"location\"]\n\n    # Visit Richard\n    travel_time = travel_distances[(current_location, constraints[\"Richard\"][\"location\"])]\n    wait_time = max(0, constraints[\"Richard\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Richard\"][\"start_time\"], current_time) + constraints[\"Richard\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Richard\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Richard\"][\"location\"], \"time\": f\"{(constraints['Richard']['start_time'] // 60):{2}d}:{constraints['Richard']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Richard\"][\"location\"], \"duration\": constraints[\"Richard\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Richard\"][\"location\"]\n\n    # Visit Elizabeth\n    travel_time = travel_distances[(current_location, constraints[\"Elizabeth\"][\"location\"])]\n    wait_time = max(0, constraints[\"Elizabeth\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Elizabeth\"][\"start_time\"], current_time) + constraints[\"Elizabeth\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Elizabeth\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Elizabeth\"][\"location\"], \"time\": f\"{(constraints['Elizabeth']['start_time'] // 60):{2}d}:{constraints['Elizabeth']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Elizabeth\"][\"location\"], \"duration\": constraints[\"Elizabeth\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Elizabeth\"][\"location\"]\n\n    # Visit Michelle\n    travel_time = travel_distances[(current_location, constraints[\"Michelle\"][\"location\"])]\n    wait_time = max(0, constraints[\"Michelle\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Michelle\"][\"start_time\"], current_time) + constraints[\"Michelle\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Michelle\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Michelle\"][\"location\"], \"time\": f\"{(constraints['Michelle']['start_time'] // 60):{2}d}:{constraints['Michelle']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Michelle\"][\"location\"], \"duration\": constraints[\"Michelle\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Michelle\"][\"location\"]\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    json_schedule = json.dumps(schedule, indent=4)\n    print(\"SOLUTION:\")\n    print(json_schedule)\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_312"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Ronald",
            "start_time": "10:00AM",
            "end_time": "11:45AM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Helen",
            "start_time": "1:30PM",
            "end_time": "3:30PM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Joshua",
            "start_time": "3:47PM",
            "end_time": "5:17PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Margaret",
            "start_time": "5:32PM",
            "end_time": "6:32PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Pacific Heights\", \"Nob Hill\"): 8,\n    (\"Pacific Heights\", \"Russian Hill\"): 7,\n    (\"Pacific Heights\", \"The Castro\"): 16,\n    (\"Pacific Heights\", \"Sunset District\"): 21,\n    (\"Pacific Heights\", \"Haight-Ashbury\"): 11,\n    (\"Nob Hill\", \"Pacific Heights\"): 8,\n    (\"Nob Hill\", \"Russian Hill\"): 5,\n    (\"Nob Hill\", \"The Castro\"): 17,\n    (\"Nob Hill\", \"Sunset District\"): 25,\n    (\"Nob Hill\", \"Haight-Ashbury\"): 13,\n    (\"Russian Hill\", \"Pacific Heights\"): 7,\n    (\"Russian Hill\", \"Nob Hill\"): 5,\n    (\"Russian Hill\", \"The Castro\"): 21,\n    (\"Russian Hill\", \"Sunset District\"): 23,\n    (\"Russian Hill\", \"Haight-Ashbury\"): 17,\n    (\"The Castro\", \"Pacific Heights\"): 16,\n    (\"The Castro\", \"Nob Hill\"): 16,\n    (\"The Castro\", \"Russian Hill\"): 18,\n    (\"The Castro\", \"Sunset District\"): 17,\n    (\"The Castro\", \"Haight-Ashbury\"): 6,\n    (\"Sunset District\", \"Pacific Heights\"): 21,\n    (\"Sunset District\", \"Nob Hill\"): 27,\n    (\"Sunset District\", \"Russian Hill\"): 24,\n    (\"Sunset District\", \"The Castro\"): 17,\n    (\"Sunset District\", \"Haight-Ashbury\"): 15,\n    (\"Haight-Ashbury\", \"Pacific Heights\"): 12,\n    (\"Haight-Ashbury\", \"Nob Hill\"): 15,\n    (\"Haight-Ashbury\", \"Russian Hill\"): 17,\n    (\"Haight-Ashbury\", \"The Castro\"): 6,\n    (\"Haight-Ashbury\", \"Sunset District\"): 15\n}\n\n# Constraints\nconstraints = {\n    \"Ronald\": {\"location\": \"Nob Hill\", \"start_time\": 10 * 60, \"end_time\": 17 * 60, \"duration\": 105},\n    \"Sarah\": {\"location\": \"Russian Hill\", \"start_time\": 7 * 60, \"end_time\": 9 * 60, \"duration\": 45},\n    \"Helen\": {\"location\": \"The Castro\", \"start_time\": 13 * 60, \"end_time\": 17 * 60, \"duration\": 120},\n    \"Joshua\": {\"location\": \"Sunset District\", \"start_time\": 14 * 60, \"end_time\": 20 * 60, \"duration\": 90},\n    \"Margaret\": {\"location\": \"Haight-Ashbury\", \"start_time\": 10 * 60, \"end_time\": 22 * 60, \"duration\": 60}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = 9 * 60  # 9:00 AM\n    current_location = \"Pacific Heights\"\n\n    # Start at Pacific Heights\n    schedule.append({\"action\": \"start\", \"location\": current_location, \"time\": f\"{current_time // 60}:{current_time % 60}AM\"})\n\n    # Visit Sarah\n    travel_time = travel_distances[(current_location, constraints[\"Sarah\"][\"location\"])]\n    wait_time = max(0, constraints[\"Sarah\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Sarah\"][\"start_time\"], current_time) + constraints[\"Sarah\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Sarah\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Sarah\"][\"location\"], \"time\": f\"{(constraints['Sarah']['start_time'] // 60):{2}d}:{constraints['Sarah']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Sarah\"][\"location\"], \"duration\": constraints[\"Sarah\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Sarah\"][\"location\"]\n\n    # Visit Ronald\n    travel_time = travel_distances[(current_location, constraints[\"Ronald\"][\"location\"])]\n    wait_time = max(0, constraints[\"Ronald\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Ronald\"][\"start_time\"], current_time) + constraints[\"Ronald\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Ronald\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Ronald\"][\"location\"], \"time\": f\"{(constraints['Ronald']['start_time'] // 60):{2}d}:{constraints['Ronald']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Ronald\"][\"location\"], \"duration\": constraints[\"Ronald\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Ronald\"][\"location\"]\n\n    # Visit Margaret\n    travel_time = travel_distances[(current_location, constraints[\"Margaret\"][\"location\"])]\n    wait_time = max(0, constraints[\"Margaret\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Margaret\"][\"start_time\"], current_time) + constraints[\"Margaret\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Margaret\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Margaret\"][\"location\"], \"time\": f\"{(constraints['Margaret']['start_time'] // 60):{2}d}:{constraints['Margaret']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Margaret\"][\"location\"], \"duration\": constraints[\"Margaret\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Margaret\"][\"location\"]\n\n    # Visit Helen\n    travel_time = travel_distances[(current_location, constraints[\"Helen\"][\"location\"])]\n    wait_time = max(0, constraints[\"Helen\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Helen\"][\"start_time\"], current_time) + constraints[\"Helen\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Helen\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Helen\"][\"location\"], \"time\": f\"{(constraints['Helen']['start_time'] // 60):{2}d}:{constraints['Helen']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Helen\"][\"location\"], \"duration\": constraints[\"Helen\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Helen\"][\"location\"]\n\n    # Visit Joshua\n    travel_time = travel_distances[(current_location, constraints[\"Joshua\"][\"location\"])]\n    wait_time = max(0, constraints[\"Joshua\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Joshua\"][\"start_time\"], current_time) + constraints[\"Joshua\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Joshua\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Joshua\"][\"location\"], \"time\": f\"{(constraints['Joshua']['start_time'] // 60):{2}d}:{constraints['Joshua']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Joshua\"][\"location\"], \"duration\": constraints[\"Joshua\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Joshua\"][\"location\"]\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    json_schedule = json.dumps(schedule, indent=4)\n    print(\"SOLUTION:\")\n    print(json_schedule)\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_488"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Jason",
            "start_time": "4:00PM",
            "end_time": "4:30PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Jessica",
            "start_time": "4:45PM",
            "end_time": "5:15PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Sandra",
            "start_time": "6:30PM",
            "end_time": "8:30PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Bayview\", \"Embarcadero\"): 19,\n    (\"Bayview\", \"Richmond District\"): 25,\n    (\"Bayview\", \"Fisherman's Wharf\"): 25,\n    (\"Embarcadero\", \"Bayview\"): 21,\n    (\"Embarcadero\", \"Richmond District\"): 21,\n    (\"Embarcadero\", \"Fisherman's Wharf\"): 6,\n    (\"Richmond District\", \"Bayview\"): 26,\n    (\"Richmond District\", \"Embarcadero\"): 19,\n    (\"Richmond District\", \"Fisherman's Wharf\"): 18,\n    (\"Fisherman's Wharf\", \"Bayview\"): 26,\n    (\"Fisherman's Wharf\", \"Embarcadero\"): 8,\n    (\"Fisherman's Wharf\", \"Richmond District\"): 18\n}\n\n# Constraints\nconstraints = {\n    \"Jessica\": {\"location\": \"Embarcadero\", \"start_time\": 16 * 60, \"end_time\": 18 * 60, \"duration\": 30},\n    \"Sandra\": {\"location\": \"Richmond District\", \"start_time\": 18 * 60, \"end_time\": 22 * 60, \"duration\": 120},\n    \"Jason\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 16 * 60, \"end_time\": 17 * 60, \"duration\": 30}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = 9 * 60  # 9:00 AM\n    current_location = \"Bayview\"\n\n    # Start at Bayview\n    schedule.append({\"action\": \"start\", \"location\": current_location, \"time\": f\"{current_time // 60}:{current_time % 60}AM\"})\n\n    # Visit Jason\n    travel_time = travel_distances[(current_location, constraints[\"Jason\"][\"location\"])]\n    wait_time = max(0, constraints[\"Jason\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Jason\"][\"start_time\"], current_time) + constraints[\"Jason\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Jason\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Jason\"][\"location\"], \"time\": f\"{(constraints['Jason']['start_time'] // 60):{2}d}:{constraints['Jason']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Jason\"][\"location\"], \"duration\": constraints[\"Jason\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Jason\"][\"location\"]\n\n    # Visit Jessica\n    travel_time = travel_distances[(current_location, constraints[\"Jessica\"][\"location\"])]\n    wait_time = max(0, constraints[\"Jessica\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Jessica\"][\"start_time\"], current_time) + constraints[\"Jessica\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Jessica\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Jessica\"][\"location\"], \"time\": f\"{(constraints['Jessica']['start_time'] // 60):{2}d}:{constraints['Jessica']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Jessica\"][\"location\"], \"duration\": constraints[\"Jessica\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Jessica\"][\"location\"]\n\n    # Visit Sandra\n    travel_time = travel_distances[(current_location, constraints[\"Sandra\"][\"location\"])]\n    wait_time = max(0, constraints[\"Sandra\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Sandra\"][\"start_time\"], current_time) + constraints[\"Sandra\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Sandra\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Sandra\"][\"location\"], \"time\": f\"{(constraints['Sandra']['start_time'] // 60):{2}d}:{constraints['Sandra']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Sandra\"][\"location\"], \"duration\": constraints[\"Sandra\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Sandra\"][\"location\"]\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    json_schedule = json.dumps(schedule, indent=4)\n    print(\"SOLUTION:\")\n    print(json_schedule)\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_215"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Karen",
            "start_time": "9:13AM",
            "end_time": "10:28AM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Laura",
            "start_time": "11:45AM",
            "end_time": "12:45PM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Deborah",
            "start_time": "1:05PM",
            "end_time": "2:50PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Steven",
            "start_time": "3:03PM",
            "end_time": "5:03PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Jason",
            "start_time": "5:08PM",
            "end_time": "6:38PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Elizabeth",
            "start_time": "6:44PM",
            "end_time": "7:59PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Carol",
            "start_time": "9:30PM",
            "end_time": "10:30PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Golden Gate Park\", \"Haight-Ashbury\"): 7,\n    (\"Golden Gate Park\", \"Fisherman's Wharf\"): 24,\n    (\"Golden Gate Park\", \"The Castro\"): 13,\n    (\"Golden Gate Park\", \"Chinatown\"): 23,\n    (\"Golden Gate Park\", \"Alamo Square\"): 10,\n    (\"Golden Gate Park\", \"North Beach\"): 24,\n    (\"Golden Gate Park\", \"Russian Hill\"): 19,\n    (\"Haight-Ashbury\", \"Golden Gate Park\"): 7,\n    (\"Haight-Ashbury\", \"Fisherman's Wharf\"): 23,\n    (\"Haight-Ashbury\", \"The Castro\"): 6,\n    (\"Haight-Ashbury\", \"Chinatown\"): 19,\n    (\"Haight-Ashbury\", \"Alamo Square\"): 5,\n    (\"Haight-Ashbury\", \"North Beach\"): 19,\n    (\"Haight-Ashbury\", \"Russian Hill\"): 17,\n    (\"Fisherman's Wharf\", \"Golden Gate Park\"): 25,\n    (\"Fisherman's Wharf\", \"Haight-Ashbury\"): 22,\n    (\"Fisherman's Wharf\", \"The Castro\"): 26,\n    (\"Fisherman's Wharf\", \"Chinatown\"): 12,\n    (\"Fisherman's Wharf\", \"Alamo Square\"): 20,\n    (\"Fisherman's Wharf\", \"North Beach\"): 6,\n    (\"Fisherman's Wharf\", \"Russian Hill\"): 7,\n    (\"The Castro\", \"Golden Gate Park\"): 11,\n    (\"The Castro\", \"Haight-Ashbury\"): 6,\n    (\"The Castro\", \"Fisherman's Wharf\"): 24,\n    (\"The Castro\", \"Chinatown\"): 20,\n    (\"The Castro\", \"Alamo Square\"): 8,\n    (\"The Castro\", \"North Beach\"): 20,\n    (\"The Castro\", \"Russian Hill\"): 18,\n    (\"Chinatown\", \"Golden Gate Park\"): 23,\n    (\"Chinatown\", \"Haight-Ashbury\"): 19,\n    (\"Chinatown\", \"Fisherman's Wharf\"): 8,\n    (\"Chinatown\", \"The Castro\"): 22,\n    (\"Chinatown\", \"Alamo Square\"): 17,\n    (\"Chinatown\", \"North Beach\"): 3,\n    (\"Chinatown\", \"Russian Hill\"): 7,\n    (\"Alamo Square\", \"Golden Gate Park\"): 9,\n    (\"Alamo Square\", \"Haight-Ashbury\"): 5,\n    (\"Alamo Square\", \"Fisherman's Wharf\"): 19,\n    (\"Alamo Square\", \"The Castro\"): 8,\n    (\"Alamo Square\", \"Chinatown\"): 16,\n    (\"Alamo Square\", \"North Beach\"): 15,\n    (\"Alamo Square\", \"Russian Hill\"): 13,\n    (\"North Beach\", \"Golden Gate Park\"): 22,\n    (\"North Beach\", \"Haight-Ashbury\"): 18,\n    (\"North Beach\", \"Fisherman's Wharf\"): 5,\n    (\"North Beach\", \"The Castro\"): 22,\n    (\"North Beach\", \"Chinatown\"): 6,\n    (\"North Beach\", \"Alamo Square\"): 16,\n    (\"North Beach\", \"Russian Hill\"): 4,\n    (\"Russian Hill\", \"Golden Gate Park\"): 21,\n    (\"Russian Hill\", \"Haight-Ashbury\"): 17,\n    (\"Russian Hill\", \"Fisherman's Wharf\"): 7,\n    (\"Russian Hill\", \"The Castro\"): 21,\n    (\"Russian Hill\", \"Chinatown\"): 9,\n    (\"Russian Hill\", \"Alamo Square\"): 15,\n    (\"Russian Hill\", \"North Beach\"): 5\n}\n\n# Constraints\nconstraints = {\n    \"Carol\": {\"location\": \"Haight-Ashbury\", \"start_time\": 21 * 60, \"end_time\": 22 * 60, \"duration\": 60},\n    \"Laura\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 11 * 60, \"end_time\": 22 * 60, \"duration\": 60},\n    \"Karen\": {\"location\": \"The Castro\", \"start_time\": 7 * 60, \"end_time\": 14 * 60, \"duration\": 75},\n    \"Elizabeth\": {\"location\": \"Chinatown\", \"start_time\": 12 * 60, \"end_time\": 22 * 60, \"duration\": 75},\n    \"Deborah\": {\"location\": \"Alamo Square\", \"start_time\": 12 * 60, \"end_time\": 15 * 60, \"duration\": 105},\n    \"Jason\": {\"location\": \"North Beach\", \"start_time\": 14 * 60, \"end_time\": 19 * 60, \"duration\": 90},\n    \"Steven\": {\"location\": \"Russian Hill\", \"start_time\": 14 * 60, \"end_time\": 19 * 60, \"duration\": 120}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = 9 * 60  # 9:00 AM\n    current_location = \"Golden Gate Park\"\n\n    # Start at Golden Gate Park\n    schedule.append({\"action\": \"start\", \"location\": current_location, \"time\": f\"{current_time // 60}:{current_time % 60}AM\"})\n\n    # Visit Karen\n    travel_time = travel_distances[(current_location, constraints[\"Karen\"][\"location\"])]\n    wait_time = max(0, constraints[\"Karen\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Karen\"][\"start_time\"], current_time) + constraints[\"Karen\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Karen\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Karen\"][\"location\"], \"time\": f\"{(constraints['Karen']['start_time'] // 60):{2}d}:{constraints['Karen']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Karen\"][\"location\"], \"duration\": constraints[\"Karen\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Karen\"][\"location\"]\n\n    # Visit Elizabeth\n    travel_time = travel_distances[(current_location, constraints[\"Elizabeth\"][\"location\"])]\n    wait_time = max(0, constraints[\"Elizabeth\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Elizabeth\"][\"start_time\"], current_time) + constraints[\"Elizabeth\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Elizabeth\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Elizabeth\"][\"location\"], \"time\": f\"{(constraints['Elizabeth']['start_time'] // 60):{2}d}:{constraints['Elizabeth']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Elizabeth\"][\"location\"], \"duration\": constraints[\"Elizabeth\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Elizabeth\"][\"location\"]\n\n    # Visit Deborah\n    travel_time = travel_distances[(current_location, constraints[\"Deborah\"][\"location\"])]\n    wait_time = max(0, constraints[\"Deborah\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Deborah\"][\"start_time\"], current_time) + constraints[\"Deborah\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Deborah\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Deborah\"][\"location\"], \"time\": f\"{(constraints['Deborah']['start_time'] // 60):{2}d}:{constraints['Deborah']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Deborah\"][\"location\"], \"duration\": constraints[\"Deborah\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Deborah\"][\"location\"]\n\n    # Visit Jason\n    travel_time = travel_distances[(current_location, constraints[\"Jason\"][\"location\"])]\n    wait_time = max(0, constraints[\"Jason\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Jason\"][\"start_time\"], current_time) + constraints[\"Jason\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Jason\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Jason\"][\"location\"], \"time\": f\"{(constraints['Jason']['start_time'] // 60):{2}d}:{constraints['Jason']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Jason\"][\"location\"], \"duration\": constraints[\"Jason\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Jason\"][\"location\"]\n\n    # Visit Steven\n    travel_time = travel_distances[(current_location, constraints[\"Steven\"][\"location\"])]\n    wait_time = max(0, constraints[\"Steven\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Steven\"][\"start_time\"], current_time) + constraints[\"Steven\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Steven\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Steven\"][\"location\"], \"time\": f\"{(constraints['Steven']['start_time'] // 60):{2}d}:{constraints['Steven']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Steven\"][\"location\"], \"duration\": constraints[\"Steven\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Steven\"][\"location\"]\n\n    # Visit Laura\n    travel_time = travel_distances[(current_location, constraints[\"Laura\"][\"location\"])]\n    wait_time = max(0, constraints[\"Laura\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Laura\"][\"start_time\"], current_time) + constraints[\"Laura\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Laura\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Laura\"][\"location\"], \"time\": f\"{(constraints['Laura']['start_time'] // 60):{2}d}:{constraints['Laura']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Laura\"][\"location\"], \"duration\": constraints[\"Laura\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Laura\"][\"location\"]\n\n    # Visit Carol\n    travel_time = travel_distances[(current_location, constraints[\"Carol\"][\"location\"])]\n    wait_time = max(0, constraints[\"Carol\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Carol\"][\"start_time\"], current_time) + constraints[\"Carol\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Carol\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Carol\"][\"location\"], \"time\": f\"{(constraints['Carol']['start_time'] // 60):{2}d}:{constraints['Carol']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Carol\"][\"location\"], \"duration\": constraints[\"Carol\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Carol\"][\"location\"]\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    json_schedule = json.dumps(schedule, indent=4)\n    print(\"SOLUTION:\")\n    print(json_schedule)\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_624"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Lisa",
            "start_time": "10:45AM",
            "end_time": "11:00AM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Joshua",
            "start_time": "11:19AM",
            "end_time": "11:34AM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Joseph",
            "start_time": "11:49AM",
            "end_time": "12:34PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Betty",
            "start_time": "12:45PM",
            "end_time": "1:45PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "John",
            "start_time": "2:07PM",
            "end_time": "2:52PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Stephanie",
            "start_time": "3:30PM",
            "end_time": "4:00PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Melissa",
            "start_time": "5:00PM",
            "end_time": "7:00PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Daniel",
            "start_time": "7:07PM",
            "end_time": "8:07PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Andrew",
            "start_time": "8:15PM",
            "end_time": "10:00PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Embarcadero\", \"Fisherman's Wharf\"): 6,\n    (\"Embarcadero\", \"Financial District\"): 5,\n    (\"Embarcadero\", \"Russian Hill\"): 8,\n    (\"Embarcadero\", \"Marina District\"): 12,\n    (\"Embarcadero\", \"Richmond District\"): 21,\n    (\"Embarcadero\", \"Pacific Heights\"): 11,\n    (\"Embarcadero\", \"Haight-Ashbury\"): 21,\n    (\"Embarcadero\", \"Presidio\"): 20,\n    (\"Embarcadero\", \"Nob Hill\"): 10,\n    (\"Embarcadero\", \"The Castro\"): 25,\n    (\"Fisherman's Wharf\", \"Embarcadero\"): 8,\n    (\"Fisherman's Wharf\", \"Financial District\"): 11,\n    (\"Fisherman's Wharf\", \"Russian Hill\"): 7,\n    (\"Fisherman's Wharf\", \"Marina District\"): 9,\n    (\"Fisherman's Wharf\", \"Richmond District\"): 18,\n    (\"Fisherman's Wharf\", \"Pacific Heights\"): 12,\n    (\"Fisherman's Wharf\", \"Haight-Ashbury\"): 22,\n    (\"Fisherman's Wharf\", \"Presidio\"): 17,\n    (\"Fisherman's Wharf\", \"Nob Hill\"): 11,\n    (\"Fisherman's Wharf\", \"The Castro\"): 27,\n    (\"Financial District\", \"Embarcadero\"): 4,\n    (\"Financial District\", \"Fisherman's Wharf\"): 10,\n    (\"Financial District\", \"Russian Hill\"): 11,\n    (\"Financial District\", \"Marina District\"): 15,\n    (\"Financial District\", \"Richmond District\"): 21,\n    (\"Financial District\", \"Pacific Heights\"): 13,\n    (\"Financial District\", \"Haight-Ashbury\"): 19,\n    (\"Financial District\", \"Presidio\"): 22,\n    (\"Financial District\", \"Nob Hill\"): 8,\n    (\"Financial District\", \"The Castro\"): 20,\n    (\"Russian Hill\", \"Embarcadero\"): 8,\n    (\"Russian Hill\", \"Fisherman's Wharf\"): 7,\n    (\"Russian Hill\", \"Financial District\"): 11,\n    (\"Russian Hill\", \"Marina District\"): 7,\n    (\"Russian Hill\", \"Richmond District\"): 14,\n    (\"Russian Hill\", \"Pacific Heights\"): 7,\n    (\"Russian Hill\", \"Haight-Ashbury\"): 17,\n    (\"Russian Hill\", \"Presidio\"): 14,\n    (\"Russian Hill\", \"Nob Hill\"): 5,\n    (\"Russian Hill\", \"The Castro\"): 21,\n    (\"Marina District\", \"Embarcadero\"): 14,\n    (\"Marina District\", \"Fisherman's Wharf\"): 10,\n    (\"Marina District\", \"Financial District\"): 17,\n    (\"Marina District\", \"Russian Hill\"): 8,\n    (\"Marina District\", \"Richmond District\"): 11,\n    (\"Marina District\", \"Pacific Heights\"): 7,\n    (\"Marina District\", \"Haight-Ashbury\"): 16,\n    (\"Marina District\", \"Presidio\"): 10,\n    (\"Marina District\", \"Nob Hill\"): 12,\n    (\"Marina District\", \"The Castro\"): 22,\n    (\"Richmond District\", \"Embarcadero\"): 19,\n    (\"Richmond District\", \"Fisherman's Wharf\"): 18,\n    (\"Richmond District\", \"Financial District\"): 22,\n    (\"Richmond District\", \"Russian Hill\"): 13,\n    (\"Richmond District\", \"Marina District\"): 9,\n    (\"Richmond District\", \"Pacific Heights\"): 10,\n    (\"Richmond District\", \"Haight-Ashbury\"): 10,\n    (\"Richmond District\", \"Presidio\"): 7,\n    (\"Richmond District\", \"Nob Hill\"): 17,\n    (\"Richmond District\", \"The Castro\"): 16,\n    (\"Pacific Heights\", \"Embarcadero\"): 10,\n    (\"Pacific Heights\", \"Fisherman's Wharf\"): 13,\n    (\"Pacific Heights\", \"Financial District\"): 13,\n    (\"Pacific Heights\", \"Russian Hill\"): 7,\n    (\"Pacific Heights\", \"Marina District\"): 6,\n    (\"Pacific Heights\", \"Richmond District\"): 12,\n    (\"Pacific Heights\", \"Haight-Ashbury\"): 11,\n    (\"Pacific Heights\", \"Presidio\"): 11,\n    (\"Pacific Heights\", \"Nob Hill\"): 8,\n    (\"Pacific Heights\", \"The Castro\"): 16,\n    (\"Haight-Ashbury\", \"Embarcadero\"): 20,\n    (\"Haight-Ashbury\", \"Fisherman's Wharf\"): 23,\n    (\"Haight-Ashbury\", \"Financial District\"): 21,\n    (\"Haight-Ashbury\", \"Russian Hill\"): 17,\n    (\"Haight-Ashbury\", \"Marina District\"): 17,\n    (\"Haight-Ashbury\", \"Richmond District\"): 10,\n    (\"Haight-Ashbury\", \"Pacific Heights\"): 12,\n    (\"Haight-Ashbury\", \"Presidio\"): 15,\n    (\"Haight-Ashbury\", \"Nob Hill\"): 15,\n    (\"Haight-Ashbury\", \"The Castro\"): 6,\n    (\"Presidio\", \"Embarcadero\"): 20,\n    (\"Presidio\", \"Fisherman's Wharf\"): 19,\n    (\"Presidio\", \"Financial District\"): 23,\n    (\"Presidio\", \"Russian Hill\"): 14,\n    (\"Presidio\", \"Marina District\"): 11,\n    (\"Presidio\", \"Richmond District\"): 7,\n    (\"Presidio\", \"Pacific Heights\"): 11,\n    (\"Presidio\", \"Haight-Ashbury\"): 15,\n    (\"Presidio\", \"Nob Hill\"): 18,\n    (\"Presidio\", \"The Castro\"): 21,\n    (\"Nob Hill\", \"Embarcadero\"): 9,\n    (\"Nob Hill\", \"Fisherman's Wharf\"): 10,\n    (\"Nob Hill\", \"Financial District\"): 9,\n    (\"Nob Hill\", \"Russian Hill\"): 5,\n    (\"Nob Hill\", \"Marina District\"): 11,\n    (\"Nob Hill\", \"Richmond District\"): 14,\n    (\"Nob Hill\", \"Pacific Heights\"): 8,\n    (\"Nob Hill\", \"Haight-Ashbury\"): 13,\n    (\"Nob Hill\", \"Presidio\"): 17,\n    (\"Nob Hill\", \"The Castro\"): 17,\n    (\"The Castro\", \"Embarcadero\"): 22,\n    (\"The Castro\", \"Fisherman's Wharf\"): 24,\n    (\"The Castro\", \"Financial District\"): 21,\n    (\"The Castro\", \"Russian Hill\"): 18,\n    (\"The Castro\", \"Marina District\"): 21,\n    (\"The Castro\", \"Richmond District\"): 16,\n    (\"The Castro\", \"Pacific Heights\"): 16,\n    (\"The Castro\", \"Haight-Ashbury\"): 6,\n    (\"The Castro\", \"Presidio\"): 20,\n    (\"The Castro\", \"Nob Hill\"): 16\n}\n\n# Constraints\nconstraints = {\n    \"Stephanie\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 15 * 60, \"end_time\": 22 * 60, \"duration\": 30},\n    \"Lisa\": {\"location\": \"Financial District\", \"start_time\": 10 * 60, \"end_time\": 17 * 60, \"duration\": 15},\n    \"Melissa\": {\"location\": \"Russian Hill\", \"start_time\": 17 * 60, \"end_time\": 22 * 60, \"duration\": 120},\n    \"Betty\": {\"location\": \"Marina District\", \"start_time\": 10 * 60, \"end_time\": 14 * 60, \"duration\": 60},\n    \"Sarah\": {\"location\": \"Richmond District\", \"start_time\": 16 * 60, \"end_time\": 20 * 60, \"duration\": 105},\n    \"Daniel\": {\"location\": \"Pacific Heights\", \"start_time\": 18 * 60, \"end_time\": 22 * 60, \"duration\": 60},\n    \"Joshua\": {\"location\": \"Haight-Ashbury\", \"start_time\": 9 * 60, \"end_time\": 14 * 60, \"duration\": 15},\n    \"Joseph\": {\"location\": \"Presidio\", \"start_time\": 7 * 60, \"end_time\": 13 * 60, \"duration\": 45},\n    \"Andrew\": {\"location\": \"Nob Hill\", \"start_time\": 21 * 60, \"end_time\": 22 * 60, \"duration\": 105},\n    \"John\": {\"location\": \"The Castro\", \"start_time\": 13 * 60, \"end_time\": 20 * 60, \"duration\": 45}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = 9 * 60  # 9:00 AM\n    current_location = \"Embarcadero\"\n\n    # Start at Embarcadero\n    schedule.append({\"action\": \"start\", \"location\": current_location, \"time\": f\"{current_time // 60}:{current_time % 60}AM\"})\n\n    # Visit Joshua\n    travel_time = travel_distances[(current_location, constraints[\"Joshua\"][\"location\"])]\n    wait_time = max(0, constraints[\"Joshua\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Joshua\"][\"start_time\"], current_time) + constraints[\"Joshua\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Joshua\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Joshua\"][\"location\"], \"time\": f\"{(constraints['Joshua']['start_time'] // 60):{2}d}:{constraints['Joshua']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Joshua\"][\"location\"], \"duration\": constraints[\"Joshua\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Joshua\"][\"location\"]\n\n    # Visit Joseph\n    travel_time = travel_distances[(current_location, constraints[\"Joseph\"][\"location\"])]\n    wait_time = max(0, constraints[\"Joseph\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Joseph\"][\"start_time\"], current_time) + constraints[\"Joseph\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Joseph\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Joseph\"][\"location\"], \"time\": f\"{(constraints['Joseph']['start_time'] // 60):{2}d}:{constraints['Joseph']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Joseph\"][\"location\"], \"duration\": constraints[\"Joseph\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Joseph\"][\"location\"]\n\n    # Visit Lisa\n    travel_time = travel_distances[(current_location, constraints[\"Lisa\"][\"location\"])]\n    wait_time = max(0, constraints[\"Lisa\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Lisa\"][\"start_time\"], current_time) + constraints[\"Lisa\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Lisa\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Lisa\"][\"location\"], \"time\": f\"{(constraints['Lisa']['start_time'] // 60):{2}d}:{constraints['Lisa']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Lisa\"][\"location\"], \"duration\": constraints[\"Lisa\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Lisa\"][\"location\"]\n\n    # Visit Betty\n    travel_time = travel_distances[(current_location, constraints[\"Betty\"][\"location\"])]\n    wait_time = max(0, constraints[\"Betty\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Betty\"][\"start_time\"], current_time) + constraints[\"Betty\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Betty\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Betty\"][\"location\"], \"time\": f\"{(constraints['Betty']['start_time'] // 60):{2}d}:{constraints['Betty']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Betty\"][\"location\"], \"duration\": constraints[\"Betty\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Betty\"][\"location\"]\n\n    # Visit Sarah\n    travel_time = travel_distances[(current_location, constraints[\"Sarah\"][\"location\"])]\n    wait_time = max(0, constraints[\"Sarah\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Sarah\"][\"start_time\"], current_time) + constraints[\"Sarah\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Sarah\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Sarah\"][\"location\"], \"time\": f\"{(constraints['Sarah']['start_time'] // 60):{2}d}:{constraints['Sarah']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Sarah\"][\"location\"], \"duration\": constraints[\"Sarah\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Sarah\"][\"location\"]\n\n    # Visit Daniel\n    travel_time = travel_distances[(current_location, constraints[\"Daniel\"][\"location\"])]\n    wait_time = max(0, constraints[\"Daniel\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Daniel\"][\"start_time\"], current_time) + constraints[\"Daniel\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Daniel\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Daniel\"][\"location\"], \"time\": f\"{(constraints['Daniel']['start_time'] // 60):{2}d}:{constraints['Daniel']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Daniel\"][\"location\"], \"duration\": constraints[\"Daniel\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Daniel\"][\"location\"]\n\n    # Visit Melissa\n    travel_time = travel_distances[(current_location, constraints[\"Melissa\"][\"location\"])]\n    wait_time = max(0, constraints[\"Melissa\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Melissa\"][\"start_time\"], current_time) + constraints[\"Melissa\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Melissa\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Melissa\"][\"location\"], \"time\": f\"{(constraints['Melissa']['start_time'] // 60):{2}d}:{constraints['Melissa']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Melissa\"][\"location\"], \"duration\": constraints[\"Melissa\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Melissa\"][\"location\"]\n\n    # Visit Stephanie\n    travel_time = travel_distances[(current_location, constraints[\"Stephanie\"][\"location\"])]\n    wait_time = max(0, constraints[\"Stephanie\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Stephanie\"][\"start_time\"], current_time) + constraints[\"Stephanie\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Stephanie\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Stephanie\"][\"location\"], \"time\": f\"{(constraints['Stephanie']['start_time'] // 60):{2}d}:{constraints['Stephanie']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Stephanie\"][\"location\"], \"duration\": constraints[\"Stephanie\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Stephanie\"][\"location\"]\n\n    # Visit Andrew\n    travel_time = travel_distances[(current_location, constraints[\"Andrew\"][\"location\"])]\n    wait_time = max(0, constraints[\"Andrew\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Andrew\"][\"start_time\"], current_time) + constraints[\"Andrew\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Andrew\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Andrew\"][\"location\"], \"time\": f\"{(constraints['Andrew']['start_time'] // 60):{2}d}:{constraints['Andrew']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Andrew\"][\"location\"], \"duration\": constraints[\"Andrew\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Andrew\"][\"location\"]\n\n    # Visit John\n    travel_time = travel_distances[(current_location, constraints[\"John\"][\"location\"])]\n    wait_time = max(0, constraints[\"John\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"John\"][\"start_time\"], current_time) + constraints[\"John\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"John\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"John\"][\"location\"], \"time\": f\"{(constraints['John']['start_time'] // 60):{2}d}:{constraints['John']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"John\"][\"location\"], \"duration\": constraints[\"John\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"John\"][\"location\"]\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    json_schedule = json.dumps(schedule, indent=4)\n    print(\"SOLUTION:\")\n    print(json_schedule)\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_978"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Kenneth",
            "start_time": "11:15AM",
            "end_time": "11:45AM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Sarah",
            "start_time": "12:04PM",
            "end_time": "1:34PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Daniel",
            "start_time": "1:49PM",
            "end_time": "2:04PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Richard",
            "start_time": "2:15PM",
            "end_time": "2:45PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Karen",
            "start_time": "2:52PM",
            "end_time": "4:52PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Thomas",
            "start_time": "7:15PM",
            "end_time": "7:30PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Mary",
            "start_time": "8:00PM",
            "end_time": "9:15PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Nob Hill\", \"Embarcadero\"): 9,\n    (\"Nob Hill\", \"The Castro\"): 17,\n    (\"Nob Hill\", \"Haight-Ashbury\"): 13,\n    (\"Nob Hill\", \"Union Square\"): 7,\n    (\"Nob Hill\", \"North Beach\"): 8,\n    (\"Nob Hill\", \"Pacific Heights\"): 8,\n    (\"Nob Hill\", \"Chinatown\"): 6,\n    (\"Nob Hill\", \"Golden Gate Park\"): 17,\n    (\"Nob Hill\", \"Marina District\"): 11,\n    (\"Nob Hill\", \"Russian Hill\"): 5,\n    (\"Embarcadero\", \"Nob Hill\"): 10,\n    (\"Embarcadero\", \"The Castro\"): 25,\n    (\"Embarcadero\", \"Haight-Ashbury\"): 21,\n    (\"Embarcadero\", \"Union Square\"): 10,\n    (\"Embarcadero\", \"North Beach\"): 5,\n    (\"Embarcadero\", \"Pacific Heights\"): 11,\n    (\"Embarcadero\", \"Chinatown\"): 7,\n    (\"Embarcadero\", \"Golden Gate Park\"): 25,\n    (\"Embarcadero\", \"Marina District\"): 12,\n    (\"Embarcadero\", \"Russian Hill\"): 8,\n    (\"The Castro\", \"Nob Hill\"): 16,\n    (\"The Castro\", \"Embarcadero\"): 22,\n    (\"The Castro\", \"Haight-Ashbury\"): 6,\n    (\"The Castro\", \"Union Square\"): 19,\n    (\"The Castro\", \"North Beach\"): 20,\n    (\"The Castro\", \"Pacific Heights\"): 16,\n    (\"The Castro\", \"Chinatown\"): 22,\n    (\"The Castro\", \"Golden Gate Park\"): 11,\n    (\"The Castro\", \"Marina District\"): 21,\n    (\"The Castro\", \"Russian Hill\"): 18,\n    (\"Haight-Ashbury\", \"Nob Hill\"): 15,\n    (\"Haight-Ashbury\", \"Embarcadero\"): 20,\n    (\"Haight-Ashbury\", \"The Castro\"): 6,\n    (\"Haight-Ashbury\", \"Union Square\"): 19,\n    (\"Haight-Ashbury\", \"North Beach\"): 19,\n    (\"Haight-Ashbury\", \"Pacific Heights\"): 12,\n    (\"Haight-Ashbury\", \"Chinatown\"): 19,\n    (\"Haight-Ashbury\", \"Golden Gate Park\"): 7,\n    (\"Haight-Ashbury\", \"Marina District\"): 17,\n    (\"Haight-Ashbury\", \"Russian Hill\"): 17,\n    (\"Union Square\", \"Nob Hill\"): 9,\n    (\"Union Square\", \"Embarcadero\"): 11,\n    (\"Union Square\", \"The Castro\"): 17,\n    (\"Union Square\", \"Haight-Ashbury\"): 18,\n    (\"Union Square\", \"North Beach\"): 10,\n    (\"Union Square\", \"Pacific Heights\"): 15,\n    (\"Union Square\", \"Chinatown\"): 7,\n    (\"Union Square\", \"Golden Gate Park\"): 22,\n    (\"Union Square\", \"Marina District\"): 18,\n    (\"Union Square\", \"Russian Hill\"): 13,\n    (\"North Beach\", \"Nob Hill\"): 7,\n    (\"North Beach\", \"Embarcadero\"): 6,\n    (\"North Beach\", \"The Castro\"): 23,\n    (\"North Beach\", \"Haight-Ashbury\"): 18,\n    (\"North Beach\", \"Union Square\"): 7,\n    (\"North Beach\", \"Pacific Heights\"): 9,\n    (\"North Beach\", \"Chinatown\"): 6,\n    (\"North Beach\", \"Golden Gate Park\"): 22,\n    (\"North Beach\", \"Marina District\"): 9,\n    (\"North Beach\", \"Russian Hill\"): 4,\n    (\"Pacific Heights\", \"Nob Hill\"): 8,\n    (\"Pacific Heights\", \"Embarcadero\"): 10,\n    (\"Pacific Heights\", \"The Castro\"): 16,\n    (\"Pacific Heights\", \"Haight-Ashbury\"): 11,\n    (\"Pacific Heights\", \"Union Square\"): 12,\n    (\"Pacific Heights\", \"North Beach\"): 9,\n    (\"Pacific Heights\", \"Chinatown\"): 11,\n    (\"Pacific Heights\", \"Golden Gate Park\"): 15,\n    (\"Pacific Heights\", \"Marina District\"): 6,\n    (\"Pacific Heights\", \"Russian Hill\"): 7,\n    (\"Chinatown\", \"Nob Hill\"): 9,\n    (\"Chinatown\", \"Embarcadero\"): 5,\n    (\"Chinatown\", \"The Castro\"): 22,\n    (\"Chinatown\", \"Haight-Ashbury\"): 19,\n    (\"Chinatown\", \"Union Square\"): 7,\n    (\"Chinatown\", \"North Beach\"): 3,\n    (\"Chinatown\", \"Pacific Heights\"): 10,\n    (\"Chinatown\", \"Golden Gate Park\"): 23,\n    (\"Chinatown\", \"Marina District\"): 12,\n    (\"Chinatown\", \"Russian Hill\"): 7,\n    (\"Golden Gate Park\", \"Nob Hill\"): 20,\n    (\"Golden Gate Park\", \"Embarcadero\"): 25,\n    (\"Golden Gate Park\", \"The Castro\"): 13,\n    (\"Golden Gate Park\", \"Haight-Ashbury\"): 7,\n    (\"Golden Gate Park\", \"Union Square\"): 22,\n    (\"Golden Gate Park\", \"North Beach\"): 23,\n    (\"Golden Gate Park\", \"Pacific Heights\"): 16,\n    (\"Golden Gate Park\", \"Chinatown\"): 23,\n    (\"Golden Gate Park\", \"Marina District\"): 16,\n    (\"Golden Gate Park\", \"Russian Hill\"): 19,\n    (\"Marina District\", \"Nob Hill\"): 12,\n    (\"Marina District\", \"Embarcadero\"): 14,\n    (\"Marina District\", \"The Castro\"): 22,\n    (\"Marina District\", \"Haight-Ashbury\"): 16,\n    (\"Marina District\", \"Union Square\"): 16,\n    (\"Marina District\", \"North Beach\"): 11,\n    (\"Marina District\", \"Pacific Heights\"): 7,\n    (\"Marina District\", \"Chinatown\"): 15,\n    (\"Marina District\", \"Golden Gate Park\"): 18,\n    (\"Marina District\", \"Russian Hill\"): 8,\n    (\"Russian Hill\", \"Nob Hill\"): 5,\n    (\"Russian Hill\", \"Embarcadero\"): 8,\n    (\"Russian Hill\", \"The Castro\"): 21,\n    (\"Russian Hill\", \"Haight-Ashbury\"): 17,\n    (\"Russian Hill\", \"Union Square\"): 10,\n    (\"Russian Hill\", \"North Beach\"): 5,\n    (\"Russian Hill\", \"Pacific Heights\"): 7,\n    (\"Russian Hill\", \"Chinatown\"): 9,\n    (\"Russian Hill\", \"Golden Gate Park\"): 21,\n    (\"Russian Hill\", \"Marina District\"): 7\n}\n\n# Constraints\nconstraints = {\n    \"Mary\": {\"location\": \"Embarcadero\", \"start_time\": 20 * 60, \"end_time\": 21 * 60, \"duration\": 75},\n    \"Kenneth\": {\"location\": \"The Castro\", \"start_time\": 11 * 60, \"end_time\": 19 * 60, \"duration\": 30},\n    \"Joseph\": {\"location\": \"Haight-Ashbury\", \"start_time\": 20 * 60, \"end_time\": 22 * 60, \"duration\": 120},\n    \"Sarah\": {\"location\": \"Union Square\", \"start_time\": 11 * 60, \"end_time\": 14 * 60, \"duration\": 90},\n    \"Thomas\": {\"location\": \"North Beach\", \"start_time\": 19 * 60, \"end_time\": 20 * 60, \"duration\": 15},\n    \"Daniel\": {\"location\": \"Pacific Heights\", \"start_time\": 13 * 60, \"end_time\": 20 * 60, \"duration\": 15},\n    \"Richard\": {\"location\": \"Chinatown\", \"start_time\": 8 * 60, \"end_time\": 19 * 60, \"duration\": 30},\n    \"Mark\": {\"location\": \"Golden Gate Park\", \"start_time\": 17 * 60, \"end_time\": 21 * 60, \"duration\": 120},\n    \"David\": {\"location\": \"Marina District\", \"start_time\": 20 * 60, \"end_time\": 21 * 60, \"duration\": 60},\n    \"Karen\": {\"location\": \"Russian Hill\", \"start_time\": 13 * 60, \"end_time\": 19 * 60, \"duration\": 120}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = 9 * 60  # 9:00 AM\n    current_location = \"Nob Hill\"\n\n    # Start at Nob Hill\n    schedule.append({\"action\": \"start\", \"location\": current_location, \"time\": f\"{current_time // 60}:{current_time % 60}AM\"})\n\n    # Visit Kenneth\n    travel_time = travel_distances[(current_location, constraints[\"Kenneth\"][\"location\"])]\n    wait_time = max(0, constraints[\"Kenneth\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Kenneth\"][\"start_time\"], current_time) + constraints[\"Kenneth\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Kenneth\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Kenneth\"][\"location\"], \"time\": f\"{(constraints['Kenneth']['start_time'] // 60):{2}d}:{constraints['Kenneth']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Kenneth\"][\"location\"], \"duration\": constraints[\"Kenneth\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Kenneth\"][\"location\"]\n\n    # Visit Joseph\n    travel_time = travel_distances[(current_location, constraints[\"Joseph\"][\"location\"])]\n    wait_time = max(0, constraints[\"Joseph\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Joseph\"][\"start_time\"], current_time) + constraints[\"Joseph\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Joseph\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Joseph\"][\"location\"], \"time\": f\"{(constraints['Joseph']['start_time'] // 60):{2}d}:{constraints['Joseph']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Joseph\"][\"location\"], \"duration\": constraints[\"Joseph\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Joseph\"][\"location\"]\n\n    # Visit Sarah\n    travel_time = travel_distances[(current_location, constraints[\"Sarah\"][\"location\"])]\n    wait_time = max(0, constraints[\"Sarah\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Sarah\"][\"start_time\"], current_time) + constraints[\"Sarah\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Sarah\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Sarah\"][\"location\"], \"time\": f\"{(constraints['Sarah']['start_time'] // 60):{2}d}:{constraints['Sarah']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Sarah\"][\"location\"], \"duration\": constraints[\"Sarah\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Sarah\"][\"location\"]\n\n    # Visit Thomas\n    travel_time = travel_distances[(current_location, constraints[\"Thomas\"][\"location\"])]\n    wait_time = max(0, constraints[\"Thomas\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Thomas\"][\"start_time\"], current_time) + constraints[\"Thomas\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Thomas\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Thomas\"][\"location\"], \"time\": f\"{(constraints['Thomas']['start_time'] // 60):{2}d}:{constraints['Thomas']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Thomas\"][\"location\"], \"duration\": constraints[\"Thomas\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Thomas\"][\"location\"]\n\n    # Visit Daniel\n    travel_time = travel_distances[(current_location, constraints[\"Daniel\"][\"location\"])]\n    wait_time = max(0, constraints[\"Daniel\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Daniel\"][\"start_time\"], current_time) + constraints[\"Daniel\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Daniel\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Daniel\"][\"location\"], \"time\": f\"{(constraints['Daniel']['start_time'] // 60):{2}d}:{constraints['Daniel']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Daniel\"][\"location\"], \"duration\": constraints[\"Daniel\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Daniel\"][\"location\"]\n\n    # Visit Richard\n    travel_time = travel_distances[(current_location, constraints[\"Richard\"][\"location\"])]\n    wait_time = max(0, constraints[\"Richard\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Richard\"][\"start_time\"], current_time) + constraints[\"Richard\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Richard\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Richard\"][\"location\"], \"time\": f\"{(constraints['Richard']['start_time'] // 60):{2}d}:{constraints['Richard']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Richard\"][\"location\"], \"duration\": constraints[\"Richard\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Richard\"][\"location\"]\n\n    # Visit Mary\n    travel_time = travel_distances[(current_location, constraints[\"Mary\"][\"location\"])]\n    wait_time = max(0, constraints[\"Mary\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Mary\"][\"start_time\"], current_time) + constraints[\"Mary\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Mary\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Mary\"][\"location\"], \"time\": f\"{(constraints['Mary']['start_time'] // 60):{2}d}:{constraints['Mary']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Mary\"][\"location\"], \"duration\": constraints[\"Mary\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Mary\"][\"location\"]\n\n    # Visit Mark\n    travel_time = travel_distances[(current_location, constraints[\"Mark\"][\"location\"])]\n    wait_time = max(0, constraints[\"Mark\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Mark\"][\"start_time\"], current_time) + constraints[\"Mark\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Mark\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Mark\"][\"location\"], \"time\": f\"{(constraints['Mark']['start_time'] // 60):{2}d}:{constraints['Mark']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Mark\"][\"location\"], \"duration\": constraints[\"Mark\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Mark\"][\"location\"]\n\n    # Visit David\n    travel_time = travel_distances[(current_location, constraints[\"David\"][\"location\"])]\n    wait_time = max(0, constraints[\"David\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"David\"][\"start_time\"], current_time) + constraints[\"David\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"David\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"David\"][\"location\"], \"time\": f\"{(constraints['David']['start_time'] // 60):{2}d}:{constraints['David']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"David\"][\"location\"], \"duration\": constraints[\"David\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"David\"][\"location\"]\n\n    # Visit Karen\n    travel_time = travel_distances[(current_location, constraints[\"Karen\"][\"location\"])]\n    wait_time = max(0, constraints[\"Karen\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Karen\"][\"start_time\"], current_time) + constraints[\"Karen\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Karen\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Karen\"][\"location\"], \"time\": f\"{(constraints['Karen']['start_time'] // 60):{2}d}:{constraints['Karen']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Karen\"][\"location\"], \"duration\": constraints[\"Karen\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Karen\"][\"location\"]\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    json_schedule = json.dumps(schedule, indent=4)\n    print(\"SOLUTION:\")\n    print(json_schedule)\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_934"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Mission District",
            "person": "William",
            "start_time": "1:15PM",
            "end_time": "1:45PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Robert",
            "start_time": "2:15PM",
            "end_time": "3:00PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Mark",
            "start_time": "3:19PM",
            "end_time": "4:34PM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Linda",
            "start_time": "4:57PM",
            "end_time": "5:27PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Elizabeth",
            "start_time": "5:42PM",
            "end_time": "7:27PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Rebecca",
            "start_time": "7:42PM",
            "end_time": "8:42PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"The Castro\", \"Presidio\"): 20,\n    (\"The Castro\", \"Sunset District\"): 17,\n    (\"The Castro\", \"Haight-Ashbury\"): 6,\n    (\"The Castro\", \"Mission District\"): 7,\n    (\"The Castro\", \"Golden Gate Park\"): 11,\n    (\"The Castro\", \"Russian Hill\"): 18,\n    (\"Presidio\", \"The Castro\"): 21,\n    (\"Presidio\", \"Sunset District\"): 15,\n    (\"Presidio\", \"Haight-Ashbury\"): 15,\n    (\"Presidio\", \"Mission District\"): 26,\n    (\"Presidio\", \"Golden Gate Park\"): 12,\n    (\"Presidio\", \"Russian Hill\"): 14,\n    (\"Sunset District\", \"The Castro\"): 17,\n    (\"Sunset District\", \"Presidio\"): 16,\n    (\"Sunset District\", \"Haight-Ashbury\"): 15,\n    (\"Sunset District\", \"Mission District\"): 24,\n    (\"Sunset District\", \"Golden Gate Park\"): 11,\n    (\"Sunset District\", \"Russian Hill\"): 24,\n    (\"Haight-Ashbury\", \"The Castro\"): 6,\n    (\"Haight-Ashbury\", \"Presidio\"): 15,\n    (\"Haight-Ashbury\", \"Sunset District\"): 15,\n    (\"Haight-Ashbury\", \"Mission District\"): 11,\n    (\"Haight-Ashbury\", \"Golden Gate Park\"): 7,\n    (\"Haight-Ashbury\", \"Russian Hill\"): 17,\n    (\"Mission District\", \"The Castro\"): 7,\n    (\"Mission District\", \"Presidio\"): 25,\n    (\"Mission District\", \"Sunset District\"): 24,\n    (\"Mission District\", \"Haight-Ashbury\"): 12,\n    (\"Mission District\", \"Golden Gate Park\"): 17,\n    (\"Mission District\", \"Russian Hill\"): 15,\n    (\"Golden Gate Park\", \"The Castro\"): 13,\n    (\"Golden Gate Park\", \"Presidio\"): 11,\n    (\"Golden Gate Park\", \"Sunset District\"): 10,\n    (\"Golden Gate Park\", \"Haight-Ashbury\"): 7,\n    (\"Golden Gate Park\", \"Mission District\"): 17,\n    (\"Golden Gate Park\", \"Russian Hill\"): 19,\n    (\"Russian Hill\", \"The Castro\"): 21,\n    (\"Russian Hill\", \"Presidio\"): 14,\n    (\"Russian Hill\", \"Sunset District\"): 23,\n    (\"Russian Hill\", \"Haight-Ashbury\"): 17,\n    (\"Russian Hill\", \"Mission District\"): 16,\n    (\"Russian Hill\", \"Golden Gate Park\"): 21\n}\n\n# Constraints\nconstraints = {\n    \"Rebecca\": {\"location\": \"Presidio\", \"start_time\": 18 * 60, \"end_time\": 20 * 60, \"duration\": 60},\n    \"Linda\": {\"location\": \"Sunset District\", \"start_time\": 15 * 60, \"end_time\": 19 * 60, \"duration\": 30},\n    \"Elizabeth\": {\"location\": \"Haight-Ashbury\", \"start_time\": 17 * 60, \"end_time\": 19 * 60, \"duration\": 105},\n    \"William\": {\"location\": \"Mission District\", \"start_time\": 13 * 60, \"end_time\": 19 * 60, \"duration\": 30},\n    \"Robert\": {\"location\": \"Golden Gate Park\", \"start_time\": 14 * 60, \"end_time\": 21 * 60, \"duration\": 45},\n    \"Mark\": {\"location\": \"Russian Hill\", \"start_time\": 10 * 60, \"end_time\": 21 * 60, \"duration\": 75}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = 9 * 60  # 9:00 AM\n    current_location = \"The Castro\"\n\n    # Start at The Castro\n    schedule.append({\"action\": \"start\", \"location\": current_location, \"time\": f\"{current_time // 60}:{current_time % 60}AM\"})\n\n    # Visit Mark\n    travel_time = travel_distances[(current_location, constraints[\"Mark\"][\"location\"])]\n    wait_time = max(0, constraints[\"Mark\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Mark\"][\"start_time\"], current_time) + constraints[\"Mark\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Mark\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Mark\"][\"location\"], \"time\": f\"{(constraints['Mark']['start_time'] // 60):{2}d}:{constraints['Mark']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Mark\"][\"location\"], \"duration\": constraints[\"Mark\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Mark\"][\"location\"]\n\n    # Visit Rebecca\n    travel_time = travel_distances[(current_location, constraints[\"Rebecca\"][\"location\"])]\n    wait_time = max(0, constraints[\"Rebecca\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Rebecca\"][\"start_time\"], current_time) + constraints[\"Rebecca\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Rebecca\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Rebecca\"][\"location\"], \"time\": f\"{(constraints['Rebecca']['start_time'] // 60):{2}d}:{constraints['Rebecca']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Rebecca\"][\"location\"], \"duration\": constraints[\"Rebecca\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Rebecca\"][\"location\"]\n\n    # Visit Linda\n    travel_time = travel_distances[(current_location, constraints[\"Linda\"][\"location\"])]\n    wait_time = max(0, constraints[\"Linda\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Linda\"][\"start_time\"], current_time) + constraints[\"Linda\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Linda\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Linda\"][\"location\"], \"time\": f\"{(constraints['Linda']['start_time'] // 60):{2}d}:{constraints['Linda']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Linda\"][\"location\"], \"duration\": constraints[\"Linda\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Linda\"][\"location\"]\n\n    # Visit Elizabeth\n    travel_time = travel_distances[(current_location, constraints[\"Elizabeth\"][\"location\"])]\n    wait_time = max(0, constraints[\"Elizabeth\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Elizabeth\"][\"start_time\"], current_time) + constraints[\"Elizabeth\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Elizabeth\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Elizabeth\"][\"location\"], \"time\": f\"{(constraints['Elizabeth']['start_time'] // 60):{2}d}:{constraints['Elizabeth']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Elizabeth\"][\"location\"], \"duration\": constraints[\"Elizabeth\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Elizabeth\"][\"location\"]\n\n    # Visit William\n    travel_time = travel_distances[(current_location, constraints[\"William\"][\"location\"])]\n    wait_time = max(0, constraints[\"William\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"William\"][\"start_time\"], current_time) + constraints[\"William\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"William\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"William\"][\"location\"], \"time\": f\"{(constraints['William']['start_time'] // 60):{2}d}:{constraints['William']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"William\"][\"location\"], \"duration\": constraints[\"William\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"William\"][\"location\"]\n\n    # Visit Robert\n    travel_time = travel_distances[(current_location, constraints[\"Robert\"][\"location\"])]\n    wait_time = max(0, constraints[\"Robert\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Robert\"][\"start_time\"], current_time) + constraints[\"Robert\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Robert\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Robert\"][\"location\"], \"time\": f\"{(constraints['Robert']['start_time'] // 60):{2}d}:{constraints['Robert']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Robert\"][\"location\"], \"duration\": constraints[\"Robert\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Robert\"][\"location\"]\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    json_schedule = json.dumps(schedule, indent=4)\n    print(\"SOLUTION:\")\n    print(json_schedule)\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_575"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Margaret",
            "start_time": "10:15AM",
            "end_time": "10:45AM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Barbara",
            "start_time": "1:45PM",
            "end_time": "2:45PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Kimberly",
            "start_time": "2:52PM",
            "end_time": "3:22PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Kevin",
            "start_time": "8:00PM",
            "end_time": "8:30PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Bayview\", \"North Beach\"): 21,\n    (\"Bayview\", \"Presidio\"): 31,\n    (\"Bayview\", \"Haight-Ashbury\"): 19,\n    (\"Bayview\", \"Union Square\"): 17,\n    (\"North Beach\", \"Bayview\"): 22,\n    (\"North Beach\", \"Presidio\"): 17,\n    (\"North Beach\", \"Haight-Ashbury\"): 18,\n    (\"North Beach\", \"Union Square\"): 7,\n    (\"Presidio\", \"Bayview\"): 31,\n    (\"Presidio\", \"North Beach\"): 18,\n    (\"Presidio\", \"Haight-Ashbury\"): 15,\n    (\"Presidio\", \"Union Square\"): 22,\n    (\"Haight-Ashbury\", \"Bayview\"): 18,\n    (\"Haight-Ashbury\", \"North Beach\"): 19,\n    (\"Haight-Ashbury\", \"Presidio\"): 15,\n    (\"Haight-Ashbury\", \"Union Square\"): 17,\n    (\"Union Square\", \"Bayview\"): 15,\n    (\"Union Square\", \"North Beach\"): 10,\n    (\"Union Square\", \"Presidio\"): 24,\n    (\"Union Square\", \"Haight-Ashbury\"): 18\n}\n\n# Constraints\nconstraints = {\n    \"Barbara\": {\"location\": \"North Beach\", \"start_time\": 13 * 60, \"end_time\": 20 * 60, \"duration\": 60},\n    \"Margaret\": {\"location\": \"Presidio\", \"start_time\": 10 * 60, \"end_time\": 15 * 60, \"duration\": 30},\n    \"Kevin\": {\"location\": \"Haight-Ashbury\", \"start_time\": 20 * 60, \"end_time\": 21 * 60, \"duration\": 30},\n    \"Kimberly\": {\"location\": \"Union Square\", \"start_time\": 7 * 60, \"end_time\": 16 * 60, \"duration\": 30}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = 9 * 60  # 9:00 AM\n    current_location = \"Bayview\"\n\n    # Start at Bayview\n    schedule.append({\"action\": \"start\", \"location\": current_location, \"time\": f\"{current_time // 60}:{current_time % 60}AM\"})\n\n    # Visit Kimberly\n    travel_time = travel_distances[(current_location, constraints[\"Kimberly\"][\"location\"])]\n    wait_time = max(0, constraints[\"Kimberly\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Kimberly\"][\"start_time\"], current_time) + constraints[\"Kimberly\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Kimberly\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Kimberly\"][\"location\"], \"time\": f\"{(constraints['Kimberly']['start_time'] // 60):{2}d}:{constraints['Kimberly']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Kimberly\"][\"location\"], \"duration\": constraints[\"Kimberly\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Kimberly\"][\"location\"]\n\n    # Visit Margaret\n    travel_time = travel_distances[(current_location, constraints[\"Margaret\"][\"location\"])]\n    wait_time = max(0, constraints[\"Margaret\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Margaret\"][\"start_time\"], current_time) + constraints[\"Margaret\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Margaret\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Margaret\"][\"location\"], \"time\": f\"{(constraints['Margaret']['start_time'] // 60):{2}d}:{constraints['Margaret']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Margaret\"][\"location\"], \"duration\": constraints[\"Margaret\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Margaret\"][\"location\"]\n\n    # Visit Barbara\n    travel_time = travel_distances[(current_location, constraints[\"Barbara\"][\"location\"])]\n    wait_time = max(0, constraints[\"Barbara\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Barbara\"][\"start_time\"], current_time) + constraints[\"Barbara\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Barbara\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Barbara\"][\"location\"], \"time\": f\"{(constraints['Barbara']['start_time'] // 60):{2}d}:{constraints['Barbara']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Barbara\"][\"location\"], \"duration\": constraints[\"Barbara\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Barbara\"][\"location\"]\n\n    # Visit Kevin\n    travel_time = travel_distances[(current_location, constraints[\"Kevin\"][\"location\"])]\n    wait_time = max(0, constraints[\"Kevin\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Kevin\"][\"start_time\"], current_time) + constraints[\"Kevin\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}PM\", \"to\": constraints[\"Kevin\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Kevin\"][\"location\"], \"time\": f\"{(constraints['Kevin']['start_time'] // 60):{2}d}:{constraints['Kevin']['start_time'] % 60}PM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Kevin\"][\"location\"], \"duration\": constraints[\"Kevin\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Kevin\"][\"location\"]\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    json_schedule = json.dumps(schedule, indent=4)\n    print(\"SOLUTION:\")\n    print(json_schedule)\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_356"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Carol",
            "start_time": "10:15AM",
            "end_time": "10:45AM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Karen",
            "start_time": "12:45PM",
            "end_time": "2:45PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Rebecca",
            "start_time": "2:58PM",
            "end_time": "4:58PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    (\"Union Square\", \"Mission District\"): 14,\n    (\"Union Square\", \"Bayview\"): 15,\n    (\"Union Square\", \"Sunset District\"): 26,\n    (\"Mission District\", \"Union Square\"): 15,\n    (\"Mission District\", \"Bayview\"): 15,\n    (\"Mission District\", \"Sunset District\"): 24,\n    (\"Bayview\", \"Union Square\"): 17,\n    (\"Bayview\", \"Mission District\"): 13,\n    (\"Bayview\", \"Sunset District\"): 23,\n    (\"Sunset District\", \"Union Square\"): 30,\n    (\"Sunset District\", \"Mission District\"): 24,\n    (\"Sunset District\", \"Bayview\"): 22\n}\n\n# Constraints\nconstraints = {\n    \"Rebecca\": {\"location\": \"Mission District\", \"start_time\": 11 * 60, \"end_time\": 20 * 60, \"duration\": 120},\n    \"Karen\": {\"location\": \"Bayview\", \"start_time\": 12 * 60, \"end_time\": 15 * 60, \"duration\": 120},\n    \"Carol\": {\"location\": \"Sunset District\", \"start_time\": 10 * 60, \"end_time\": 11 * 60, \"duration\": 30}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = 9 * 60  # 9:00 AM\n    current_location = \"Union Square\"\n\n    # Start at Union Square\n    schedule.append({\"action\": \"start\", \"location\": current_location, \"time\": f\"{current_time // 60}:{current_time % 60}AM\"})\n\n    # Visit Carol\n    travel_time = travel_distances[(current_location, constraints[\"Carol\"][\"location\"])]\n    wait_time = max(0, constraints[\"Carol\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Carol\"][\"start_time\"], current_time) + constraints[\"Carol\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Carol\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Carol\"][\"location\"], \"time\": f\"{(constraints['Carol']['start_time'] // 60):{2}d}:{constraints['Carol']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Carol\"][\"location\"], \"duration\": constraints[\"Carol\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Carol\"][\"location\"]\n\n    # Visit Karen\n    travel_time = travel_distances[(current_location, constraints[\"Karen\"][\"location\"])]\n    wait_time = max(0, constraints[\"Karen\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Karen\"][\"start_time\"], current_time) + constraints[\"Karen\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Karen\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Karen\"][\"location\"], \"time\": f\"{(constraints['Karen']['start_time'] // 60):{2}d}:{constraints['Karen']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Karen\"][\"location\"], \"duration\": constraints[\"Karen\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}AM\"})\n    current_time = meet_time\n    current_location = constraints[\"Karen\"][\"location\"]\n\n    # Visit Rebecca\n    travel_time = travel_distances[(current_location, constraints[\"Rebecca\"][\"location\"])]\n    wait_time = max(0, constraints[\"Rebecca\"][\"start_time\"] - current_time)\n    meet_time = max(constraints[\"Rebecca\"][\"start_time\"], current_time) + constraints[\"Rebecca\"][\"duration\"]\n    schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": f\"{current_time // 60}:{current_time % 60}AM\", \"to\": constraints[\"Rebecca\"][\"location\"]})\n    schedule.append({\"action\": \"wait\", \"location\": constraints[\"Rebecca\"][\"location\"], \"time\": f\"{(constraints['Rebecca']['start_time'] // 60):{2}d}:{constraints['Rebecca']['start_time'] % 60}AM\"})\n    schedule.append({\"action\": \"meet\", \"location\": constraints[\"Rebecca\"][\"location\"], \"duration\": constraints[\"Rebecca\"][\"duration\"], \"time\": f\"{meet_time // 60}:{meet_time % 60}PM\"})\n    current_time = meet_time\n    current_location = constraints[\"Rebecca\"][\"location\"]\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    json_schedule = json.dumps(schedule, indent=4)\n    print(\"SOLUTION:\")\n    print(json_schedule)\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_286"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Unknown",
            "start_time": "11:02AM",
            "end_time": "12:47PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Unknown",
            "start_time": "1:09PM",
            "end_time": "3:09PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Unknown",
            "start_time": "2:46PM",
            "end_time": "4:01PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Emily",
            "start_time": "4:15PM",
            "end_time": "6:00PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Joseph",
            "start_time": "6:07PM",
            "end_time": "8:07PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Melissa",
            "start_time": "8:29PM",
            "end_time": "9:44PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Input parameters\ntravel_distances = {\n    'Fisherman\\'s Wharf': {\n        'Presidio': 17,\n        'Richmond District': 18,\n        'Financial District': 11\n    },\n    'Presidio': {\n        'Fisherman\\'s Wharf': 19,\n        'Richmond District': 7,\n        'Financial District': 23\n    },\n    'Richmond District': {\n        'Fisherman\\'s Wharf': 18,\n        'Presidio': 7,\n        'Financial District': 22\n    },\n    'Financial District': {\n        'Fisherman\\'s Wharf': 10,\n        'Presidio': 22,\n        'Richmond District': 21\n    }\n}\n\nconstraints = {\n    'Emily': {'start_time': 4 * 60 + 15, 'end_time': 21 * 60,'min_meeting_time': 105},\n    'Joseph': {'start_time': 5 * 60 + 15, 'end_time': 22 * 60,'min_meeting_time': 120},\n    'Melissa': {'start_time': 3 * 60 + 45, 'end_time': 21 * 60,'min_meeting_time': 75}\n}\n\ndef compute_meeting_schedule():\n    schedule = []\n    start_time = 9 * 60\n    current_location = 'Fisherman\\'s Wharf'\n\n    # Meet Emily\n    emily_start_time = max(constraints['Emily']['start_time'], start_time + travel_distances['Fisherman\\'s Wharf']['Presidio'])\n    emily_end_time = min(constraints['Emily']['end_time'], emily_start_time + constraints['Emily']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Fisherman\\'s Wharf']['Presidio'], 'time': format_time(start_time), 'to': 'Presidio'})\n    schedule.append({'action': 'wait', 'location': 'Presidio', 'time': format_time(emily_start_time)})\n    schedule.append({'action':'meet', 'location': 'Presidio', 'duration': emily_end_time - emily_start_time, 'time': format_time(emily_end_time)})\n    current_location = 'Presidio'\n    start_time = emily_end_time\n\n    # Meet Joseph\n    joseph_start_time = max(constraints['Joseph']['start_time'], start_time + travel_distances['Presidio']['Richmond District'])\n    joseph_end_time = min(constraints['Joseph']['end_time'], joseph_start_time + constraints['Joseph']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Presidio']['Richmond District'], 'time': format_time(start_time), 'to': 'Richmond District'})\n    schedule.append({'action': 'wait', 'location': 'Richmond District', 'time': format_time(joseph_start_time)})\n    schedule.append({'action':'meet', 'location': 'Richmond District', 'duration': joseph_end_time - joseph_start_time, 'time': format_time(joseph_end_time)})\n    current_location = 'Richmond District'\n    start_time = joseph_end_time\n\n    # Meet Melissa\n    melissa_start_time = max(constraints['Melissa']['start_time'], start_time + travel_distances['Richmond District']['Financial District'])\n    melissa_end_time = min(constraints['Melissa']['end_time'], melissa_start_time + constraints['Melissa']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Richmond District']['Financial District'], 'time': format_time(start_time), 'to': 'Financial District'})\n    schedule.append({'action': 'wait', 'location': 'Financial District', 'time': format_time(melissa_start_time)})\n    schedule.append({'action':'meet', 'location': 'Financial District', 'duration': melissa_end_time - melissa_start_time, 'time': format_time(melissa_end_time)})\n\n    # Return to Fisherman's Wharf\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Financial District']['Fisherman\\'s Wharf'], 'time': format_time(melissa_end_time), 'to': 'Fisherman\\'s Wharf'})\n\n    return schedule\n\ndef format_time(minutes):\n    hours = minutes // 60\n    mins = minutes % 60\n    am_pm = 'AM' if hours < 12 else 'PM'\n    hours = hours % 12 if hours!= 0 else 12\n    return f'{hours}:{mins:02}{am_pm}'\n\ndef main():\n    schedule = compute_meeting_schedule()\n    result = {'schedule': schedule}\n    print(json.dumps(result, indent=4))\n\nif __name__ == '__main__':\n    main()\n```\n\nThis program computes the optimal meeting schedule based on the given constraints and travel distances. It uses a simple greedy algorithm to find the best schedule. The `compute_meeting_schedule` function generates the schedule, and the `main` function prints the result as a JSON-formatted dictionary.",
      "count": "meeting_planning_example_210"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Emily",
            "start_time": "2:00PM",
            "end_time": "3:45PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Deborah",
            "start_time": "2:54PM",
            "end_time": "3:39PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Mark",
            "start_time": "4:13PM",
            "end_time": "5:13PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "George",
            "start_time": "2:00PM",
            "end_time": "11:26AM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Margaret",
            "start_time": "10:00PM",
            "end_time": "10:30PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Steven",
            "start_time": "3:56PM",
            "end_time": "5:41PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Andrew",
            "start_time": "9:30PM",
            "end_time": "10:45PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Deborah",
            "start_time": "9:16AM",
            "end_time": "10:01AM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "George",
            "start_time": "10:23AM",
            "end_time": "11:23AM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Emily",
            "start_time": "12:15PM",
            "end_time": "2:00PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Mark",
            "start_time": "2:45PM",
            "end_time": "3:45PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Steven",
            "start_time": "3:57PM",
            "end_time": "5:42PM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Margaret",
            "start_time": "9:30PM",
            "end_time": "10:30PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Input parameters\ntravel_distances = {\n    'Alamo Square': {\n        'Russian Hill': 13,\n        'Presidio': 18,\n        'Chinatown': 16,\n        'Sunset District': 16,\n        'The Castro': 8,\n        'Embarcadero': 17,\n        'Golden Gate Park': 9\n    },\n    'Russian Hill': {\n        'Alamo Square': 15,\n        'Presidio': 14,\n        'Chinatown': 9,\n        'Sunset District': 23,\n        'The Castro': 21,\n        'Embarcadero': 8,\n        'Golden Gate Park': 21\n    },\n    'Presidio': {\n        'Alamo Square': 18,\n        'Russian Hill': 14,\n        'Chinatown': 21,\n        'Sunset District': 15,\n        'The Castro': 21,\n        'Embarcadero': 20,\n        'Golden Gate Park': 12\n    },\n    'Chinatown': {\n        'Alamo Square': 17,\n        'Russian Hill': 7,\n        'Presidio': 19,\n        'Sunset District': 29,\n        'The Castro': 22,\n        'Embarcadero': 5,\n        'Golden Gate Park': 23\n    },\n    'Sunset District': {\n        'Alamo Square': 17,\n        'Russian Hill': 24,\n        'Presidio': 16,\n        'Chinatown': 30,\n        'The Castro': 17,\n        'Embarcadero': 31,\n        'Golden Gate Park': 11\n    },\n    'The Castro': {\n        'Alamo Square': 8,\n        'Russian Hill': 18,\n        'Presidio': 20,\n        'Chinatown': 20,\n        'Sunset District': 17,\n        'Embarcadero': 22,\n        'Golden Gate Park': 11\n    },\n    'Embarcadero': {\n        'Alamo Square': 19,\n        'Russian Hill': 8,\n        'Presidio': 20,\n        'Chinatown': 7,\n        'Sunset District': 30,\n        'The Castro': 25,\n        'Golden Gate Park': 25\n    },\n    'Golden Gate Park': {\n        'Alamo Square': 10,\n        'Russian Hill': 19,\n        'Presidio': 11,\n        'Chinatown': 23,\n        'Sunset District': 10,\n        'The Castro': 13,\n        'Embarcadero': 25\n    }\n}\n\nconstraints = {\n    'Emily': {'start_time': 12 * 60 + 15, 'end_time': 14 * 60,'min_meeting_time': 105},\n    'Mark': {'start_time': 14 * 60 + 45, 'end_time': 19 * 60,'min_meeting_time': 60},\n    'Deborah': {'start_time': 7 * 60, 'end_time': 15 * 60,'min_meeting_time': 45},\n    'Margaret': {'start_time': 21 * 60 + 30, 'end_time': 22 * 60,'min_meeting_time': 60},\n    'George': {'start_time': 7 * 60, 'end_time': 14 * 60,'min_meeting_time': 60},\n    'Andrew': {'start_time': 20 * 60 + 15, 'end_time': 22 * 60,'min_meeting_time': 75},\n    'Steven': {'start_time': 11 * 60 + 15, 'end_time': 21 * 60,'min_meeting_time': 105}\n}\n\ndef compute_meeting_schedule():\n    schedule = []\n    start_time = 9 * 60\n    current_location = 'Alamo Square'\n\n    # Meet Emily\n    emily_start_time = max(constraints['Emily']['start_time'], start_time + travel_distances['Alamo Square']['Russian Hill'])\n    emily_end_time = min(constraints['Emily']['end_time'], emily_start_time + constraints['Emily']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Alamo Square']['Russian Hill'], 'time': format_time(start_time), 'to': 'Russian Hill'})\n    schedule.append({'action': 'wait', 'location': 'Russian Hill', 'time': format_time(emily_start_time)})\n    schedule.append({'action':'meet', 'location': 'Russian Hill', 'duration': emily_end_time - emily_start_time, 'time': format_time(emily_end_time)})\n    current_location = 'Russian Hill'\n    start_time = emily_end_time\n\n    # Meet Deborah\n    deborah_start_time = max(constraints['Deborah']['start_time'], start_time + travel_distances['Russian Hill']['Chinatown'])\n    deborah_end_time = min(constraints['Deborah']['end_time'], deborah_start_time + constraints['Deborah']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Russian Hill']['Chinatown'], 'time': format_time(start_time), 'to': 'Chinatown'})\n    schedule.append({'action': 'wait', 'location': 'Chinatown', 'time': format_time(deborah_start_time)})\n    schedule.append({'action':'meet', 'location': 'Chinatown', 'duration': deborah_end_time - deborah_start_time, 'time': format_time(deborah_end_time)})\n    current_location = 'Chinatown'\n    start_time = deborah_end_time\n\n    # Meet Mark\n    mark_start_time = max(constraints['Mark']['start_time'], start_time + travel_distances['Chinatown']['Presidio'])\n    mark_end_time = min(constraints['Mark']['end_time'], mark_start_time + constraints['Mark']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Chinatown']['Presidio'], 'time': format_time(start_time), 'to': 'Presidio'})\n    schedule.append({'action': 'wait', 'location': 'Presidio', 'time': format_time(mark_start_time)})\n    schedule.append({'action':'meet', 'location': 'Presidio', 'duration': mark_end_time - mark_start_time, 'time': format_time(mark_end_time)})\n    current_location = 'Presidio'\n    start_time = mark_end_time\n\n    # Meet George\n    george_start_time = max(constraints['George']['start_time'], start_time + travel_distances['Presidio']['The Castro'])\n    george_end_time = min(constraints['George']['end_time'], george_start_time + constraints['George']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Presidio']['The Castro'], 'time': format_time(start_time), 'to': 'The Castro'})\n    schedule.append({'action': 'wait', 'location': 'The Castro', 'time': format_time(george_start_time)})\n    schedule.append({'action':'meet', 'location': 'The Castro', 'duration': george_end_time - george_start_time, 'time': format_time(george_end_time)})\n    current_location = 'The Castro'\n    start_time = george_end_time\n\n    # Meet Margaret\n    margaret_start_time = max(constraints['Margaret']['start_time'], start_time + travel_distances['The Castro']['Sunset District'])\n    margaret_end_time = min(constraints['Margaret']['end_time'], margaret_start_time + constraints['Margaret']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['The Castro']['Sunset District'], 'time': format_time(start_time), 'to': 'Sunset District'})\n    schedule.append({'action': 'wait', 'location': 'Sunset District', 'time': format_time(margaret_start_time)})\n    schedule.append({'action':'meet', 'location': 'Sunset District', 'duration': margaret_end_time - margaret_start_time, 'time': format_time(margaret_end_time)})\n\n    # Meet Steven\n    steven_start_time = max(constraints['Steven']['start_time'], start_time + travel_distances['Sunset District']['Golden Gate Park'])\n    steven_end_time = min(constraints['Steven']['end_time'], steven_start_time + constraints['Steven']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Sunset District']['Golden Gate Park'], 'time': format_time(start_time), 'to': 'Golden Gate Park'})\n    schedule.append({'action': 'wait', 'location': 'Golden Gate Park', 'time': format_time(steven_start_time)})\n    schedule.append({'action':'meet', 'location': 'Golden Gate Park', 'duration': steven_end_time - steven_start_time, 'time': format_time(steven_end_time)})\n\n    # Meet Andrew\n    andrew_start_time = max(constraints['Andrew']['start_time'], start_time + travel_distances['Golden Gate Park']['Embarcadero'])\n    andrew_end_time = min(constraints['Andrew']['end_time'], andrew_start_time + constraints['Andrew']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Golden Gate Park']['Embarcadero'], 'time': format_time(start_time), 'to': 'Embarcadero'})\n    schedule.append({'action': 'wait', 'location': 'Embarcadero', 'time': format_time(andrew_start_time)})\n    schedule.append({'action':'meet', 'location': 'Embarcadero', 'duration': andrew_end_time - andrew_start_time, 'time': format_time(andrew_end_time)})\n\n    # Return to Alamo Square\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Embarcadero']['Alamo Square'], 'time': format_time(andrew_end_time), 'to': 'Alamo Square'})\n\n    return schedule\n\ndef format_time(minutes):\n    hours = minutes // 60\n    mins = minutes % 60\n    am_pm = 'AM' if hours < 12 else 'PM'\n    hours = hours % 12 if hours!= 0 else 12\n    return f'{hours}:{mins:02}{am_pm}'\n\ndef main():\n    schedule = compute_meeting_schedule()\n    result = {'schedule': schedule}\n    print(json.dumps(result, indent=4))\n\nif __name__ == '__main__':\n    main()\n```",
      "count": "meeting_planning_example_612"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Emily",
            "start_time": "11:15AM",
            "end_time": "1:15PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "James",
            "start_time": "11:00AM",
            "end_time": "10:35AM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Helen",
            "start_time": "2:15PM",
            "end_time": "2:45PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Linda",
            "start_time": "2:48PM",
            "end_time": "3:03PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Anthony",
            "start_time": "2:45PM",
            "end_time": "2:31PM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Nancy",
            "start_time": "1:45PM",
            "end_time": "12:34PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Paul",
            "start_time": "4:15PM",
            "end_time": "5:45PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Kimberly",
            "start_time": "8:00PM",
            "end_time": "9:15PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "William",
            "start_time": "7:30PM",
            "end_time": "9:30PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Margaret",
            "start_time": "5:25PM",
            "end_time": "6:10PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Emily",
            "start_time": "9:15AM",
            "end_time": "11:15AM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Linda",
            "start_time": "11:26AM",
            "end_time": "11:41AM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Anthony",
            "start_time": "11:52AM",
            "end_time": "1:37PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Helen",
            "start_time": "1:54PM",
            "end_time": "2:24PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Paul",
            "start_time": "2:45PM",
            "end_time": "4:15PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "William",
            "start_time": "5:30PM",
            "end_time": "7:30PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Kimberly",
            "start_time": "7:52PM",
            "end_time": "9:07PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Input parameters\ntravel_distances = {\n    'Russian Hill': {\n        'Pacific Heights': 7,\n        'North Beach': 5,\n        'Golden Gate Park': 21,\n        'Embarcadero': 8,\n        'Haight-Ashbury': 17,\n        'Fisherman\\'s Wharf': 7,\n        'Mission District': 16,\n        'Alamo Square': 15,\n        'Bayview': 23,\n        'Richmond District': 14\n    },\n    'Pacific Heights': {\n        'Russian Hill': 7,\n        'North Beach': 9,\n        'Golden Gate Park': 15,\n        'Embarcadero': 10,\n        'Haight-Ashbury': 11,\n        'Fisherman\\'s Wharf': 13,\n        'Mission District': 15,\n        'Alamo Square': 10,\n        'Bayview': 22,\n        'Richmond District': 12\n    },\n    'North Beach': {\n        'Russian Hill': 4,\n        'Pacific Heights': 8,\n        'Golden Gate Park': 22,\n        'Embarcadero': 6,\n        'Haight-Ashbury': 18,\n        'Fisherman\\'s Wharf': 5,\n        'Mission District': 18,\n        'Alamo Square': 16,\n        'Bayview': 25,\n        'Richmond District': 18\n    },\n    'Golden Gate Park': {\n        'Russian Hill': 19,\n        'Pacific Heights': 16,\n        'North Beach': 23,\n        'Embarcadero': 25,\n        'Haight-Ashbury': 7,\n        'Fisherman\\'s Wharf': 24,\n        'Mission District': 17,\n        'Alamo Square': 9,\n        'Bayview': 23,\n        'Richmond District': 7\n    },\n    'Embarcadero': {\n        'Russian Hill': 8,\n        'Pacific Heights': 11,\n        'North Beach': 5,\n        'Golden Gate Park': 25,\n        'Haight-Ashbury': 21,\n        'Fisherman\\'s Wharf': 6,\n        'Mission District': 20,\n        'Alamo Square': 19,\n        'Bayview': 21,\n        'Richmond District': 21\n    },\n    'Haight-Ashbury': {\n        'Russian Hill': 17,\n        'Pacific Heights': 12,\n        'North Beach': 19,\n        'Golden Gate Park': 7,\n        'Embarcadero': 20,\n        'Fisherman\\'s Wharf': 23,\n        'Mission District': 11,\n        'Alamo Square': 5,\n        'Bayview': 18,\n        'Richmond District': 10\n    },\n    'Fisherman\\'s Wharf': {\n        'Russian Hill': 7,\n        'Pacific Heights': 12,\n        'North Beach': 6,\n        'Golden Gate Park': 25,\n        'Embarcadero': 8,\n        'Haight-Ashbury': 22,\n        'Mission District': 22,\n        'Alamo Square': 21,\n        'Bayview': 26,\n        'Richmond District': 18\n    },\n    'Mission District': {\n        'Russian Hill': 15,\n        'Pacific Heights': 16,\n        'North Beach': 17,\n        'Golden Gate Park': 17,\n        'Embarcadero': 19,\n        'Haight-Ashbury': 12,\n        'Fisherman\\'s Wharf': 22,\n        'Alamo Square': 11,\n        'Bayview': 14,\n        'Richmond District': 20\n    },\n    'Alamo Square': {\n        'Russian Hill': 13,\n        'Pacific Heights': 10,\n        'North Beach': 15,\n        'Golden Gate Park': 9,\n        'Embarcadero': 16,\n        'Haight-Ashbury': 5,\n        'Fisherman\\'s Wharf': 19,\n        'Mission District': 10,\n        'Bayview': 16,\n        'Richmond District': 11\n    },\n    'Bayview': {\n        'Russian Hill': 23,\n        'Pacific Heights': 23,\n        'North Beach': 22,\n        'Golden Gate Park': 22,\n        'Embarcadero': 19,\n        'Haight-Ashbury': 19,\n        'Fisherman\\'s Wharf': 25,\n        'Mission District': 13,\n        'Alamo Square': 16,\n        'Richmond District': 25\n    },\n    'Richmond District': {\n        'Russian Hill': 13,\n        'Pacific Heights': 10,\n        'North Beach': 17,\n        'Golden Gate Park': 9,\n        'Embarcadero': 19,\n        'Haight-Ashbury': 10,\n        'Fisherman\\'s Wharf': 18,\n        'Mission District': 20,\n        'Alamo Square': 13,\n        'Bayview': 27\n    }\n}\n\nconstraints = {\n    'Emily': {'start_time': 9 * 60 + 15, 'end_time': 14 * 60 + 45,'min_meeting_time': 120},\n    'Helen': {'start_time': 13 * 60 + 45, 'end_time': 18 * 60 + 45,'min_meeting_time': 30},\n    'Kimberly': {'start_time': 18 * 60 + 45, 'end_time': 21 * 60,'min_meeting_time': 75},\n    'James': {'start_time': 10 * 60, 'end_time': 11 * 60,'min_meeting_time': 30},\n    'Linda': {'start_time': 7 * 60, 'end_time': 19 * 60,'min_meeting_time': 15},\n    'Paul': {'start_time': 14 * 60 + 45, 'end_time': 18 * 60 + 45,'min_meeting_time': 90},\n    'Anthony': {'start_time': 8 * 60, 'end_time': 14 * 60 + 45,'min_meeting_time': 105},\n    'Nancy': {'start_time': 8 * 60 + 30, 'end_time': 13 * 60 + 45,'min_meeting_time': 120},\n    'William': {'start_time': 17 * 60 + 30, 'end_time': 20 * 60,'min_meeting_time': 120},\n    'Margaret': {'start_time': 15 * 60 + 15, 'end_time': 18 * 60 + 15,'min_meeting_time': 45}\n}\n\ndef compute_meeting_schedule():\n    schedule = []\n    start_time = 9 * 60\n    current_location = 'Russian Hill'\n\n    # Meet Emily\n    emily_start_time = max(constraints['Emily']['start_time'], start_time + travel_distances['Russian Hill']['Pacific Heights'])\n    emily_end_time = min(constraints['Emily']['end_time'], emily_start_time + constraints['Emily']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Russian Hill']['Pacific Heights'], 'time': format_time(start_time), 'to': 'Pacific Heights'})\n    schedule.append({'action': 'wait', 'location': 'Pacific Heights', 'time': format_time(emily_start_time)})\n    schedule.append({'action':'meet', 'location': 'Pacific Heights', 'duration': emily_end_time - emily_start_time, 'time': format_time(emily_end_time)})\n    current_location = 'Pacific Heights'\n    start_time = emily_end_time\n\n    # Meet James\n    james_start_time = max(constraints['James']['start_time'], start_time + travel_distances['Pacific Heights']['Embarcadero'])\n    james_end_time = min(constraints['James']['end_time'], james_start_time + constraints['James']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Pacific Heights']['Embarcadero'], 'time': format_time(start_time), 'to': 'Embarcadero'})\n    schedule.append({'action': 'wait', 'location': 'Embarcadero', 'time': format_time(james_start_time)})\n    schedule.append({'action':'meet', 'location': 'Embarcadero', 'duration': james_end_time - james_start_time, 'time': format_time(james_end_time)})\n    current_location = 'Embarcadero'\n    start_time = james_end_time\n\n    # Meet Helen\n    helen_start_time = max(constraints['Helen']['start_time'], start_time + travel_distances['Embarcadero']['North Beach'])\n    helen_end_time = min(constraints['Helen']['end_time'], helen_start_time + constraints['Helen']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Embarcadero']['North Beach'], 'time': format_time(start_time), 'to': 'North Beach'})\n    schedule.append({'action': 'wait', 'location': 'North Beach', 'time': format_time(helen_start_time)})\n    schedule.append({'action':'meet', 'location': 'North Beach', 'duration': helen_end_time - helen_start_time, 'time': format_time(helen_end_time)})\n    current_location = 'North Beach'\n    start_time = helen_end_time\n\n    # Meet Linda\n    linda_start_time = max(constraints['Linda']['start_time'], start_time + travel_distances['North Beach']['Haight-Ashbury'])\n    linda_end_time = min(constraints['Linda']['end_time'], linda_start_time + constraints['Linda']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['North Beach']['Haight-Ashbury'], 'time': format_time(start_time), 'to': 'Haight-Ashbury'})\n    schedule.append({'action': 'wait', 'location': 'Haight-Ashbury', 'time': format_time(linda_start_time)})\n    schedule.append({'action':'meet', 'location': 'Haight-Ashbury', 'duration': linda_end_time - linda_start_time, 'time': format_time(linda_end_time)})\n    current_location = 'Haight-Ashbury'\n    start_time = linda_end_time\n\n    # Meet Anthony\n    anthony_start_time = max(constraints['Anthony']['start_time'], start_time + travel_distances['Haight-Ashbury']['Mission District'])\n    anthony_end_time = min(constraints['Anthony']['end_time'], anthony_start_time + constraints['Anthony']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Haight-Ashbury']['Mission District'], 'time': format_time(start_time), 'to': 'Mission District'})\n    schedule.append({'action': 'wait', 'location': 'Mission District', 'time': format_time(anthony_start_time)})\n    schedule.append({'action':'meet', 'location': 'Mission District', 'duration': anthony_end_time - anthony_start_time, 'time': format_time(anthony_end_time)})\n    current_location = 'Mission District'\n    start_time = anthony_end_time\n\n    # Meet Nancy\n    nancy_start_time = max(constraints['Nancy']['start_time'], start_time + travel_distances['Mission District']['Alamo Square'])\n    nancy_end_time = min(constraints['Nancy']['end_time'], nancy_start_time + constraints['Nancy']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Mission District']['Alamo Square'], 'time': format_time(start_time), 'to': 'Alamo Square'})\n    schedule.append({'action': 'wait', 'location': 'Alamo Square', 'time': format_time(nancy_start_time)})\n    schedule.append({'action':'meet', 'location': 'Alamo Square', 'duration': nancy_end_time - nancy_start_time, 'time': format_time(nancy_end_time)})\n    current_location = 'Alamo Square'\n    start_time = nancy_end_time\n\n    # Meet Paul\n    paul_start_time = max(constraints['Paul']['start_time'], start_time + travel_distances['Alamo Square']['Fisherman\\'s Wharf'])\n    paul_end_time = min(constraints['Paul']['end_time'], paul_start_time + constraints['Paul']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Alamo Square']['Fisherman\\'s Wharf'], 'time': format_time(start_time), 'to': 'Fisherman\\'s Wharf'})\n    schedule.append({'action': 'wait', 'location': 'Fisherman\\'s Wharf', 'time': format_time(paul_start_time)})\n    schedule.append({'action':'meet', 'location': 'Fisherman\\'s Wharf', 'duration': paul_end_time - paul_start_time, 'time': format_time(paul_end_time)})\n    current_location = 'Fisherman\\'s Wharf'\n    start_time = paul_end_time\n\n    # Meet Kimberly\n    kimberly_start_time = max(constraints['Kimberly']['start_time'], start_time + travel_distances['Fisherman\\'s Wharf']['Golden Gate Park'])\n    kimberly_end_time = min(constraints['Kimberly']['end_time'], kimberly_start_time + constraints['Kimberly']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Fisherman\\'s Wharf']['Golden Gate Park'], 'time': format_time(start_time), 'to': 'Golden Gate Park'})\n    schedule.append({'action': 'wait', 'location': 'Golden Gate Park', 'time': format_time(kimberly_start_time)})\n    schedule.append({'action':'meet', 'location': 'Golden Gate Park', 'duration': kimberly_end_time - kimberly_start_time, 'time': format_time(kimberly_end_time)})\n\n    # Meet William\n    william_start_time = max(constraints['William']['start_time'], start_time + travel_distances['Golden Gate Park']['Bayview'])\n    william_end_time = min(constraints['William']['end_time'], william_start_time + constraints['William']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Golden Gate Park']['Bayview'], 'time': format_time(start_time), 'to': 'Bayview'})\n    schedule.append({'action': 'wait', 'location': 'Bayview', 'time': format_time(william_start_time)})\n    schedule.append({'action':'meet', 'location': 'Bayview', 'duration': william_end_time - william_start_time, 'time': format_time(william_end_time)})\n\n    # Meet Margaret\n    margaret_start_time = max(constraints['Margaret']['start_time'], start_time + travel_distances['Bayview']['Richmond District'])\n    margaret_end_time = min(constraints['Margaret']['end_time'], margaret_start_time + constraints['Margaret']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Bayview']['Richmond District'], 'time': format_time(start_time), 'to': 'Richmond District'})\n    schedule.append({'action': 'wait', 'location': 'Richmond District', 'time': format_time(margaret_start_time)})\n    schedule.append({'action':'meet', 'location': 'Richmond District', 'duration': margaret_end_time - margaret_start_time, 'time': format_time(margaret_end_time)})\n\n    # Return to Russian Hill\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Richmond District']['Russian Hill'], 'time': format_time(margaret_end_time), 'to': 'Russian Hill'})\n\n    return schedule\n\ndef format_time(minutes):\n    hours = minutes // 60\n    mins = minutes % 60\n    am_pm = 'AM' if hours < 12 else 'PM'\n    hours = hours % 12 if hours!= 0 else 12\n    return f'{hours}:{mins:02}{am_pm}'\n\ndef main():\n    schedule = compute_meeting_schedule()\n    result = {'schedule': schedule}\n    print(json.dumps(result, indent=4))\n\nif __name__ == '__main__':\n    main()\n```",
      "count": "meeting_planning_example_901"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Anthony",
            "start_time": "9:36AM",
            "end_time": "10:06AM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Joshua",
            "start_time": "10:01AM",
            "end_time": "10:16AM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Joseph",
            "start_time": "11:30AM",
            "end_time": "11:45AM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Karen",
            "start_time": "0:00PM",
            "end_time": "12:15PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Brian",
            "start_time": "3:30PM",
            "end_time": "5:15PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Helen",
            "start_time": "0:00PM",
            "end_time": "8:18AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "William",
            "start_time": "4:15PM",
            "end_time": "5:15PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Matthew",
            "start_time": "7:15PM",
            "end_time": "9:15PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Jeffrey",
            "start_time": "8:00PM",
            "end_time": "9:00PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Joshua",
            "start_time": "9:16AM",
            "end_time": "9:31AM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Anthony",
            "start_time": "9:41AM",
            "end_time": "10:11AM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Helen",
            "start_time": "10:23AM",
            "end_time": "11:38AM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Joseph",
            "start_time": "11:51AM",
            "end_time": "12:06PM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "William",
            "start_time": "3:15PM",
            "end_time": "4:15PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "David",
            "start_time": "4:45PM",
            "end_time": "5:30PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Karen",
            "start_time": "5:48PM",
            "end_time": "6:03PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Brian",
            "start_time": "6:13PM",
            "end_time": "7:58PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Jeffrey",
            "start_time": "8:23PM",
            "end_time": "9:23PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Input parameters\ntravel_distances = {\n    'The Castro': {\n        'Alamo Square': 8,\n        'Richmond District': 16,\n        'Financial District': 21,\n        'Union Square': 19,\n        'Fisherman\\'s Wharf': 24,\n        'Marina District': 21,\n        'Haight-Ashbury': 6,\n        'Mission District': 7,\n        'Pacific Heights': 16,\n        'Golden Gate Park': 11\n    },\n    'Alamo Square': {\n        'The Castro': 8,\n        'Richmond District': 11,\n        'Financial District': 17,\n        'Union Square': 14,\n        'Fisherman\\'s Wharf': 19,\n        'Marina District': 15,\n        'Haight-Ashbury': 5,\n        'Mission District': 10,\n        'Pacific Heights': 10,\n        'Golden Gate Park': 9\n    },\n    'Richmond District': {\n        'The Castro': 16,\n        'Alamo Square': 13,\n        'Financial District': 22,\n        'Union Square': 21,\n        'Fisherman\\'s Wharf': 18,\n        'Marina District': 9,\n        'Haight-Ashbury': 10,\n        'Mission District': 20,\n        'Pacific Heights': 10,\n        'Golden Gate Park': 9\n    },\n    'Financial District': {\n        'The Castro': 20,\n        'Alamo Square': 17,\n        'Richmond District': 21,\n        'Union Square': 9,\n        'Fisherman\\'s Wharf': 10,\n        'Marina District': 15,\n        'Haight-Ashbury': 19,\n        'Mission District': 17,\n        'Pacific Heights': 13,\n        'Golden Gate Park': 23\n    },\n    'Union Square': {\n        'The Castro': 17,\n        'Alamo Square': 15,\n        'Richmond District': 20,\n        'Financial District': 9,\n        'Fisherman\\'s Wharf': 15,\n        'Marina District': 18,\n        'Haight-Ashbury': 18,\n        'Mission District': 14,\n        'Pacific Heights': 15,\n        'Golden Gate Park': 22\n    },\n    'Fisherman\\'s Wharf': {\n        'The Castro': 27,\n        'Alamo Square': 21,\n        'Richmond District': 18,\n        'Financial District': 11,\n        'Union Square': 13,\n        'Marina District': 9,\n        'Haight-Ashbury': 22,\n        'Mission District': 22,\n        'Pacific Heights': 12,\n        'Golden Gate Park': 25\n    },\n    'Marina District': {\n        'The Castro': 22,\n        'Alamo Square': 15,\n        'Richmond District': 11,\n        'Financial District': 17,\n        'Union Square': 16,\n        'Fisherman\\'s Wharf': 10,\n        'Haight-Ashbury': 16,\n        'Mission District': 20,\n        'Pacific Heights': 7,\n        'Golden Gate Park': 18\n    },\n    'Haight-Ashbury': {\n        'The Castro': 6,\n        'Alamo Square': 5,\n        'Richmond District': 10,\n        'Financial District': 21,\n        'Union Square': 19,\n        'Fisherman\\'s Wharf': 23,\n        'Marina District': 17,\n        'Mission District': 11,\n        'Pacific Heights': 12,\n        'Golden Gate Park': 7\n    },\n    'Mission District': {\n        'The Castro': 7,\n        'Alamo Square': 11,\n        'Richmond District': 20,\n        'Financial District': 15,\n        'Union Square': 15,\n        'Fisherman\\'s Wharf': 22,\n        'Marina District': 19,\n        'Haight-Ashbury': 12,\n        'Pacific Heights': 16,\n        'Golden Gate Park': 17\n    },\n    'Pacific Heights': {\n        'The Castro': 16,\n        'Alamo Square': 10,\n        'Richmond District': 12,\n        'Financial District': 13,\n        'Union Square': 12,\n        'Fisherman\\'s Wharf': 13,\n        'Marina District': 6,\n        'Haight-Ashbury': 11,\n        'Mission District': 15,\n        'Golden Gate Park': 15\n    },\n    'Golden Gate Park': {\n        'The Castro': 13,\n        'Alamo Square': 9,\n        'Richmond District': 7,\n        'Financial District': 26,\n        'Union Square': 22,\n        'Fisherman\\'s Wharf': 24,\n        'Marina District': 16,\n        'Haight-Ashbury': 7,\n        'Mission District': 17,\n        'Pacific Heights': 16\n    }\n}\n\nconstraints = {\n    'William': {'start_time': 15 * 60 + 15, 'end_time': 17 * 60 + 15,'min_meeting_time': 60},\n    'Joshua': {'start_time': 7 * 60, 'end_time': 20 * 60,'min_meeting_time': 15},\n    'Joseph': {'start_time': 11 * 60 + 15, 'end_time': 13 * 60 + 30,'min_meeting_time': 15},\n    'David': {'start_time': 17 * 60 + 45, 'end_time': 19 * 60 + 15,'min_meeting_time': 45},\n    'Brian': {'start_time': 13 * 60 + 45, 'end_time': 20 * 60 + 45,'min_meeting_time': 105},\n    'Karen': {'start_time': 11 * 60 + 30, 'end_time': 18 * 60 + 30,'min_meeting_time': 15},\n    'Anthony': {'start_time': 7 * 60, 'end_time': 10 * 60,'min_meeting_time': 30},\n    'Matthew': {'start_time': 17 * 60 + 15, 'end_time': 19 * 60 + 15,'min_meeting_time': 120},\n    'Helen': {'start_time': 8 * 60, 'end_time': 12 * 60,'min_meeting_time': 75},\n    'Jeffrey': {'start_time': 19 * 60, 'end_time': 21 * 60 + 30,'min_meeting_time': 60}\n}\n\ndef compute_meeting_schedule():\n    schedule = []\n    start_time = 9 * 60\n    current_location = 'The Castro'\n\n    # Meet Anthony\n    anthony_start_time = max(constraints['Anthony']['start_time'], start_time + travel_distances['The Castro']['Haight-Ashbury'])\n    anthony_end_time = min(constraints['Anthony']['end_time'], anthony_start_time + constraints['Anthony']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['The Castro']['Haight-Ashbury'], 'time': format_time(start_time), 'to': 'Haight-Ashbury'})\n    schedule.append({'action': 'wait', 'location': 'Haight-Ashbury', 'time': format_time(anthony_start_time)})\n    schedule.append({'action':'meet', 'location': 'Haight-Ashbury', 'duration': anthony_end_time - anthony_start_time, 'time': format_time(anthony_end_time)})\n    current_location = 'Haight-Ashbury'\n    start_time = anthony_end_time\n\n    # Meet Joshua\n    joshua_start_time = max(constraints['Joshua']['start_time'], start_time + travel_distances['Haight-Ashbury']['Richmond District'])\n    joshua_end_time = min(constraints['Joshua']['end_time'], joshua_start_time + constraints['Joshua']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Haight-Ashbury']['Richmond District'], 'time': format_time(start_time), 'to': 'Richmond District'})\n    schedule.append({'action': 'wait', 'location': 'Richmond District', 'time': format_time(joshua_start_time)})\n    schedule.append({'action':'meet', 'location': 'Richmond District', 'duration': joshua_end_time - joshua_start_time, 'time': format_time(joshua_end_time)})\n    current_location = 'Richmond District'\n    start_time = joshua_end_time\n\n    # Meet Joseph\n    joseph_start_time = max(constraints['Joseph']['start_time'], start_time + travel_distances['Richmond District']['Financial District'])\n    joseph_end_time = min(constraints['Joseph']['end_time'], joseph_start_time + constraints['Joseph']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Richmond District']['Financial District'], 'time': format_time(start_time), 'to': 'Financial District'})\n    schedule.append({'action': 'wait', 'location': 'Financial District', 'time': format_time(joseph_start_time)})\n    schedule.append({'action':'meet', 'location': 'Financial District', 'duration': joseph_end_time - joseph_start_time, 'time': format_time(joseph_end_time)})\n    current_location = 'Financial District'\n    start_time = joseph_end_time\n\n    # Meet Karen\n    karen_start_time = max(constraints['Karen']['start_time'], start_time + travel_distances['Financial District']['Marina District'])\n    karen_end_time = min(constraints['Karen']['end_time'], karen_start_time + constraints['Karen']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Financial District']['Marina District'], 'time': format_time(start_time), 'to': 'Marina District'})\n    schedule.append({'action': 'wait', 'location': 'Marina District', 'time': format_time(karen_start_time)})\n    schedule.append({'action':'meet', 'location': 'Marina District', 'duration': karen_end_time - karen_start_time, 'time': format_time(karen_end_time)})\n    current_location = 'Marina District'\n    start_time = karen_end_time\n\n    # Meet Brian\n    brian_start_time = max(constraints['Brian']['start_time'], start_time + travel_distances['Marina District']['Fisherman\\'s Wharf'])\n    brian_end_time = min(constraints['Brian']['end_time'], brian_start_time + constraints['Brian']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Marina District']['Fisherman\\'s Wharf'], 'time': format_time(start_time), 'to': 'Fisherman\\'s Wharf'})\n    schedule.append({'action': 'wait', 'location': 'Fisherman\\'s Wharf', 'time': format_time(brian_start_time)})\n    schedule.append({'action':'meet', 'location': 'Fisherman\\'s Wharf', 'duration': brian_end_time - brian_start_time, 'time': format_time(brian_end_time)})\n    current_location = 'Fisherman\\'s Wharf'\n    start_time = brian_end_time\n\n    # Meet Helen\n    helen_start_time = max(constraints['Helen']['start_time'], start_time + travel_distances['Fisherman\\'s Wharf']['Pacific Heights'])\n    helen_end_time = min(constraints['Helen']['end_time'], helen_start_time + constraints['Helen']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Fisherman\\'s Wharf']['Pacific Heights'], 'time': format_time(start_time), 'to': 'Pacific Heights'})\n    schedule.append({'action': 'wait', 'location': 'Pacific Heights', 'time': format_time(helen_start_time)})\n    schedule.append({'action':'meet', 'location': 'Pacific Heights', 'duration': helen_end_time - helen_start_time, 'time': format_time(helen_end_time)})\n    current_location = 'Pacific Heights'\n    start_time = helen_end_time\n\n    # Meet William\n    william_start_time = max(constraints['William']['start_time'], start_time + travel_distances['Pacific Heights']['Alamo Square'])\n    william_end_time = min(constraints['William']['end_time'], william_start_time + constraints['William']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Pacific Heights']['Alamo Square'], 'time': format_time(start_time), 'to': 'Alamo Square'})\n    schedule.append({'action': 'wait', 'location': 'Alamo Square', 'time': format_time(william_start_time)})\n    schedule.append({'action':'meet', 'location': 'Alamo Square', 'duration': william_end_time - william_start_time, 'time': format_time(william_end_time)})\n\n    # Meet Matthew\n    matthew_start_time = max(constraints['Matthew']['start_time'], start_time + travel_distances['Alamo Square']['Mission District'])\n    matthew_end_time = min(constraints['Matthew']['end_time'], matthew_start_time + constraints['Matthew']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Alamo Square']['Mission District'], 'time': format_time(start_time), 'to': 'Mission District'})\n    schedule.append({'action': 'wait', 'location': 'Mission District', 'time': format_time(matthew_start_time)})\n    schedule.append({'action':'meet', 'location': 'Mission District', 'duration': matthew_end_time - matthew_start_time, 'time': format_time(matthew_end_time)})\n\n    # Meet Jeffrey\n    jeffrey_start_time = max(constraints['Jeffrey']['start_time'], start_time + travel_distances['Mission District']['Golden Gate Park'])\n    jeffrey_end_time = min(constraints['Jeffrey']['end_time'], jeffrey_start_time + constraints['Jeffrey']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Mission District']['Golden Gate Park'], 'time': format_time(start_time), 'to': 'Golden Gate Park'})\n    schedule.append({'action': 'wait', 'location': 'Golden Gate Park', 'time': format_time(jeffrey_start_time)})\n    schedule.append({'action':'meet', 'location': 'Golden Gate Park', 'duration': jeffrey_end_time - jeffrey_start_time, 'time': format_time(jeffrey_end_time)})\n\n    # Return to The Castro\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Golden Gate Park']['The Castro'], 'time': format_time(jeffrey_end_time), 'to': 'The Castro'})\n\n    return schedule\n\ndef format_time(minutes):\n    hours = minutes // 60\n    mins = minutes % 60\n    am_pm = 'AM' if hours < 12 else 'PM'\n    hours = hours % 12 if hours!= 0 else 12\n    return f'{hours}:{mins:02}{am_pm}'\n\ndef main():\n    schedule = compute_meeting_schedule()\n    result = {'schedule': schedule}\n    print(json.dumps(result, indent=4))\n\nif __name__ == '__main__':\n    main()\n```",
      "count": "meeting_planning_example_956"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Barbara",
            "start_time": "10:07AM",
            "end_time": "11:07AM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Barbara",
            "start_time": "9:07AM",
            "end_time": "10:07AM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Input parameters\ntravel_distances = {\n    'Russian Hill': {\n        'Pacific Heights': 7,\n        'Pacific Heights': 7\n    },\n    'Pacific Heights': {\n        'Russian Hill': 7,\n        'Russian Hill': 7\n    }\n}\n\nconstraints = {\n    'Barbara': {'start_time': 7 * 60 + 15, 'end_time': 22 * 60,'min_meeting_time': 60}\n}\n\ndef compute_meeting_schedule():\n    schedule = []\n    start_time = 9 * 60\n    current_location = 'Russian Hill'\n\n    # Meet Barbara\n    barbara_start_time = max(constraints['Barbara']['start_time'], start_time + travel_distances['Russian Hill']['Pacific Heights'])\n    barbara_end_time = min(constraints['Barbara']['end_time'], barbara_start_time + constraints['Barbara']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Russian Hill']['Pacific Heights'], 'time': format_time(start_time), 'to': 'Pacific Heights'})\n    schedule.append({'action': 'wait', 'location': 'Pacific Heights', 'time': format_time(barbara_start_time)})\n    schedule.append({'action':'meet', 'location': 'Pacific Heights', 'duration': barbara_end_time - barbara_start_time, 'time': format_time(barbara_end_time)})\n    current_location = 'Pacific Heights'\n    start_time = barbara_end_time\n\n    # Return to Russian Hill\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Pacific Heights']['Russian Hill'], 'time': format_time(barbara_end_time), 'to': 'Russian Hill'})\n\n    return schedule\n\ndef format_time(minutes):\n    hours = minutes // 60\n    mins = minutes % 60\n    am_pm = 'AM' if hours < 12 else 'PM'\n    hours = hours % 12 if hours!= 0 else 12\n    return f'{hours}:{mins:02}{am_pm}'\n\ndef main():\n    schedule = compute_meeting_schedule()\n    result = {'schedule': schedule}\n    print(json.dumps(result, indent=4))\n\nif __name__ == '__main__':\n    main()\n```",
      "count": "meeting_planning_example_73"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Helen",
            "start_time": "10:15AM",
            "end_time": "11:00AM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Deborah",
            "start_time": "11:08AM",
            "end_time": "11:38AM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Matthew",
            "start_time": "0:20PM",
            "end_time": "1:05PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Joseph",
            "start_time": "4:15PM",
            "end_time": "6:15PM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Ronald",
            "start_time": "5:42PM",
            "end_time": "6:42PM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Robert",
            "start_time": "8:30PM",
            "end_time": "10:30PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Rebecca",
            "start_time": "4:15PM",
            "end_time": "11:43AM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Elizabeth",
            "start_time": "8:30PM",
            "end_time": "10:30PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Steven",
            "start_time": "10:00PM",
            "end_time": "11:45PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Helen",
            "start_time": "9:30AM",
            "end_time": "10:15AM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Deborah",
            "start_time": "10:38AM",
            "end_time": "11:08AM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Matthew",
            "start_time": "11:35AM",
            "end_time": "12:20PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Rebecca",
            "start_time": "2:45PM",
            "end_time": "3:15PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Joseph",
            "start_time": "3:24PM",
            "end_time": "5:24PM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Ronald",
            "start_time": "5:51PM",
            "end_time": "6:51PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Steven",
            "start_time": "8:15PM",
            "end_time": "10:00PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Input parameters\ntravel_distances = {\n    'Pacific Heights': {\n        'Golden Gate Park': 15,\n        'The Castro': 16,\n        'Bayview': 22,\n        'Marina District': 6,\n        'Union Square': 12,\n        'Sunset District': 21,\n        'Alamo Square': 10,\n        'Financial District': 13,\n        'Mission District': 15\n    },\n    'Golden Gate Park': {\n        'Pacific Heights': 16,\n        'The Castro': 13,\n        'Bayview': 23,\n        'Marina District': 16,\n        'Union Square': 22,\n        'Sunset District': 10,\n        'Alamo Square': 9,\n        'Financial District': 26,\n        'Mission District': 17\n    },\n    'The Castro': {\n        'Pacific Heights': 16,\n        'Golden Gate Park': 11,\n        'Bayview': 19,\n        'Marina District': 21,\n        'Union Square': 19,\n        'Sunset District': 17,\n        'Alamo Square': 8,\n        'Financial District': 21,\n        'Mission District': 7\n    },\n    'Bayview': {\n        'Pacific Heights': 23,\n        'Golden Gate Park': 22,\n        'The Castro': 19,\n        'Marina District': 27,\n        'Union Square': 18,\n        'Sunset District': 23,\n        'Alamo Square': 16,\n        'Financial District': 19,\n        'Mission District': 13\n    },\n    'Marina District': {\n        'Pacific Heights': 7,\n        'Golden Gate Park': 18,\n        'The Castro': 22,\n        'Bayview': 27,\n        'Union Square': 16,\n        'Sunset District': 19,\n        'Alamo Square': 15,\n        'Financial District': 17,\n        'Mission District': 20\n    },\n    'Union Square': {\n        'Pacific Heights': 15,\n        'Golden Gate Park': 22,\n        'The Castro': 17,\n        'Bayview': 15,\n        'Marina District': 18,\n        'Sunset District': 27,\n        'Alamo Square': 15,\n        'Financial District': 9,\n        'Mission District': 14\n    },\n    'Sunset District': {\n        'Pacific Heights': 21,\n        'Golden Gate Park': 11,\n        'The Castro': 17,\n        'Bayview': 22,\n        'Marina District': 21,\n        'Union Square': 30,\n        'Alamo Square': 17,\n        'Financial District': 30,\n        'Mission District': 25\n    },\n    'Alamo Square': {\n        'Pacific Heights': 10,\n        'Golden Gate Park': 9,\n        'The Castro': 8,\n        'Bayview': 16,\n        'Marina District': 15,\n        'Union Square': 14,\n        'Sunset District': 16,\n        'Financial District': 17,\n        'Mission District': 10\n    },\n    'Financial District': {\n        'Pacific Heights': 13,\n        'Golden Gate Park': 23,\n        'The Castro': 20,\n        'Bayview': 19,\n        'Marina District': 15,\n        'Union Square': 9,\n        'Sunset District': 30,\n        'Alamo Square': 17,\n        'Mission District': 17\n    },\n    'Mission District': {\n        'Pacific Heights': 16,\n        'Golden Gate Park': 17,\n        'The Castro': 7,\n        'Bayview': 14,\n        'Marina District': 19,\n        'Union Square': 15,\n        'Sunset District': 24,\n        'Alamo Square': 11,\n        'Financial District': 15\n    }\n}\n\nconstraints = {\n    'Helen': {'start_time': 9 * 60 + 30, 'end_time': 12 * 60 + 15,'min_meeting_time': 45},\n    'Steven': {'start_time': 20 * 60 + 15, 'end_time': 22 * 60,'min_meeting_time': 105},\n    'Deborah': {'start_time': 8 * 60 + 30, 'end_time': 12 * 60,'min_meeting_time': 30},\n    'Matthew': {'start_time': 9 * 60 + 15, 'end_time': 14 * 60 + 15,'min_meeting_time': 45},\n    'Joseph': {'start_time': 14 * 60 + 15, 'end_time': 19 * 60 + 45,'min_meeting_time': 120},\n    'Ronald': {'start_time': 16 * 60, 'end_time': 20 * 60 + 45,'min_meeting_time': 60},\n    'Robert': {'start_time': 18 * 60 + 30, 'end_time': 21 * 60 + 15,'min_meeting_time': 120},\n    'Rebecca': {'start_time': 14 * 60 + 45, 'end_time': 16 * 60 + 15,'min_meeting_time': 30},\n    'Elizabeth': {'start_time': 18 * 60 + 30, 'end_time': 21 * 60,'min_meeting_time': 120}\n}\n\ndef compute_meeting_schedule():\n    schedule = []\n    start_time = 9 * 60\n    current_location = 'Pacific Heights'\n\n    # Meet Helen\n    helen_start_time = max(constraints['Helen']['start_time'], start_time + travel_distances['Pacific Heights']['Golden Gate Park'])\n    helen_end_time = min(constraints['Helen']['end_time'], helen_start_time + constraints['Helen']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Pacific Heights']['Golden Gate Park'], 'time': format_time(start_time), 'to': 'Golden Gate Park'})\n    schedule.append({'action': 'wait', 'location': 'Golden Gate Park', 'time': format_time(helen_start_time)})\n    schedule.append({'action':'meet', 'location': 'Golden Gate Park', 'duration': helen_end_time - helen_start_time, 'time': format_time(helen_end_time)})\n    current_location = 'Golden Gate Park'\n    start_time = helen_end_time\n\n    # Meet Deborah\n    deborah_start_time = max(constraints['Deborah']['start_time'], start_time + travel_distances['Golden Gate Park']['Bayview'])\n    deborah_end_time = min(constraints['Deborah']['end_time'], deborah_start_time + constraints['Deborah']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Golden Gate Park']['Bayview'], 'time': format_time(start_time), 'to': 'Bayview'})\n    schedule.append({'action': 'wait', 'location': 'Bayview', 'time': format_time(deborah_start_time)})\n    schedule.append({'action':'meet', 'location': 'Bayview', 'duration': deborah_end_time - deborah_start_time, 'time': format_time(deborah_end_time)})\n    current_location = 'Bayview'\n    start_time = deborah_end_time\n\n    # Meet Matthew\n    matthew_start_time = max(constraints['Matthew']['start_time'], start_time + travel_distances['Bayview']['Marina District'])\n    matthew_end_time = min(constraints['Matthew']['end_time'], matthew_start_time + constraints['Matthew']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Bayview']['Marina District'], 'time': format_time(start_time), 'to': 'Marina District'})\n    schedule.append({'action': 'wait', 'location': 'Marina District', 'time': format_time(matthew_start_time)})\n    schedule.append({'action':'meet', 'location': 'Marina District', 'duration': matthew_end_time - matthew_start_time, 'time': format_time(matthew_end_time)})\n    current_location = 'Marina District'\n    start_time = matthew_end_time\n\n    # Meet Joseph\n    joseph_start_time = max(constraints['Joseph']['start_time'], start_time + travel_distances['Marina District']['Union Square'])\n    joseph_end_time = min(constraints['Joseph']['end_time'], joseph_start_time + constraints['Joseph']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Marina District']['Union Square'], 'time': format_time(start_time), 'to': 'Union Square'})\n    schedule.append({'action': 'wait', 'location': 'Union Square', 'time': format_time(joseph_start_time)})\n    schedule.append({'action':'meet', 'location': 'Union Square', 'duration': joseph_end_time - joseph_start_time, 'time': format_time(joseph_end_time)})\n    current_location = 'Union Square'\n    start_time = joseph_end_time\n\n    # Meet Ronald\n    ronald_start_time = max(constraints['Ronald']['start_time'], start_time + travel_distances['Union Square']['Sunset District'])\n    ronald_end_time = min(constraints['Ronald']['end_time'], ronald_start_time + constraints['Ronald']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Union Square']['Sunset District'], 'time': format_time(start_time), 'to': 'Sunset District'})\n    schedule.append({'action': 'wait', 'location': 'Sunset District', 'time': format_time(ronald_start_time)})\n    schedule.append({'action':'meet', 'location': 'Sunset District', 'duration': ronald_end_time - ronald_start_time, 'time': format_time(ronald_end_time)})\n    current_location = 'Sunset District'\n    start_time = ronald_end_time\n\n    # Meet Robert\n    robert_start_time = max(constraints['Robert']['start_time'], start_time + travel_distances['Sunset District']['Alamo Square'])\n    robert_end_time = min(constraints['Robert']['end_time'], robert_start_time + constraints['Robert']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Sunset District']['Alamo Square'], 'time': format_time(start_time), 'to': 'Alamo Square'})\n    schedule.append({'action': 'wait', 'location': 'Alamo Square', 'time': format_time(robert_start_time)})\n    schedule.append({'action':'meet', 'location': 'Alamo Square', 'duration': robert_end_time - robert_start_time, 'time': format_time(robert_end_time)})\n    current_location = 'Alamo Square'\n    start_time = robert_end_time\n\n    # Meet Rebecca\n    rebecca_start_time = max(constraints['Rebecca']['start_time'], start_time + travel_distances['Alamo Square']['Financial District'])\n    rebecca_end_time = min(constraints['Rebecca']['end_time'], rebecca_start_time + constraints['Rebecca']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Alamo Square']['Financial District'], 'time': format_time(start_time), 'to': 'Financial District'})\n    schedule.append({'action': 'wait', 'location': 'Financial District', 'time': format_time(rebecca_start_time)})\n    schedule.append({'action':'meet', 'location': 'Financial District', 'duration': rebecca_end_time - rebecca_start_time, 'time': format_time(rebecca_end_time)})\n    current_location = 'Financial District'\n    start_time = rebecca_end_time\n\n    # Meet Elizabeth\n    elizabeth_start_time = max(constraints['Elizabeth']['start_time'], start_time + travel_distances['Financial District']['Mission District'])\n    elizabeth_end_time = min(constraints['Elizabeth']['end_time'], elizabeth_start_time + constraints['Elizabeth']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Financial District']['Mission District'], 'time': format_time(start_time), 'to': 'Mission District'})\n    schedule.append({'action': 'wait', 'location': 'Mission District', 'time': format_time(elizabeth_start_time)})\n    schedule.append({'action':'meet', 'location': 'Mission District', 'duration': elizabeth_end_time - elizabeth_start_time, 'time': format_time(elizabeth_end_time)})\n\n    # Meet Steven\n    steven_start_time = max(constraints['Steven']['start_time'], start_time + travel_distances['Mission District']['The Castro'])\n    steven_end_time = min(constraints['Steven']['end_time'], steven_start_time + constraints['Steven']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Mission District']['The Castro'], 'time': format_time(start_time), 'to': 'The Castro'})\n    schedule.append({'action': 'wait', 'location': 'The Castro', 'time': format_time(steven_start_time)})\n    schedule.append({'action':'meet', 'location': 'The Castro', 'duration': steven_end_time - steven_start_time, 'time': format_time(steven_end_time)})\n\n    return schedule\n\ndef format_time(minutes):\n    hours = minutes // 60\n    mins = minutes % 60\n    am_pm = 'AM' if hours < 12 else 'PM'\n    hours = hours % 12 if hours!= 0 else 12\n    return f'{hours}:{mins:02}{am_pm}'\n\ndef main():\n    schedule = compute_meeting_schedule()\n    result = {'schedule': schedule}\n    print(json.dumps(result, indent=4))\n\nif __name__ == '__main__':\n    main()\n```",
      "count": "meeting_planning_example_835"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Stephanie",
            "start_time": "10:41AM",
            "end_time": "12:11PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Sandra",
            "start_time": "1:15PM",
            "end_time": "1:30PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Richard",
            "start_time": "10:15AM",
            "end_time": "6:52AM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Brian",
            "start_time": "2:15PM",
            "end_time": "4:15PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Jason",
            "start_time": "3:22PM",
            "end_time": "4:22PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Stephanie",
            "start_time": "9:11AM",
            "end_time": "10:41AM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Sandra",
            "start_time": "1:00PM",
            "end_time": "1:15PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Brian",
            "start_time": "1:38PM",
            "end_time": "3:38PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Jason",
            "start_time": "3:45PM",
            "end_time": "4:45PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Input parameters\ntravel_distances = {\n    'Haight-Ashbury': {\n        'Mission District': 11,\n        'Bayview': 18,\n        'Pacific Heights': 12,\n        'Russian Hill': 17,\n        'Fisherman\\'s Wharf': 23\n    },\n    'Mission District': {\n        'Haight-Ashbury': 12,\n        'Bayview': 15,\n        'Pacific Heights': 16,\n        'Russian Hill': 15,\n        'Fisherman\\'s Wharf': 22\n    },\n    'Bayview': {\n        'Haight-Ashbury': 19,\n        'Mission District': 13,\n        'Pacific Heights': 23,\n        'Russian Hill': 23,\n        'Fisherman\\'s Wharf': 25\n    },\n    'Pacific Heights': {\n        'Haight-Ashbury': 11,\n        'Mission District': 15,\n        'Bayview': 22,\n        'Russian Hill': 7,\n        'Fisherman\\'s Wharf': 13\n    },\n    'Russian Hill': {\n        'Haight-Ashbury': 17,\n        'Mission District': 16,\n        'Bayview': 23,\n        'Pacific Heights': 7,\n        'Fisherman\\'s Wharf': 7\n    },\n    'Fisherman\\'s Wharf': {\n        'Haight-Ashbury': 22,\n        'Mission District': 22,\n        'Bayview': 26,\n        'Pacific Heights': 12,\n        'Russian Hill': 7\n    }\n}\n\nconstraints = {\n    'Stephanie': {'start_time': 8 * 60 + 15, 'end_time': 13 * 60 + 45,'min_meeting_time': 90},\n    'Sandra': {'start_time': 13 * 60, 'end_time': 19 * 60 + 30,'min_meeting_time': 15},\n    'Richard': {'start_time': 7 * 60 + 15, 'end_time': 10 * 60 + 15,'min_meeting_time': 75},\n    'Brian': {'start_time': 12 * 60 + 15, 'end_time': 16 * 60,'min_meeting_time': 120},\n    'Jason': {'start_time': 8 * 60 + 30, 'end_time': 17 * 60 + 45,'min_meeting_time': 60}\n}\n\ndef compute_meeting_schedule():\n    schedule = []\n    start_time = 9 * 60\n    current_location = 'Haight-Ashbury'\n\n    # Meet Stephanie\n    stephanie_start_time = max(constraints['Stephanie']['start_time'], start_time + travel_distances['Haight-Ashbury']['Mission District'])\n    stephanie_end_time = min(constraints['Stephanie']['end_time'], stephanie_start_time + constraints['Stephanie']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Haight-Ashbury']['Mission District'], 'time': format_time(start_time), 'to': 'Mission District'})\n    schedule.append({'action': 'wait', 'location': 'Mission District', 'time': format_time(stephanie_start_time)})\n    schedule.append({'action':'meet', 'location': 'Mission District', 'duration': stephanie_end_time - stephanie_start_time, 'time': format_time(stephanie_end_time)})\n    current_location = 'Mission District'\n    start_time = stephanie_end_time\n\n    # Meet Sandra\n    sandra_start_time = max(constraints['Sandra']['start_time'], start_time + travel_distances['Mission District']['Bayview'])\n    sandra_end_time = min(constraints['Sandra']['end_time'], sandra_start_time + constraints['Sandra']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Mission District']['Bayview'], 'time': format_time(start_time), 'to': 'Bayview'})\n    schedule.append({'action': 'wait', 'location': 'Bayview', 'time': format_time(sandra_start_time)})\n    schedule.append({'action':'meet', 'location': 'Bayview', 'duration': sandra_end_time - sandra_start_time, 'time': format_time(sandra_end_time)})\n    current_location = 'Bayview'\n    start_time = sandra_end_time\n\n    # Meet Richard\n    richard_start_time = max(constraints['Richard']['start_time'], start_time + travel_distances['Bayview']['Pacific Heights'])\n    richard_end_time = min(constraints['Richard']['end_time'], richard_start_time + constraints['Richard']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Bayview']['Pacific Heights'], 'time': format_time(start_time), 'to': 'Pacific Heights'})\n    schedule.append({'action': 'wait', 'location': 'Pacific Heights', 'time': format_time(richard_start_time)})\n    schedule.append({'action':'meet', 'location': 'Pacific Heights', 'duration': richard_end_time - richard_start_time, 'time': format_time(richard_end_time)})\n    current_location = 'Pacific Heights'\n    start_time = richard_end_time\n\n    # Meet Brian\n    brian_start_time = max(constraints['Brian']['start_time'], start_time + travel_distances['Pacific Heights']['Russian Hill'])\n    brian_end_time = min(constraints['Brian']['end_time'], brian_start_time + constraints['Brian']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Pacific Heights']['Russian Hill'], 'time': format_time(start_time), 'to': 'Russian Hill'})\n    schedule.append({'action': 'wait', 'location': 'Russian Hill', 'time': format_time(brian_start_time)})\n    schedule.append({'action':'meet', 'location': 'Russian Hill', 'duration': brian_end_time - brian_start_time, 'time': format_time(brian_end_time)})\n    current_location = 'Russian Hill'\n    start_time = brian_end_time\n\n    # Meet Jason\n    jason_start_time = max(constraints['Jason']['start_time'], start_time + travel_distances['Russian Hill']['Fisherman\\'s Wharf'])\n    jason_end_time = min(constraints['Jason']['end_time'], jason_start_time + constraints['Jason']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Russian Hill']['Fisherman\\'s Wharf'], 'time': format_time(start_time), 'to': 'Fisherman\\'s Wharf'})\n    schedule.append({'action': 'wait', 'location': 'Fisherman\\'s Wharf', 'time': format_time(jason_start_time)})\n    schedule.append({'action':'meet', 'location': 'Fisherman\\'s Wharf', 'duration': jason_end_time - jason_start_time, 'time': format_time(jason_end_time)})\n\n    return schedule\n\ndef format_time(minutes):\n    hours = minutes // 60\n    mins = minutes % 60\n    am_pm = 'AM' if hours < 12 else 'PM'\n    hours = hours % 12 if hours!= 0 else 12\n    return f'{hours}:{mins:02}{am_pm}'\n\ndef main():\n    schedule = compute_meeting_schedule()\n    result = {'schedule': schedule}\n    print(json.dumps(result, indent=4))\n\nif __name__ == '__main__':\n    main()\n```",
      "count": "meeting_planning_example_482"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Rebecca",
            "start_time": "9:40AM",
            "end_time": "10:10AM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Joseph",
            "start_time": "9:30AM",
            "end_time": "9:08AM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Stephanie",
            "start_time": "0:45PM",
            "end_time": "2:30PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Karen",
            "start_time": "2:00PM",
            "end_time": "2:15PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Brian",
            "start_time": "3:30PM",
            "end_time": "4:00PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Steven",
            "start_time": "5:40PM",
            "end_time": "7:40PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Rebecca",
            "start_time": "9:10AM",
            "end_time": "9:40AM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Stephanie",
            "start_time": "11:00AM",
            "end_time": "12:45PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Karen",
            "start_time": "1:45PM",
            "end_time": "2:00PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Brian",
            "start_time": "3:00PM",
            "end_time": "3:30PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Steven",
            "start_time": "3:40PM",
            "end_time": "5:40PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Input parameters\ntravel_distances = {\n    'Financial District': {\n        'Golden Gate Park': 23,\n        'Chinatown': 5,\n        'Union Square': 9,\n        'Fisherman\\'s Wharf': 10,\n        'Pacific Heights': 13,\n        'North Beach': 7\n    },\n    'Golden Gate Park': {\n        'Financial District': 26,\n        'Chinatown': 23,\n        'Union Square': 22,\n        'Fisherman\\'s Wharf': 24,\n        'Pacific Heights': 16,\n        'North Beach': 24\n    },\n    'Chinatown': {\n        'Financial District': 5,\n        'Golden Gate Park': 23,\n        'Union Square': 7,\n        'Fisherman\\'s Wharf': 8,\n        'Pacific Heights': 10,\n        'North Beach': 3\n    },\n    'Union Square': {\n        'Financial District': 9,\n        'Golden Gate Park': 22,\n        'Chinatown': 7,\n        'Fisherman\\'s Wharf': 15,\n        'Pacific Heights': 12,\n        'North Beach': 10\n    },\n    'Fisherman\\'s Wharf': {\n        'Financial District': 11,\n        'Golden Gate Park': 25,\n        'Chinatown': 12,\n        'Union Square': 13,\n        'Pacific Heights': 12,\n        'North Beach': 6\n    },\n    'Pacific Heights': {\n        'Financial District': 13,\n        'Golden Gate Park': 15,\n        'Chinatown': 11,\n        'Union Square': 12,\n        'Fisherman\\'s Wharf': 13,\n        'North Beach': 9\n    },\n    'North Beach': {\n        'Financial District': 8,\n        'Golden Gate Park': 22,\n        'Chinatown': 6,\n        'Union Square': 7,\n        'Fisherman\\'s Wharf': 5,\n        'Pacific Heights': 8\n    }\n}\n\nconstraints = {\n    'Stephanie': {'start_time': 11 * 60, 'end_time': 15 * 60,'min_meeting_time': 105},\n    'Karen': {'start_time': 13 * 60 + 45, 'end_time': 16 * 60 + 30,'min_meeting_time': 15},\n    'Brian': {'start_time': 15 * 60, 'end_time': 17 * 60 + 15,'min_meeting_time': 30},\n    'Rebecca': {'start_time': 8 * 60, 'end_time': 11 * 60 + 15,'min_meeting_time': 30},\n    'Joseph': {'start_time': 8 * 60 + 15, 'end_time': 9 * 60 + 30,'min_meeting_time': 60},\n    'Steven': {'start_time': 14 * 60 + 30, 'end_time': 20 * 60 + 45,'min_meeting_time': 120}\n}\n\ndef compute_meeting_schedule():\n    schedule = []\n    start_time = 9 * 60\n    current_location = 'Financial District'\n\n    # Meet Rebecca\n    rebecca_start_time = max(constraints['Rebecca']['start_time'], start_time + travel_distances['Financial District']['Fisherman\\'s Wharf'])\n    rebecca_end_time = min(constraints['Rebecca']['end_time'], rebecca_start_time + constraints['Rebecca']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Financial District']['Fisherman\\'s Wharf'], 'time': format_time(start_time), 'to': 'Fisherman\\'s Wharf'})\n    schedule.append({'action': 'wait', 'location': 'Fisherman\\'s Wharf', 'time': format_time(rebecca_start_time)})\n    schedule.append({'action':'meet', 'location': 'Fisherman\\'s Wharf', 'duration': rebecca_end_time - rebecca_start_time, 'time': format_time(rebecca_end_time)})\n    current_location = 'Fisherman\\'s Wharf'\n    start_time = rebecca_end_time\n\n    # Meet Joseph\n    joseph_start_time = max(constraints['Joseph']['start_time'], start_time + travel_distances['Fisherman\\'s Wharf']['Pacific Heights'])\n    joseph_end_time = min(constraints['Joseph']['end_time'], joseph_start_time + constraints['Joseph']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Fisherman\\'s Wharf']['Pacific Heights'], 'time': format_time(start_time), 'to': 'Pacific Heights'})\n    schedule.append({'action': 'wait', 'location': 'Pacific Heights', 'time': format_time(joseph_start_time)})\n    schedule.append({'action':'meet', 'location': 'Pacific Heights', 'duration': joseph_end_time - joseph_start_time, 'time': format_time(joseph_end_time)})\n    current_location = 'Pacific Heights'\n    start_time = joseph_end_time\n\n    # Meet Stephanie\n    stephanie_start_time = max(constraints['Stephanie']['start_time'], start_time + travel_distances['Pacific Heights']['Golden Gate Park'])\n    stephanie_end_time = min(constraints['Stephanie']['end_time'], stephanie_start_time + constraints['Stephanie']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Pacific Heights']['Golden Gate Park'], 'time': format_time(start_time), 'to': 'Golden Gate Park'})\n    schedule.append({'action': 'wait', 'location': 'Golden Gate Park', 'time': format_time(stephanie_start_time)})\n    schedule.append({'action':'meet', 'location': 'Golden Gate Park', 'duration': stephanie_end_time - stephanie_start_time, 'time': format_time(stephanie_end_time)})\n    current_location = 'Golden Gate Park'\n    start_time = stephanie_end_time\n\n    # Meet Karen\n    karen_start_time = max(constraints['Karen']['start_time'], start_time + travel_distances['Golden Gate Park']['Chinatown'])\n    karen_end_time = min(constraints['Karen']['end_time'], karen_start_time + constraints['Karen']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Golden Gate Park']['Chinatown'], 'time': format_time(start_time), 'to': 'Chinatown'})\n    schedule.append({'action': 'wait', 'location': 'Chinatown', 'time': format_time(karen_start_time)})\n    schedule.append({'action':'meet', 'location': 'Chinatown', 'duration': karen_end_time - karen_start_time, 'time': format_time(karen_end_time)})\n    current_location = 'Chinatown'\n    start_time = karen_end_time\n\n    # Meet Brian\n    brian_start_time = max(constraints['Brian']['start_time'], start_time + travel_distances['Chinatown']['Union Square'])\n    brian_end_time = min(constraints['Brian']['end_time'], brian_start_time + constraints['Brian']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Chinatown']['Union Square'], 'time': format_time(start_time), 'to': 'Union Square'})\n    schedule.append({'action': 'wait', 'location': 'Union Square', 'time': format_time(brian_start_time)})\n    schedule.append({'action':'meet', 'location': 'Union Square', 'duration': brian_end_time - brian_start_time, 'time': format_time(brian_end_time)})\n    current_location = 'Union Square'\n    start_time = brian_end_time\n\n    # Meet Steven\n    steven_start_time = max(constraints['Steven']['start_time'], start_time + travel_distances['Union Square']['North Beach'])\n    steven_end_time = min(constraints['Steven']['end_time'], steven_start_time + constraints['Steven']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Union Square']['North Beach'], 'time': format_time(start_time), 'to': 'North Beach'})\n    schedule.append({'action': 'wait', 'location': 'North Beach', 'time': format_time(steven_start_time)})\n    schedule.append({'action':'meet', 'location': 'North Beach', 'duration': steven_end_time - steven_start_time, 'time': format_time(steven_end_time)})\n\n    return schedule\n\ndef format_time(minutes):\n    hours = minutes // 60\n    mins = minutes % 60\n    am_pm = 'AM' if hours < 12 else 'PM'\n    hours = hours % 12 if hours!= 0 else 12\n    return f'{hours}:{mins:02}{am_pm}'\n\ndef main():\n    schedule = compute_meeting_schedule()\n    result = {'schedule': schedule}\n    print(json.dumps(result, indent=4))\n\nif __name__ == '__main__':\n    main()\n```",
      "count": "meeting_planning_example_502"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Sarah",
            "start_time": "5:00PM",
            "end_time": "6:00PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Jeffrey",
            "start_time": "6:22PM",
            "end_time": "7:37PM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Brian",
            "start_time": "5:30PM",
            "end_time": "4:23PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Sarah",
            "start_time": "4:00PM",
            "end_time": "5:00PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Jeffrey",
            "start_time": "5:07PM",
            "end_time": "6:22PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Input parameters\ntravel_distances = {\n    'Sunset District': {\n        'North Beach': 29,\n        'Union Square': 30,\n        'Alamo Square': 17\n    },\n    'North Beach': {\n        'Sunset District': 27,\n        'Union Square': 7,\n        'Alamo Square': 16\n    },\n    'Union Square': {\n        'Sunset District': 26,\n        'North Beach': 10,\n        'Alamo Square': 15\n    },\n    'Alamo Square': {\n        'Sunset District': 16,\n        'North Beach': 15,\n        'Union Square': 14\n    }\n}\n\nconstraints = {\n    'Sarah': {'start_time': 16 * 60, 'end_time': 18 * 60 + 15,'min_meeting_time': 60},\n    'Jeffrey': {'start_time': 15 * 60, 'end_time': 22 * 60,'min_meeting_time': 75},\n    'Brian': {'start_time': 16 * 60, 'end_time': 17 * 60 + 30,'min_meeting_time': 75}\n}\n\ndef compute_meeting_schedule():\n    schedule = []\n    start_time = 9 * 60\n    current_location = 'Sunset District'\n\n    # Meet Sarah\n    sarah_start_time = max(constraints['Sarah']['start_time'], start_time + travel_distances['Sunset District']['North Beach'])\n    sarah_end_time = min(constraints['Sarah']['end_time'], sarah_start_time + constraints['Sarah']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Sunset District']['North Beach'], 'time': format_time(start_time), 'to': 'North Beach'})\n    schedule.append({'action': 'wait', 'location': 'North Beach', 'time': format_time(sarah_start_time)})\n    schedule.append({'action':'meet', 'location': 'North Beach', 'duration': sarah_end_time - sarah_start_time, 'time': format_time(sarah_end_time)})\n    current_location = 'North Beach'\n    start_time = sarah_end_time\n\n    # Meet Jeffrey\n    jeffrey_start_time = max(constraints['Jeffrey']['start_time'], start_time + travel_distances['North Beach']['Union Square'])\n    jeffrey_end_time = min(constraints['Jeffrey']['end_time'], jeffrey_start_time + constraints['Jeffrey']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['North Beach']['Union Square'], 'time': format_time(start_time), 'to': 'Union Square'})\n    schedule.append({'action': 'wait', 'location': 'Union Square', 'time': format_time(jeffrey_start_time)})\n    schedule.append({'action':'meet', 'location': 'Union Square', 'duration': jeffrey_end_time - jeffrey_start_time, 'time': format_time(jeffrey_end_time)})\n    current_location = 'Union Square'\n    start_time = jeffrey_end_time\n\n    # Meet Brian\n    brian_start_time = max(constraints['Brian']['start_time'], start_time + travel_distances['Union Square']['Alamo Square'])\n    brian_end_time = min(constraints['Brian']['end_time'], brian_start_time + constraints['Brian']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Union Square']['Alamo Square'], 'time': format_time(start_time), 'to': 'Alamo Square'})\n    schedule.append({'action': 'wait', 'location': 'Alamo Square', 'time': format_time(brian_start_time)})\n    schedule.append({'action':'meet', 'location': 'Alamo Square', 'duration': brian_end_time - brian_start_time, 'time': format_time(brian_end_time)})\n\n    return schedule\n\ndef format_time(minutes):\n    hours = minutes // 60\n    mins = minutes % 60\n    am_pm = 'AM' if hours < 12 else 'PM'\n    hours = hours % 12 if hours!= 0 else 12\n    return f'{hours}:{mins:02}{am_pm}'\n\ndef main():\n    schedule = compute_meeting_schedule()\n    result = {'schedule': schedule}\n    print(json.dumps(result, indent=4))\n\nif __name__ == '__main__':\n    main()\n```",
      "count": "meeting_planning_example_225"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Margaret",
            "start_time": "9:54AM",
            "end_time": "10:24AM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Daniel",
            "start_time": "10:30AM",
            "end_time": "10:45AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Charles",
            "start_time": "7:30PM",
            "end_time": "9:00PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Stephanie",
            "start_time": "10:00PM",
            "end_time": "11:30PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Margaret",
            "start_time": "9:24AM",
            "end_time": "9:54AM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Daniel",
            "start_time": "10:15AM",
            "end_time": "10:30AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Charles",
            "start_time": "6:00PM",
            "end_time": "7:30PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Stephanie",
            "start_time": "8:30PM",
            "end_time": "10:00PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Input parameters\ntravel_distances = {\n    'Sunset District': {\n        'Alamo Square': 17,\n        'Russian Hill': 24,\n        'Golden Gate Park': 11,\n        'Mission District': 24\n    },\n    'Alamo Square': {\n        'Sunset District': 16,\n        'Russian Hill': 13,\n        'Golden Gate Park': 9,\n        'Mission District': 10\n    },\n    'Russian Hill': {\n        'Sunset District': 23,\n        'Alamo Square': 15,\n        'Golden Gate Park': 21,\n        'Mission District': 16\n    },\n    'Golden Gate Park': {\n        'Sunset District': 10,\n        'Alamo Square': 10,\n        'Russian Hill': 19,\n        'Mission District': 17\n    },\n    'Mission District': {\n        'Sunset District': 24,\n        'Alamo Square': 11,\n        'Russian Hill': 15,\n        'Golden Gate Park': 17\n    }\n}\n\nconstraints = {\n    'Charles': {'start_time': 18 * 60, 'end_time': 20 * 60 + 45,'min_meeting_time': 90},\n    'Margaret': {'start_time': 9 * 60, 'end_time': 16 * 60,'min_meeting_time': 30},\n    'Daniel': {'start_time': 8 * 60, 'end_time': 11 * 60 + 30,'min_meeting_time': 15},\n    'Stephanie': {'start_time': 20 * 60 + 30, 'end_time': 22 * 60,'min_meeting_time': 90}\n}\n\ndef compute_meeting_schedule():\n    schedule = []\n    start_time = 9 * 60\n    current_location = 'Sunset District'\n\n    # Meet Margaret\n    margaret_start_time = max(constraints['Margaret']['start_time'], start_time + travel_distances['Sunset District']['Russian Hill'])\n    margaret_end_time = min(constraints['Margaret']['end_time'], margaret_start_time + constraints['Margaret']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Sunset District']['Russian Hill'], 'time': format_time(start_time), 'to': 'Russian Hill'})\n    schedule.append({'action': 'wait', 'location': 'Russian Hill', 'time': format_time(margaret_start_time)})\n    schedule.append({'action':'meet', 'location': 'Russian Hill', 'duration': margaret_end_time - margaret_start_time, 'time': format_time(margaret_end_time)})\n    current_location = 'Russian Hill'\n    start_time = margaret_end_time\n\n    # Meet Daniel\n    daniel_start_time = max(constraints['Daniel']['start_time'], start_time + travel_distances['Russian Hill']['Golden Gate Park'])\n    daniel_end_time = min(constraints['Daniel']['end_time'], daniel_start_time + constraints['Daniel']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Russian Hill']['Golden Gate Park'], 'time': format_time(start_time), 'to': 'Golden Gate Park'})\n    schedule.append({'action': 'wait', 'location': 'Golden Gate Park', 'time': format_time(daniel_start_time)})\n    schedule.append({'action':'meet', 'location': 'Golden Gate Park', 'duration': daniel_end_time - daniel_start_time, 'time': format_time(daniel_end_time)})\n    current_location = 'Golden Gate Park'\n    start_time = daniel_end_time\n\n    # Meet Charles\n    charles_start_time = max(constraints['Charles']['start_time'], start_time + travel_distances['Golden Gate Park']['Alamo Square'])\n    charles_end_time = min(constraints['Charles']['end_time'], charles_start_time + constraints['Charles']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Golden Gate Park']['Alamo Square'], 'time': format_time(start_time), 'to': 'Alamo Square'})\n    schedule.append({'action': 'wait', 'location': 'Alamo Square', 'time': format_time(charles_start_time)})\n    schedule.append({'action':'meet', 'location': 'Alamo Square', 'duration': charles_end_time - charles_start_time, 'time': format_time(charles_end_time)})\n\n    # Meet Stephanie\n    stephanie_start_time = max(constraints['Stephanie']['start_time'], start_time + travel_distances['Alamo Square']['Mission District'])\n    stephanie_end_time = min(constraints['Stephanie']['end_time'], stephanie_start_time + constraints['Stephanie']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Alamo Square']['Mission District'], 'time': format_time(start_time), 'to': 'Mission District'})\n    schedule.append({'action': 'wait', 'location': 'Mission District', 'time': format_time(stephanie_start_time)})\n    schedule.append({'action':'meet', 'location': 'Mission District', 'duration': stephanie_end_time - stephanie_start_time, 'time': format_time(stephanie_end_time)})\n\n    return schedule\n\ndef format_time(minutes):\n    hours = minutes // 60\n    mins = minutes % 60\n    am_pm = 'AM' if hours < 12 else 'PM'\n    hours = hours % 12 if hours!= 0 else 12\n    return f'{hours}:{mins:02}{am_pm}'\n\ndef main():\n    schedule = compute_meeting_schedule()\n    result = {'schedule': schedule}\n    print(json.dumps(result, indent=4))\n\nif __name__ == '__main__':\n    main()\n```",
      "count": "meeting_planning_example_372"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Daniel",
            "start_time": "9:27AM",
            "end_time": "9:42AM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Lisa",
            "start_time": "9:15PM",
            "end_time": "11:15PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Elizabeth",
            "start_time": "10:15PM",
            "end_time": "10:55PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Steven",
            "start_time": "8:45PM",
            "end_time": "7:04PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Timothy",
            "start_time": "6:00PM",
            "end_time": "3:08PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Ashley",
            "start_time": "9:45PM",
            "end_time": "10:45PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Kevin",
            "start_time": "6:53PM",
            "end_time": "7:23PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Betty",
            "start_time": "3:45PM",
            "end_time": "1:10PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Daniel",
            "start_time": "9:12AM",
            "end_time": "9:27AM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Timothy",
            "start_time": "12:00PM",
            "end_time": "1:30PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Kevin",
            "start_time": "1:41PM",
            "end_time": "2:11PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Betty",
            "start_time": "2:31PM",
            "end_time": "3:01PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Steven",
            "start_time": "4:30PM",
            "end_time": "6:00PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Lisa",
            "start_time": "7:15PM",
            "end_time": "9:15PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Input parameters\ntravel_distances = {\n    'Mission District': {\n        'The Castro': 7,\n        'Nob Hill': 12,\n        'Presidio': 25,\n        'Marina District': 19,\n        'Pacific Heights': 16,\n        'Golden Gate Park': 17,\n        'Chinatown': 16,\n        'Richmond District': 20\n    },\n    'The Castro': {\n        'Mission District': 7,\n        'Nob Hill': 16,\n        'Presidio': 20,\n        'Marina District': 21,\n        'Pacific Heights': 16,\n        'Golden Gate Park': 11,\n        'Chinatown': 22,\n        'Richmond District': 16\n    },\n    'Nob Hill': {\n        'Mission District': 13,\n        'The Castro': 17,\n        'Presidio': 17,\n        'Marina District': 11,\n        'Pacific Heights': 8,\n        'Golden Gate Park': 17,\n        'Chinatown': 6,\n        'Richmond District': 14\n    },\n    'Presidio': {\n        'Mission District': 26,\n        'The Castro': 21,\n        'Nob Hill': 18,\n        'Marina District': 11,\n        'Pacific Heights': 11,\n        'Golden Gate Park': 12,\n        'Chinatown': 21,\n        'Richmond District': 7\n    },\n    'Marina District': {\n        'Mission District': 20,\n        'The Castro': 22,\n        'Nob Hill': 12,\n        'Presidio': 10,\n        'Pacific Heights': 7,\n        'Golden Gate Park': 18,\n        'Chinatown': 15,\n        'Richmond District': 11\n    },\n    'Pacific Heights': {\n        'Mission District': 15,\n        'The Castro': 16,\n        'Nob Hill': 8,\n        'Presidio': 11,\n        'Marina District': 6,\n        'Golden Gate Park': 15,\n        'Chinatown': 11,\n        'Richmond District': 12\n    },\n    'Golden Gate Park': {\n        'Mission District': 17,\n        'The Castro': 13,\n        'Nob Hill': 20,\n        'Presidio': 11,\n        'Marina District': 16,\n        'Pacific Heights': 16,\n        'Chinatown': 23,\n        'Richmond District': 7\n    },\n    'Chinatown': {\n        'Mission District': 17,\n        'The Castro': 22,\n        'Nob Hill': 9,\n        'Presidio': 19,\n        'Marina District': 12,\n        'Pacific Heights': 10,\n        'Golden Gate Park': 23,\n        'Richmond District': 20\n    },\n    'Richmond District': {\n        'Mission District': 20,\n        'The Castro': 16,\n        'Nob Hill': 17,\n        'Presidio': 7,\n        'Marina District': 9,\n        'Pacific Heights': 10,\n        'Golden Gate Park': 9,\n        'Chinatown': 20\n    }\n}\n\nconstraints = {\n    'Lisa': {'start_time': 19 * 60 + 15, 'end_time': 21 * 60 + 15,'min_meeting_time': 120},\n    'Daniel': {'start_time': 8 * 60 + 15, 'end_time': 11 * 60,'min_meeting_time': 15},\n    'Elizabeth': {'start_time': 21 * 60 + 15, 'end_time': 22 * 60 + 15,'min_meeting_time': 45},\n    'Steven': {'start_time': 16 * 60 + 30, 'end_time': 20 * 60 + 45,'min_meeting_time': 90},\n    'Timothy': {'start_time': 12 * 60, 'end_time': 18 * 60,'min_meeting_time': 90},\n    'Ashley': {'start_time': 20 * 60 + 45, 'end_time': 21 * 60 + 45,'min_meeting_time': 60},\n    'Kevin': {'start_time': 12 * 60, 'end_time': 19 * 60,'min_meeting_time': 30},\n    'Betty': {'start_time': 13 * 60 + 15, 'end_time': 15 * 60 + 45,'min_meeting_time': 30}\n}\n\ndef compute_meeting_schedule():\n    schedule = []\n    start_time = 9 * 60\n    current_location = 'Mission District'\n\n    # Meet Daniel\n    daniel_start_time = max(constraints['Daniel']['start_time'], start_time + travel_distances['Mission District']['Nob Hill'])\n    daniel_end_time = min(constraints['Daniel']['end_time'], daniel_start_time + constraints['Daniel']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Mission District']['Nob Hill'], 'time': format_time(start_time), 'to': 'Nob Hill'})\n    schedule.append({'action': 'wait', 'location': 'Nob Hill', 'time': format_time(daniel_start_time)})\n    schedule.append({'action':'meet', 'location': 'Nob Hill', 'duration': daniel_end_time - daniel_start_time, 'time': format_time(daniel_end_time)})\n    current_location = 'Nob Hill'\n    start_time = daniel_end_time\n\n    # Meet Lisa\n    lisa_start_time = max(constraints['Lisa']['start_time'], start_time + travel_distances['Nob Hill']['The Castro'])\n    lisa_end_time = min(constraints['Lisa']['end_time'], lisa_start_time + constraints['Lisa']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Nob Hill']['The Castro'], 'time': format_time(start_time), 'to': 'The Castro'})\n    schedule.append({'action': 'wait', 'location': 'The Castro', 'time': format_time(lisa_start_time)})\n    schedule.append({'action':'meet', 'location': 'The Castro', 'duration': lisa_end_time - lisa_start_time, 'time': format_time(lisa_end_time)})\n    current_location = 'The Castro'\n    start_time = lisa_end_time\n\n    # Meet Elizabeth\n    elizabeth_start_time = max(constraints['Elizabeth']['start_time'], start_time + travel_distances['The Castro']['Presidio'])\n    elizabeth_end_time = min(constraints['Elizabeth']['end_time'], elizabeth_start_time + constraints['Elizabeth']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['The Castro']['Presidio'], 'time': format_time(start_time), 'to': 'Presidio'})\n    schedule.append({'action': 'wait', 'location': 'Presidio', 'time': format_time(elizabeth_start_time)})\n    schedule.append({'action':'meet', 'location': 'Presidio', 'duration': elizabeth_end_time - elizabeth_start_time, 'time': format_time(elizabeth_end_time)})\n    current_location = 'Presidio'\n    start_time = elizabeth_end_time\n\n    # Meet Steven\n    steven_start_time = max(constraints['Steven']['start_time'], start_time + travel_distances['Presidio']['Marina District'])\n    steven_end_time = min(constraints['Steven']['end_time'], steven_start_time + constraints['Steven']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Presidio']['Marina District'], 'time': format_time(start_time), 'to': 'Marina District'})\n    schedule.append({'action': 'wait', 'location': 'Marina District', 'time': format_time(steven_start_time)})\n    schedule.append({'action':'meet', 'location': 'Marina District', 'duration': steven_end_time - steven_start_time, 'time': format_time(steven_end_time)})\n    current_location = 'Marina District'\n    start_time = steven_end_time\n\n    # Meet Timothy\n    timothy_start_time = max(constraints['Timothy']['start_time'], start_time + travel_distances['Marina District']['Pacific Heights'])\n    timothy_end_time = min(constraints['Timothy']['end_time'], timothy_start_time + constraints['Timothy']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Marina District']['Pacific Heights'], 'time': format_time(start_time), 'to': 'Pacific Heights'})\n    schedule.append({'action': 'wait', 'location': 'Pacific Heights', 'time': format_time(timothy_start_time)})\n    schedule.append({'action':'meet', 'location': 'Pacific Heights', 'duration': timothy_end_time - timothy_start_time, 'time': format_time(timothy_end_time)})\n    current_location = 'Pacific Heights'\n    start_time = timothy_end_time\n\n    # Meet Ashley\n    ashley_start_time = max(constraints['Ashley']['start_time'], start_time + travel_distances['Pacific Heights']['Golden Gate Park'])\n    ashley_end_time = min(constraints['Ashley']['end_time'], ashley_start_time + constraints['Ashley']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Pacific Heights']['Golden Gate Park'], 'time': format_time(start_time), 'to': 'Golden Gate Park'})\n    schedule.append({'action': 'wait', 'location': 'Golden Gate Park', 'time': format_time(ashley_start_time)})\n    schedule.append({'action':'meet', 'location': 'Golden Gate Park', 'duration': ashley_end_time - ashley_start_time, 'time': format_time(ashley_end_time)})\n\n    # Meet Kevin\n    kevin_start_time = max(constraints['Kevin']['start_time'], start_time + travel_distances['Golden Gate Park']['Chinatown'])\n    kevin_end_time = min(constraints['Kevin']['end_time'], kevin_start_time + constraints['Kevin']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Golden Gate Park']['Chinatown'], 'time': format_time(start_time), 'to': 'Chinatown'})\n    schedule.append({'action': 'wait', 'location': 'Chinatown', 'time': format_time(kevin_start_time)})\n    schedule.append({'action':'meet', 'location': 'Chinatown', 'duration': kevin_end_time - kevin_start_time, 'time': format_time(kevin_end_time)})\n\n    # Meet Betty\n    betty_start_time = max(constraints['Betty']['start_time'], start_time + travel_distances['Chinatown']['Richmond District'])\n    betty_end_time = min(constraints['Betty']['end_time'], betty_start_time + constraints['Betty']['min_meeting_time'])\n    schedule.append({'action': 'travel', 'location': current_location, 'duration': travel_distances['Chinatown']['Richmond District'], 'time': format_time(start_time), 'to': 'Richmond District'})\n    schedule.append({'action': 'wait', 'location': 'Richmond District', 'time': format_time(betty_start_time)})\n    schedule.append({'action':'meet', 'location': 'Richmond District', 'duration': betty_end_time - betty_start_time, 'time': format_time(betty_end_time)})\n\n    return schedule\n\ndef format_time(minutes):\n    hours = minutes // 60\n    mins = minutes % 60\n    am_pm = 'AM' if hours < 12 else 'PM'\n    hours = hours % 12 if hours!= 0 else 12\n    return f'{hours}:{mins:02}{am_pm}'\n\ndef main():\n    schedule = compute_meeting_schedule()\n    result = {'schedule': schedule}\n    print(json.dumps(result, indent=4))\n\nif __name__ == '__main__':\n    main()\n```",
      "count": "meeting_planning_example_701"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Unknown",
            "start_time": "12:52",
            "end_time": "2:37PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Unknown",
            "start_time": "16:32",
            "end_time": "6:17PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Timothy",
            "start_time": "19:50",
            "end_time": "9:20PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Unknown",
            "start_time": "20:56",
            "end_time": "9:26PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Unknown",
            "start_time": "23:47",
            "end_time": "13:02PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Unknown",
            "start_time": "1:24",
            "end_time": "2:09AM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Unknown",
            "start_time": "4:31",
            "end_time": "6:01AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Unknown",
            "start_time": "5:44",
            "end_time": "6:14AM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Unknown",
            "start_time": "7:31",
            "end_time": "8:16AM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Unknown",
            "start_time": "11:01",
            "end_time": "12:31PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Joshua",
            "start_time": "9:20AM",
            "end_time": "11:05AM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "David",
            "start_time": "11:25AM",
            "end_time": "11:55AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Stephanie",
            "start_time": "3:30PM",
            "end_time": "4:00PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Kimberly",
            "start_time": "4:45PM",
            "end_time": "6:00PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Lisa",
            "start_time": "6:07PM",
            "end_time": "6:52PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Timothy",
            "start_time": "7:45PM",
            "end_time": "9:15PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"The Castro\": {\n        \"Marina District\": 22,\n        \"Presidio\": 20,\n        \"North Beach\": 20,\n        \"Embarcadero\": 22,\n        \"Haight-Ashbury\": 6,\n        \"Golden Gate Park\": 11,\n        \"Richmond District\": 16,\n        \"Alamo Square\": 8,\n        \"Financial District\": 21,\n        \"Sunset District\": 17\n    },\n    \"Marina District\": {\n        \"The Castro\": 22,\n        \"Presidio\": 10,\n        \"North Beach\": 11,\n        \"Embarcadero\": 14,\n        \"Haight-Ashbury\": 16,\n        \"Golden Gate Park\": 18,\n        \"Richmond District\": 11,\n        \"Alamo Square\": 15,\n        \"Financial District\": 17,\n        \"Sunset District\": 19\n    },\n    \"Presidio\": {\n        \"The Castro\": 21,\n        \"Marina District\": 11,\n        \"North Beach\": 18,\n        \"Embarcadero\": 20,\n        \"Haight-Ashbury\": 15,\n        \"Golden Gate Park\": 12,\n        \"Richmond District\": 7,\n        \"Alamo Square\": 19,\n        \"Financial District\": 23,\n        \"Sunset District\": 15\n    },\n    \"North Beach\": {\n        \"The Castro\": 23,\n        \"Marina District\": 9,\n        \"Presidio\": 17,\n        \"Embarcadero\": 6,\n        \"Haight-Ashbury\": 18,\n        \"Golden Gate Park\": 22,\n        \"Richmond District\": 18,\n        \"Alamo Square\": 16,\n        \"Financial District\": 8,\n        \"Sunset District\": 27\n    },\n    \"Embarcadero\": {\n        \"The Castro\": 25,\n        \"Marina District\": 12,\n        \"Presidio\": 20,\n        \"North Beach\": 5,\n        \"Haight-Ashbury\": 21,\n        \"Golden Gate Park\": 25,\n        \"Richmond District\": 21,\n        \"Alamo Square\": 19,\n        \"Financial District\": 5,\n        \"Sunset District\": 30\n    },\n    \"Haight-Ashbury\": {\n        \"The Castro\": 6,\n        \"Marina District\": 17,\n        \"Presidio\": 15,\n        \"North Beach\": 19,\n        \"Embarcadero\": 20,\n        \"Golden Gate Park\": 7,\n        \"Richmond District\": 10,\n        \"Alamo Square\": 5,\n        \"Financial District\": 21,\n        \"Sunset District\": 15\n    },\n    \"Golden Gate Park\": {\n        \"The Castro\": 13,\n        \"Marina District\": 16,\n        \"Presidio\": 11,\n        \"North Beach\": 23,\n        \"Embarcadero\": 25,\n        \"Haight-Ashbury\": 7,\n        \"Richmond District\": 7,\n        \"Alamo Square\": 9,\n        \"Financial District\": 26,\n        \"Sunset District\": 10\n    },\n    \"Richmond District\": {\n        \"The Castro\": 16,\n        \"Marina District\": 9,\n        \"Presidio\": 7,\n        \"North Beach\": 17,\n        \"Embarcadero\": 19,\n        \"Haight-Ashbury\": 10,\n        \"Golden Gate Park\": 9,\n        \"Alamo Square\": 13,\n        \"Financial District\": 22,\n        \"Sunset District\": 11\n    },\n    \"Alamo Square\": {\n        \"The Castro\": 8,\n        \"Marina District\": 15,\n        \"Presidio\": 17,\n        \"North Beach\": 15,\n        \"Embarcadero\": 16,\n        \"Haight-Ashbury\": 5,\n        \"Golden Gate Park\": 9,\n        \"Richmond District\": 11,\n        \"Financial District\": 17,\n        \"Sunset District\": 16\n    },\n    \"Financial District\": {\n        \"The Castro\": 20,\n        \"Marina District\": 15,\n        \"Presidio\": 22,\n        \"North Beach\": 7,\n        \"Embarcadero\": 4,\n        \"Haight-Ashbury\": 19,\n        \"Golden Gate Park\": 23,\n        \"Richmond District\": 21,\n        \"Alamo Square\": 17,\n        \"Sunset District\": 30\n    },\n    \"Sunset District\": {\n        \"The Castro\": 17,\n        \"Marina District\": 21,\n        \"Presidio\": 16,\n        \"North Beach\": 28,\n        \"Embarcadero\": 30,\n        \"Haight-Ashbury\": 15,\n        \"Golden Gate Park\": 11,\n        \"Richmond District\": 12,\n        \"Alamo Square\": 17,\n        \"Financial District\": 30\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Elizabeth\": {\"start_time\": \"19:00\", \"end_time\": \"20:45\", \"duration\": 105},\n    \"Joshua\": {\"start_time\": \"08:30\", \"end_time\": \"11:15\", \"duration\": 105},\n    \"Timothy\": {\"start_time\": \"19:45\", \"end_time\": \"22:00\", \"duration\": 90},\n    \"David\": {\"start_time\": \"10:45\", \"end_time\": \"12:30\", \"duration\": 45},\n    \"Kimberly\": {\"start_time\": \"16:45\", \"end_time\": \"21:30\", \"duration\": 75},\n    \"Lisa\": {\"start_time\": \"17:30\", \"end_time\": \"21:45\", \"duration\": 45},\n    \"Ronald\": {\"start_time\": \"08:00\", \"end_time\": \"09:30\", \"duration\": 90},\n    \"Stephanie\": {\"start_time\": \"15:30\", \"end_time\": \"16:30\", \"duration\": 30},\n    \"Helen\": {\"start_time\": \"17:30\", \"end_time\": \"18:30\", \"duration\": 45},\n    \"Laura\": {\"start_time\": \"17:45\", \"end_time\": \"21:15\", \"duration\": 90}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"The Castro\", \"time\": current_time})\n\n    # Meet Elizabeth\n    travel_time = calculate_travel_time(\"The Castro\", \"Marina District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"The Castro\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Marina District\"})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"wait\", \"location\": \"Marina District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"meet\", \"location\": \"Marina District\", \"duration\": 105, \"time\": current_time})\n\n    # Meet Joshua\n    travel_time = calculate_travel_time(\"Marina District\", \"Presidio\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Presidio\"})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"wait\", \"location\": \"Presidio\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"meet\", \"location\": \"Presidio\", \"duration\": 105, \"time\": current_time})\n\n    # Meet Timothy\n    travel_time = calculate_travel_time(\"Presidio\", \"North Beach\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": current_time, \"to\": \"North Beach\"})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"wait\", \"location\": \"North Beach\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"meet\", \"location\": \"North Beach\", \"duration\": 90, \"time\": current_time})\n\n    # Meet David\n    travel_time = calculate_travel_time(\"North Beach\", \"Embarcadero\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"North Beach\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Embarcadero\"})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"wait\", \"location\": \"Embarcadero\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"meet\", \"location\": \"Embarcadero\", \"duration\": 30, \"time\": current_time})\n\n    # Meet Kimberly\n    travel_time = calculate_travel_time(\"Embarcadero\", \"Haight-Ashbury\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Embarcadero\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Haight-Ashbury\"})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"wait\", \"location\": \"Haight-Ashbury\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"meet\", \"location\": \"Haight-Ashbury\", \"duration\": 75, \"time\": current_time})\n\n    # Meet Lisa\n    travel_time = calculate_travel_time(\"Haight-Ashbury\", \"Golden Gate Park\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Golden Gate Park\"})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": 45, \"time\": current_time})\n\n    # Meet Ronald\n    travel_time = calculate_travel_time(\"Golden Gate Park\", \"Richmond District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Richmond District\"})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"meet\", \"location\": \"Richmond District\", \"duration\": 90, \"time\": current_time})\n\n    # Meet Stephanie\n    travel_time = calculate_travel_time(\"Richmond District\", \"Alamo Square\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Alamo Square\"})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"wait\", \"location\": \"Alamo Square\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"meet\", \"location\": \"Alamo Square\", \"duration\": 30, \"time\": current_time})\n\n    # Meet Helen\n    travel_time = calculate_travel_time(\"Alamo Square\", \"Financial District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Alamo Square\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Financial District\"})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"meet\", \"location\": \"Financial District\", \"duration\": 45, \"time\": current_time})\n\n    # Meet Laura\n    travel_time = calculate_travel_time(\"Financial District\", \"Sunset District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Sunset District\"})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"wait\", \"location\": \"Sunset District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"meet\", \"location\": \"Sunset District\", \"duration\": 90, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_962"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Unknown",
            "start_time": "9:40",
            "end_time": "9:55AM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Joshua",
            "start_time": "8:45PM",
            "end_time": "9:00PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"Sunset District\": {\n        \"Golden Gate Park\": 11,\n        \"Golden Gate Park\": 10\n    },\n    \"Golden Gate Park\": {\n        \"Sunset District\": 10,\n        \"Sunset District\": 11\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Joshua\": {\"start_time\": \"20:45\", \"end_time\": \"21:45\", \"duration\": 15}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"Sunset District\", \"time\": current_time})\n\n    # Meet Joshua\n    travel_time = calculate_travel_time(\"Sunset District\", \"Golden Gate Park\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Sunset District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Golden Gate Park\"})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": 15, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_88"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Ronald",
            "start_time": "12:21",
            "end_time": "1:51PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Unknown",
            "start_time": "16:09",
            "end_time": "5:54PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Unknown",
            "start_time": "17:26",
            "end_time": "5:56PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Unknown",
            "start_time": "21:19",
            "end_time": "11:04PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Unknown",
            "start_time": "22:10",
            "end_time": "10:25PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Daniel",
            "start_time": "9:26AM",
            "end_time": "11:11AM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Ronald",
            "start_time": "11:27AM",
            "end_time": "12:57PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Jessica",
            "start_time": "1:45PM",
            "end_time": "2:15PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Ashley",
            "start_time": "5:15PM",
            "end_time": "7:00PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "William",
            "start_time": "7:21PM",
            "end_time": "7:36PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"Presidio\": {\n        \"Golden Gate Park\": 12,\n        \"Bayview\": 31,\n        \"Chinatown\": 21,\n        \"North Beach\": 18,\n        \"Mission District\": 26\n    },\n    \"Golden Gate Park\": {\n        \"Presidio\": 11,\n        \"Bayview\": 23,\n        \"Chinatown\": 23,\n        \"North Beach\": 24,\n        \"Mission District\": 17\n    },\n    \"Bayview\": {\n        \"Presidio\": 31,\n        \"Golden Gate Park\": 22,\n        \"Chinatown\": 18,\n        \"North Beach\": 21,\n        \"Mission District\": 13\n    },\n    \"Chinatown\": {\n        \"Presidio\": 19,\n        \"Golden Gate Park\": 23,\n        \"Bayview\": 22,\n        \"North Beach\": 3,\n        \"Mission District\": 18\n    },\n    \"North Beach\": {\n        \"Presidio\": 17,\n        \"Golden Gate Park\": 22,\n        \"Bayview\": 22,\n        \"Chinatown\": 6,\n        \"Mission District\": 18\n    },\n    \"Mission District\": {\n        \"Presidio\": 25,\n        \"Golden Gate Park\": 17,\n        \"Bayview\": 15,\n        \"Chinatown\": 16,\n        \"North Beach\": 17\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Jessica\": {\"start_time\": \"13:45\", \"end_time\": \"15:00\", \"duration\": 30},\n    \"Ashley\": {\"start_time\": \"17:15\", \"end_time\": \"20:00\", \"duration\": 105},\n    \"Ronald\": {\"start_time\": \"07:15\", \"end_time\": \"14:45\", \"duration\": 90},\n    \"William\": {\"start_time\": \"13:15\", \"end_time\": \"20:15\", \"duration\": 15},\n    \"Daniel\": {\"start_time\": \"07:00\", \"end_time\": \"11:15\", \"duration\": 105}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"Presidio\", \"time\": current_time})\n\n    # Meet Ronald\n    travel_time = calculate_travel_time(\"Presidio\", \"Chinatown\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Chinatown\"})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"wait\", \"location\": \"Chinatown\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"meet\", \"location\": \"Chinatown\", \"duration\": 90, \"time\": current_time})\n\n    # Meet Daniel\n    travel_time = calculate_travel_time(\"Chinatown\", \"Mission District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Chinatown\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Mission District\"})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"meet\", \"location\": \"Mission District\", \"duration\": 105, \"time\": current_time})\n\n    # Meet Jessica\n    travel_time = calculate_travel_time(\"Mission District\", \"Golden Gate Park\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Mission District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Golden Gate Park\"})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": 30, \"time\": current_time})\n\n    # Meet Ashley\n    travel_time = calculate_travel_time(\"Golden Gate Park\", \"Bayview\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Bayview\"})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"wait\", \"location\": \"Bayview\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"meet\", \"location\": \"Bayview\", \"duration\": 105, \"time\": current_time})\n\n    # Meet William\n    travel_time = calculate_travel_time(\"Bayview\", \"North Beach\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_time, \"time\": current_time, \"to\": \"North Beach\"})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"wait\", \"location\": \"North Beach\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"meet\", \"location\": \"North Beach\", \"duration\": 15, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_454"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Timothy",
            "start_time": "13:08",
            "end_time": "3:08PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Unknown",
            "start_time": "16:18",
            "end_time": "5:48PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Unknown",
            "start_time": "18:01",
            "end_time": "6:46PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Timothy",
            "start_time": "9:45AM",
            "end_time": "11:45AM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Patricia",
            "start_time": "6:30PM",
            "end_time": "8:00PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Ashley",
            "start_time": "8:30PM",
            "end_time": "9:15PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"Russian Hill\": {\n        \"Nob Hill\": 5,\n        \"Mission District\": 16,\n        \"Embarcadero\": 8\n    },\n    \"Nob Hill\": {\n        \"Russian Hill\": 5,\n        \"Mission District\": 13,\n        \"Embarcadero\": 9\n    },\n    \"Mission District\": {\n        \"Russian Hill\": 15,\n        \"Nob Hill\": 12,\n        \"Embarcadero\": 19\n    },\n    \"Embarcadero\": {\n        \"Russian Hill\": 8,\n        \"Nob Hill\": 10,\n        \"Mission District\": 20\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Patricia\": {\"start_time\": \"18:30\", \"end_time\": \"21:45\", \"duration\": 90},\n    \"Ashley\": {\"start_time\": \"20:30\", \"end_time\": \"21:15\", \"duration\": 45},\n    \"Timothy\": {\"start_time\": \"09:45\", \"end_time\": \"17:45\", \"duration\": 120}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"Russian Hill\", \"time\": current_time})\n\n    # Meet Timothy\n    travel_time = calculate_travel_time(\"Russian Hill\", \"Embarcadero\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Russian Hill\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Embarcadero\"})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"wait\", \"location\": \"Embarcadero\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"meet\", \"location\": \"Embarcadero\", \"duration\": 120, \"time\": current_time})\n\n    # Meet Patricia\n    travel_time = calculate_travel_time(\"Embarcadero\", \"Nob Hill\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Embarcadero\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Nob Hill\"})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"wait\", \"location\": \"Nob Hill\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"meet\", \"location\": \"Nob Hill\", \"duration\": 90, \"time\": current_time})\n\n    # Meet Ashley\n    travel_time = calculate_travel_time(\"Nob Hill\", \"Mission District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Nob Hill\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Mission District\"})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"meet\", \"location\": \"Mission District\", \"duration\": 45, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_272"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Sandra",
            "start_time": "9:37",
            "end_time": "9:52AM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Unknown",
            "start_time": "10:24",
            "end_time": "10:39AM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Jeffrey",
            "start_time": "14:46",
            "end_time": "4:46PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Unknown",
            "start_time": "17:53",
            "end_time": "7:23PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Unknown",
            "start_time": "22:03",
            "end_time": "12:03PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Unknown",
            "start_time": "22:48",
            "end_time": "11:03PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Jeffrey",
            "start_time": "9:30AM",
            "end_time": "11:30AM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Robert",
            "start_time": "12:15PM",
            "end_time": "1:45PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Mark",
            "start_time": "2:08PM",
            "end_time": "2:23PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Sandra",
            "start_time": "2:43PM",
            "end_time": "2:58PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Carol",
            "start_time": "6:15PM",
            "end_time": "6:30PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "James",
            "start_time": "8:00PM",
            "end_time": "10:00PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"North Beach\": {\n        \"Pacific Heights\": 8,\n        \"Chinatown\": 6,\n        \"Union Square\": 7,\n        \"Mission District\": 18,\n        \"Golden Gate Park\": 22,\n        \"Nob Hill\": 7\n    },\n    \"Pacific Heights\": {\n        \"North Beach\": 9,\n        \"Chinatown\": 11,\n        \"Union Square\": 12,\n        \"Mission District\": 15,\n        \"Golden Gate Park\": 15,\n        \"Nob Hill\": 8\n    },\n    \"Chinatown\": {\n        \"North Beach\": 3,\n        \"Pacific Heights\": 10,\n        \"Union Square\": 7,\n        \"Mission District\": 18,\n        \"Golden Gate Park\": 23,\n        \"Nob Hill\": 8\n    },\n    \"Union Square\": {\n        \"North Beach\": 10,\n        \"Pacific Heights\": 15,\n        \"Chinatown\": 7,\n        \"Mission District\": 14,\n        \"Golden Gate Park\": 22,\n        \"Nob Hill\": 9\n    },\n    \"Mission District\": {\n        \"North Beach\": 17,\n        \"Pacific Heights\": 16,\n        \"Chinatown\": 16,\n        \"Union Square\": 15,\n        \"Golden Gate Park\": 17,\n        \"Nob Hill\": 12\n    },\n    \"Golden Gate Park\": {\n        \"North Beach\": 24,\n        \"Pacific Heights\": 16,\n        \"Chinatown\": 23,\n        \"Union Square\": 22,\n        \"Mission District\": 17,\n        \"Nob Hill\": 20\n    },\n    \"Nob Hill\": {\n        \"North Beach\": 8,\n        \"Pacific Heights\": 8,\n        \"Chinatown\": 6,\n        \"Union Square\": 7,\n        \"Mission District\": 13,\n        \"Golden Gate Park\": 17\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"James\": {\"start_time\": \"20:00\", \"end_time\": \"22:00\", \"duration\": 120},\n    \"Robert\": {\"start_time\": \"12:15\", \"end_time\": \"16:45\", \"duration\": 90},\n    \"Jeffrey\": {\"start_time\": \"09:30\", \"end_time\": \"15:30\", \"duration\": 120},\n    \"Carol\": {\"start_time\": \"18:15\", \"end_time\": \"21:15\", \"duration\": 15},\n    \"Mark\": {\"start_time\": \"11:30\", \"end_time\": \"17:45\", \"duration\": 15},\n    \"Sandra\": {\"start_time\": \"08:00\", \"end_time\": \"15:30\", \"duration\": 15}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"North Beach\", \"time\": current_time})\n\n    # Meet Sandra\n    travel_time = calculate_travel_time(\"North Beach\", \"Nob Hill\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"North Beach\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Nob Hill\"})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"wait\", \"location\": \"Nob Hill\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"meet\", \"location\": \"Nob Hill\", \"duration\": 15, \"time\": current_time})\n\n    # Meet Mark\n    travel_time = calculate_travel_time(\"Nob Hill\", \"Golden Gate Park\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Nob Hill\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Golden Gate Park\"})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": 15, \"time\": current_time})\n\n    # Meet Jeffrey\n    travel_time = calculate_travel_time(\"Golden Gate Park\", \"Union Square\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Union Square\"})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"meet\", \"location\": \"Union Square\", \"duration\": 120, \"time\": current_time})\n\n    # Meet Robert\n    travel_time = calculate_travel_time(\"Union Square\", \"Chinatown\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Chinatown\"})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"wait\", \"location\": \"Chinatown\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"meet\", \"location\": \"Chinatown\", \"duration\": 90, \"time\": current_time})\n\n    # Meet James\n    travel_time = calculate_travel_time(\"Chinatown\", \"Pacific Heights\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Chinatown\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Pacific Heights\"})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"wait\", \"location\": \"Pacific Heights\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"meet\", \"location\": \"Pacific Heights\", \"duration\": 120, \"time\": current_time})\n\n    # Meet Carol\n    travel_time = calculate_travel_time(\"Pacific Heights\", \"Mission District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Pacific Heights\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Mission District\"})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"meet\", \"location\": \"Mission District\", \"duration\": 15, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_592"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Unknown",
            "start_time": "10:20",
            "end_time": "10:50AM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Laura",
            "start_time": "13:07",
            "end_time": "2:22PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Laura",
            "start_time": "12:15PM",
            "end_time": "1:30PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Anthony",
            "start_time": "1:47PM",
            "end_time": "2:17PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"The Castro\": {\n        \"Mission District\": 7,\n        \"Financial District\": 20\n    },\n    \"Mission District\": {\n        \"The Castro\": 7,\n        \"Financial District\": 17\n    },\n    \"Financial District\": {\n        \"The Castro\": 23,\n        \"Mission District\": 17\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Laura\": {\"start_time\": \"12:15\", \"end_time\": \"19:45\", \"duration\": 75},\n    \"Anthony\": {\"start_time\": \"12:30\", \"end_time\": \"14:45\", \"duration\": 30}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"The Castro\", \"time\": current_time})\n\n    # Meet Anthony\n    travel_time = calculate_travel_time(\"The Castro\", \"Financial District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"The Castro\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Financial District\"})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"meet\", \"location\": \"Financial District\", \"duration\": 30, \"time\": current_time})\n\n    # Meet Laura\n    travel_time = calculate_travel_time(\"Financial District\", \"Mission District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Mission District\"})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"meet\", \"location\": \"Mission District\", \"duration\": 75, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_144"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Unknown",
            "start_time": "9:40",
            "end_time": "9:55AM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Unknown",
            "start_time": "10:51",
            "end_time": "11:21AM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Stephanie",
            "start_time": "13:32",
            "end_time": "2:47PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "James",
            "start_time": "17:48",
            "end_time": "7:48PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Steven",
            "start_time": "18:55",
            "end_time": "7:25PM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Unknown",
            "start_time": "23:10",
            "end_time": "13:10PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Unknown",
            "start_time": "2:26",
            "end_time": "3:56AM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Unknown",
            "start_time": "4:15",
            "end_time": "5:00AM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Unknown",
            "start_time": "8:01",
            "end_time": "9:46AM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Unknown",
            "start_time": "9:12",
            "end_time": "9:42AM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Emily",
            "start_time": "11:15AM",
            "end_time": "11:30AM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Karen",
            "start_time": "11:45AM",
            "end_time": "12:15PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Stephanie",
            "start_time": "1:00PM",
            "end_time": "2:15PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "James",
            "start_time": "2:31PM",
            "end_time": "4:31PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Steven",
            "start_time": "4:38PM",
            "end_time": "5:08PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Matthew",
            "start_time": "5:29PM",
            "end_time": "6:14PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "William",
            "start_time": "6:33PM",
            "end_time": "8:03PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Brian",
            "start_time": "8:30PM",
            "end_time": "9:00PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"Richmond District\": {\n        \"The Castro\": 16,\n        \"Nob Hill\": 17,\n        \"Marina District\": 9,\n        \"Pacific Heights\": 10,\n        \"Haight-Ashbury\": 10,\n        \"Mission District\": 20,\n        \"Chinatown\": 20,\n        \"Russian Hill\": 13,\n        \"Alamo Square\": 13,\n        \"Bayview\": 27\n    },\n    \"The Castro\": {\n        \"Richmond District\": 16,\n        \"Nob Hill\": 16,\n        \"Marina District\": 21,\n        \"Pacific Heights\": 16,\n        \"Haight-Ashbury\": 6,\n        \"Mission District\": 7,\n        \"Chinatown\": 22,\n        \"Russian Hill\": 18,\n        \"Alamo Square\": 8,\n        \"Bayview\": 19\n    },\n    \"Nob Hill\": {\n        \"Richmond District\": 17,\n        \"The Castro\": 17,\n        \"Marina District\": 11,\n        \"Pacific Heights\": 8,\n        \"Haight-Ashbury\": 13,\n        \"Mission District\": 13,\n        \"Chinatown\": 6,\n        \"Russian Hill\": 5,\n        \"Alamo Square\": 11,\n        \"Bayview\": 19\n    },\n    \"Marina District\": {\n        \"Richmond District\": 11,\n        \"The Castro\": 22,\n        \"Nob Hill\": 12,\n        \"Pacific Heights\": 7,\n        \"Haight-Ashbury\": 16,\n        \"Mission District\": 20,\n        \"Chinatown\": 15,\n        \"Russian Hill\": 8,\n        \"Alamo Square\": 15,\n        \"Bayview\": 27\n    },\n    \"Pacific Heights\": {\n        \"Richmond District\": 12,\n        \"The Castro\": 16,\n        \"Nob Hill\": 8,\n        \"Marina District\": 6,\n        \"Haight-Ashbury\": 11,\n        \"Mission District\": 15,\n        \"Chinatown\": 11,\n        \"Russian Hill\": 7,\n        \"Alamo Square\": 10,\n        \"Bayview\": 22\n    },\n    \"Haight-Ashbury\": {\n        \"Richmond District\": 10,\n        \"The Castro\": 6,\n        \"Nob Hill\": 15,\n        \"Marina District\": 17,\n        \"Pacific Heights\": 12,\n        \"Mission District\": 11,\n        \"Chinatown\": 19,\n        \"Russian Hill\": 17,\n        \"Alamo Square\": 5,\n        \"Bayview\": 18\n    },\n    \"Mission District\": {\n        \"Richmond District\": 20,\n        \"The Castro\": 7,\n        \"Nob Hill\": 12,\n        \"Marina District\": 19,\n        \"Pacific Heights\": 16,\n        \"Haight-Ashbury\": 12,\n        \"Chinatown\": 16,\n        \"Russian Hill\": 15,\n        \"Alamo Square\": 11,\n        \"Bayview\": 14\n    },\n    \"Chinatown\": {\n        \"Richmond District\": 20,\n        \"The Castro\": 22,\n        \"Nob Hill\": 9,\n        \"Marina District\": 12,\n        \"Pacific Heights\": 10,\n        \"Haight-Ashbury\": 19,\n        \"Mission District\": 17,\n        \"Russian Hill\": 7,\n        \"Alamo Square\": 17,\n        \"Bayview\": 20\n    },\n    \"Russian Hill\": {\n        \"Richmond District\": 14,\n        \"The Castro\": 21,\n        \"Nob Hill\": 5,\n        \"Marina District\": 7,\n        \"Pacific Heights\": 7,\n        \"Haight-Ashbury\": 17,\n        \"Mission District\": 16,\n        \"Chinatown\": 9,\n        \"Alamo Square\": 15,\n        \"Bayview\": 23\n    },\n    \"Alamo Square\": {\n        \"Richmond District\": 11,\n        \"The Castro\": 8,\n        \"Nob Hill\": 11,\n        \"Marina District\": 15,\n        \"Pacific Heights\": 10,\n        \"Haight-Ashbury\": 5,\n        \"Mission District\": 10,\n        \"Chinatown\": 15,\n        \"Russian Hill\": 13,\n        \"Bayview\": 16\n    },\n    \"Bayview\": {\n        \"Richmond District\": 25,\n        \"The Castro\": 19,\n        \"Nob Hill\": 20,\n        \"Marina District\": 27,\n        \"Pacific Heights\": 23,\n        \"Haight-Ashbury\": 19,\n        \"Mission District\": 13,\n        \"Chinatown\": 19,\n        \"Russian Hill\": 23,\n        \"Alamo Square\": 16\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Matthew\": {\"start_time\": \"16:30\", \"end_time\": \"20:00\", \"duration\": 45},\n    \"Rebecca\": {\"start_time\": \"15:15\", \"end_time\": \"19:15\", \"duration\": 105},\n    \"Brian\": {\"start_time\": \"14:15\", \"end_time\": \"22:00\", \"duration\": 30},\n    \"Emily\": {\"start_time\": \"11:15\", \"end_time\": \"19:45\", \"duration\": 15},\n    \"Karen\": {\"start_time\": \"11:45\", \"end_time\": \"17:30\", \"duration\": 30},\n    \"Stephanie\": {\"start_time\": \"13:00\", \"end_time\": \"15:45\", \"duration\": 75},\n    \"James\": {\"start_time\": \"14:30\", \"end_time\": \"19:00\", \"duration\": 120},\n    \"Steven\": {\"start_time\": \"14:00\", \"end_time\": \"20:00\", \"duration\": 30},\n    \"Elizabeth\": {\"start_time\": \"13:00\", \"end_time\": \"17:15\", \"duration\": 120},\n    \"William\": {\"start_time\": \"18:15\", \"end_time\": \"20:15\", \"duration\": 90}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"Richmond District\", \"time\": current_time})\n\n    # Meet Emily\n    travel_time = calculate_travel_time(\"Richmond District\", \"Pacific Heights\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Pacific Heights\"})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"wait\", \"location\": \"Pacific Heights\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"meet\", \"location\": \"Pacific Heights\", \"duration\": 15, \"time\": current_time})\n\n    # Meet Karen\n    travel_time = calculate_travel_time(\"Pacific Heights\", \"Haight-Ashbury\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Pacific Heights\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Haight-Ashbury\"})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"wait\", \"location\": \"Haight-Ashbury\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"meet\", \"location\": \"Haight-Ashbury\", \"duration\": 30, \"time\": current_time})\n\n    # Meet Stephanie\n    travel_time = calculate_travel_time(\"Haight-Ashbury\", \"Mission District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Mission District\"})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"meet\", \"location\": \"Mission District\", \"duration\": 75, \"time\": current_time})\n\n    # Meet James\n    travel_time = calculate_travel_time(\"Mission District\", \"Chinatown\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Mission District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Chinatown\"})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"wait\", \"location\": \"Chinatown\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"meet\", \"location\": \"Chinatown\", \"duration\": 120, \"time\": current_time})\n\n    # Meet Steven\n    travel_time = calculate_travel_time(\"Chinatown\", \"Russian Hill\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Chinatown\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Russian Hill\"})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"meet\", \"location\": \"Russian Hill\", \"duration\": 30, \"time\": current_time})\n\n    # Meet Elizabeth\n    travel_time = calculate_travel_time(\"Russian Hill\", \"Alamo Square\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Russian Hill\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Alamo Square\"})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"wait\", \"location\": \"Alamo Square\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"meet\", \"location\": \"Alamo Square\", \"duration\": 120, \"time\": current_time})\n\n    # Meet William\n    travel_time = calculate_travel_time(\"Alamo Square\", \"Bayview\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Alamo Square\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Bayview\"})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"wait\", \"location\": \"Bayview\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"meet\", \"location\": \"Bayview\", \"duration\": 90, \"time\": current_time})\n\n    # Meet Matthew\n    travel_time = calculate_travel_time(\"Bayview\", \"The Castro\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_time, \"time\": current_time, \"to\": \"The Castro\"})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"wait\", \"location\": \"The Castro\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"meet\", \"location\": \"The Castro\", \"duration\": 45, \"time\": current_time})\n\n    # Meet Rebecca\n    travel_time = calculate_travel_time(\"The Castro\", \"Nob Hill\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"The Castro\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Nob Hill\"})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"wait\", \"location\": \"Nob Hill\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"meet\", \"location\": \"Nob Hill\", \"duration\": 105, \"time\": current_time})\n\n    # Meet Brian\n    travel_time = calculate_travel_time(\"Nob Hill\", \"Marina District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Nob Hill\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Marina District\"})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"wait\", \"location\": \"Marina District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"meet\", \"location\": \"Marina District\", \"duration\": 30, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_900"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Kenneth",
            "start_time": "10:18",
            "end_time": "10:48AM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Unknown",
            "start_time": "12:54",
            "end_time": "2:09PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Kimberly",
            "start_time": "15:29",
            "end_time": "4:44PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Steven",
            "start_time": "17:34",
            "end_time": "6:34PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Unknown",
            "start_time": "20:19",
            "end_time": "9:34PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Unknown",
            "start_time": "22:05",
            "end_time": "10:50PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Unknown",
            "start_time": "1:18",
            "end_time": "2:48AM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Unknown",
            "start_time": "3:23",
            "end_time": "4:23AM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Jason",
            "start_time": "9:21AM",
            "end_time": "10:36AM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Kenneth",
            "start_time": "10:39AM",
            "end_time": "11:09AM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Mark",
            "start_time": "11:18AM",
            "end_time": "12:33PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Kimberly",
            "start_time": "12:47PM",
            "end_time": "2:02PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Jessica",
            "start_time": "2:12PM",
            "end_time": "3:42PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Brian",
            "start_time": "3:47PM",
            "end_time": "4:47PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Stephanie",
            "start_time": "4:57PM",
            "end_time": "6:42PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Steven",
            "start_time": "6:51PM",
            "end_time": "7:51PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Karen",
            "start_time": "9:00PM",
            "end_time": "9:45PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"Presidio\": {\n        \"Haight-Ashbury\": 15,\n        \"Nob Hill\": 18,\n        \"Russian Hill\": 14,\n        \"North Beach\": 18,\n        \"Chinatown\": 21,\n        \"Union Square\": 22,\n        \"Embarcadero\": 20,\n        \"Financial District\": 23,\n        \"Marina District\": 11\n    },\n    \"Haight-Ashbury\": {\n        \"Presidio\": 15,\n        \"Nob Hill\": 13,\n        \"Russian Hill\": 17,\n        \"North Beach\": 19,\n        \"Chinatown\": 19,\n        \"Union Square\": 19,\n        \"Embarcadero\": 20,\n        \"Financial District\": 21,\n        \"Marina District\": 17\n    },\n    \"Nob Hill\": {\n        \"Presidio\": 17,\n        \"Haight-Ashbury\": 13,\n        \"Russian Hill\": 5,\n        \"North Beach\": 8,\n        \"Chinatown\": 6,\n        \"Union Square\": 7,\n        \"Embarcadero\": 9,\n        \"Financial District\": 9,\n        \"Marina District\": 11\n    },\n    \"Russian Hill\": {\n        \"Presidio\": 14,\n        \"Haight-Ashbury\": 17,\n        \"Nob Hill\": 5,\n        \"North Beach\": 5,\n        \"Chinatown\": 9,\n        \"Union Square\": 10,\n        \"Embarcadero\": 8,\n        \"Financial District\": 11,\n        \"Marina District\": 7\n    },\n    \"North Beach\": {\n        \"Presidio\": 17,\n        \"Haight-Ashbury\": 18,\n        \"Nob Hill\": 7,\n        \"Russian Hill\": 4,\n        \"Chinatown\": 6,\n        \"Union Square\": 7,\n        \"Embarcadero\": 6,\n        \"Financial District\": 8,\n        \"Marina District\": 9\n    },\n    \"Chinatown\": {\n        \"Presidio\": 19,\n        \"Haight-Ashbury\": 19,\n        \"Nob Hill\": 9,\n        \"Russian Hill\": 7,\n        \"North Beach\": 3,\n        \"Union Square\": 7,\n        \"Embarcadero\": 5,\n        \"Financial District\": 5,\n        \"Marina District\": 12\n    },\n    \"Union Square\": {\n        \"Presidio\": 24,\n        \"Haight-Ashbury\": 18,\n        \"Nob Hill\": 9,\n        \"Russian Hill\": 13,\n        \"North Beach\": 10,\n        \"Chinatown\": 7,\n        \"Embarcadero\": 11,\n        \"Financial District\": 9,\n        \"Marina District\": 16\n    },\n    \"Embarcadero\": {\n        \"Presidio\": 20,\n        \"Haight-Ashbury\": 21,\n        \"Nob Hill\": 10,\n        \"Russian Hill\": 8,\n        \"North Beach\": 5,\n        \"Chinatown\": 7,\n        \"Union Square\": 10,\n        \"Financial District\": 5,\n        \"Marina District\": 12\n    },\n    \"Financial District\": {\n        \"Presidio\": 22,\n        \"Haight-Ashbury\": 19,\n        \"Nob Hill\": 8,\n        \"Russian Hill\": 11,\n        \"North Beach\": 7,\n        \"Chinatown\": 5,\n        \"Union Square\": 9,\n        \"Embarcadero\": 4,\n        \"Marina District\": 15\n    },\n    \"Marina District\": {\n        \"Presidio\": 10,\n        \"Haight-Ashbury\": 16,\n        \"Nob Hill\": 12,\n        \"Russian Hill\": 8,\n        \"North Beach\": 11,\n        \"Chinatown\": 15,\n        \"Union Square\": 16,\n        \"Embarcadero\": 14,\n        \"Financial District\": 17\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Karen\": {\"start_time\": \"21:00\", \"end_time\": \"21:45\", \"duration\": 45},\n    \"Jessica\": {\"start_time\": \"13:45\", \"end_time\": \"21:00\", \"duration\": 90},\n    \"Brian\": {\"start_time\": \"15:30\", \"end_time\": \"21:45\", \"duration\": 60},\n    \"Kenneth\": {\"start_time\": \"09:45\", \"end_time\": \"21:00\", \"duration\": 30},\n    \"Jason\": {\"start_time\": \"08:15\", \"end_time\": \"11:45\", \"duration\": 75},\n    \"Stephanie\": {\"start_time\": \"14:45\", \"end_time\": \"18:45\", \"duration\": 105},\n    \"Kimberly\": {\"start_time\": \"09:45\", \"end_time\": \"19:30\", \"duration\": 75},\n    \"Steven\": {\"start_time\": \"07:15\", \"end_time\": \"21:15\", \"duration\": 60},\n    \"Mark\": {\"start_time\": \"10:15\", \"end_time\": \"13:00\", \"duration\": 75}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"Presidio\", \"time\": current_time})\n\n    # Meet Kenneth\n    travel_time = calculate_travel_time(\"Presidio\", \"North Beach\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": current_time, \"to\": \"North Beach\"})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"wait\", \"location\": \"North Beach\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"meet\", \"location\": \"North Beach\", \"duration\": 30, \"time\": current_time})\n\n    # Meet Jason\n    travel_time = calculate_travel_time(\"North Beach\", \"Chinatown\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"North Beach\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Chinatown\"})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"wait\", \"location\": \"Chinatown\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"meet\", \"location\": \"Chinatown\", \"duration\": 75, \"time\": current_time})\n\n    # Meet Kimberly\n    travel_time = calculate_travel_time(\"Chinatown\", \"Embarcadero\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Chinatown\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Embarcadero\"})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"wait\", \"location\": \"Embarcadero\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"meet\", \"location\": \"Embarcadero\", \"duration\": 75, \"time\": current_time})\n\n    # Meet Steven\n    travel_time = calculate_travel_time(\"Embarcadero\", \"Financial District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Embarcadero\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Financial District\"})\n    current_time = calculate_meeting_time(current_time, 60)\n    schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 60)\n    schedule.append({\"action\": \"meet\", \"location\": \"Financial District\", \"duration\": 60, \"time\": current_time})\n\n    # Meet Mark\n    travel_time = calculate_travel_time(\"Financial District\", \"Marina District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Marina District\"})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"wait\", \"location\": \"Marina District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"meet\", \"location\": \"Marina District\", \"duration\": 75, \"time\": current_time})\n\n    # Meet Karen\n    travel_time = calculate_travel_time(\"Marina District\", \"Haight-Ashbury\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Haight-Ashbury\"})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"wait\", \"location\": \"Haight-Ashbury\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"meet\", \"location\": \"Haight-Ashbury\", \"duration\": 45, \"time\": current_time})\n\n    # Meet Jessica\n    travel_time = calculate_travel_time(\"Haight-Ashbury\", \"Nob Hill\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Nob Hill\"})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"wait\", \"location\": \"Nob Hill\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"meet\", \"location\": \"Nob Hill\", \"duration\": 90, \"time\": current_time})\n\n    # Meet Brian\n    travel_time = calculate_travel_time(\"Nob Hill\", \"Russian Hill\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Nob Hill\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Russian Hill\"})\n    current_time = calculate_meeting_time(current_time, 60)\n    schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 60)\n    schedule.append({\"action\": \"meet\", \"location\": \"Russian Hill\", \"duration\": 60, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_872"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Unknown",
            "start_time": "10:31",
            "end_time": "11:01AM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Unknown",
            "start_time": "13:15",
            "end_time": "2:30PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Unknown",
            "start_time": "14:52",
            "end_time": "3:37PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Paul",
            "start_time": "17:00",
            "end_time": "6:00PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Unknown",
            "start_time": "21:07",
            "end_time": "11:07PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Unknown",
            "start_time": "23:44",
            "end_time": "12:59PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Unknown",
            "start_time": "1:36",
            "end_time": "2:21AM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Paul",
            "start_time": "4:15PM",
            "end_time": "5:15PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Karen",
            "start_time": "5:32PM",
            "end_time": "6:17PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Matthew",
            "start_time": "6:35PM",
            "end_time": "7:50PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Jeffrey",
            "start_time": "8:00PM",
            "end_time": "8:45PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Nancy",
            "start_time": "8:56PM",
            "end_time": "9:26PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"Bayview\": {\n        \"Nob Hill\": 20,\n        \"Union Square\": 17,\n        \"Chinatown\": 18,\n        \"The Castro\": 20,\n        \"Presidio\": 31,\n        \"Pacific Heights\": 23,\n        \"Russian Hill\": 23\n    },\n    \"Nob Hill\": {\n        \"Bayview\": 19,\n        \"Union Square\": 7,\n        \"Chinatown\": 6,\n        \"The Castro\": 17,\n        \"Presidio\": 17,\n        \"Pacific Heights\": 8,\n        \"Russian Hill\": 5\n    },\n    \"Union Square\": {\n        \"Bayview\": 15,\n        \"Nob Hill\": 9,\n        \"Chinatown\": 7,\n        \"The Castro\": 19,\n        \"Presidio\": 24,\n        \"Pacific Heights\": 15,\n        \"Russian Hill\": 13\n    },\n    \"Chinatown\": {\n        \"Bayview\": 22,\n        \"Nob Hill\": 8,\n        \"Union Square\": 7,\n        \"The Castro\": 22,\n        \"Presidio\": 19,\n        \"Pacific Heights\": 10,\n        \"Russian Hill\": 7\n    },\n    \"The Castro\": {\n        \"Bayview\": 19,\n        \"Nob Hill\": 16,\n        \"Union Square\": 19,\n        \"Chinatown\": 20,\n        \"Presidio\": 20,\n        \"Pacific Heights\": 16,\n        \"Russian Hill\": 18\n    },\n    \"Presidio\": {\n        \"Bayview\": 31,\n        \"Nob Hill\": 18,\n        \"Union Square\": 22,\n        \"Chinatown\": 21,\n        \"The Castro\": 21,\n        \"Pacific Heights\": 11,\n        \"Russian Hill\": 14\n    },\n    \"Pacific Heights\": {\n        \"Bayview\": 22,\n        \"Nob Hill\": 8,\n        \"Union Square\": 12,\n        \"Chinatown\": 11,\n        \"The Castro\": 16,\n        \"Presidio\": 11,\n        \"Russian Hill\": 7\n    },\n    \"Russian Hill\": {\n        \"Bayview\": 23,\n        \"Nob Hill\": 5,\n        \"Union Square\": 11,\n        \"Chinatown\": 9,\n        \"The Castro\": 21,\n        \"Presidio\": 14,\n        \"Pacific Heights\": 7\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Paul\": {\"start_time\": \"16:15\", \"end_time\": \"21:15\", \"duration\": 60},\n    \"Carol\": {\"start_time\": \"18:00\", \"end_time\": \"20:15\", \"duration\": 120},\n    \"Patricia\": {\"start_time\": \"20:00\", \"end_time\": \"21:30\", \"duration\": 75},\n    \"Karen\": {\"start_time\": \"17:00\", \"end_time\": \"19:00\", \"duration\": 45},\n    \"Nancy\": {\"start_time\": \"11:45\", \"end_time\": \"22:00\", \"duration\": 30},\n    \"Jeffrey\": {\"start_time\": \"20:00\", \"end_time\": \"20:45\", \"duration\": 45},\n    \"Matthew\": {\"start_time\": \"15:45\", \"end_time\": \"21:45\", \"duration\": 75}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"Bayview\", \"time\": current_time})\n\n    # Meet Nancy\n    travel_time = calculate_travel_time(\"Bayview\", \"Presidio\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Presidio\"})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"wait\", \"location\": \"Presidio\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"meet\", \"location\": \"Presidio\", \"duration\": 30, \"time\": current_time})\n\n    # Meet Matthew\n    travel_time = calculate_travel_time(\"Presidio\", \"Russian Hill\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Russian Hill\"})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"meet\", \"location\": \"Russian Hill\", \"duration\": 75, \"time\": current_time})\n\n    # Meet Jeffrey\n    travel_time = calculate_travel_time(\"Russian Hill\", \"Pacific Heights\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Russian Hill\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Pacific Heights\"})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"wait\", \"location\": \"Pacific Heights\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"meet\", \"location\": \"Pacific Heights\", \"duration\": 45, \"time\": current_time})\n\n    # Meet Paul\n    travel_time = calculate_travel_time(\"Pacific Heights\", \"Nob Hill\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Pacific Heights\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Nob Hill\"})\n    current_time = calculate_meeting_time(current_time, 60)\n    schedule.append({\"action\": \"wait\", \"location\": \"Nob Hill\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 60)\n    schedule.append({\"action\": \"meet\", \"location\": \"Nob Hill\", \"duration\": 60, \"time\": current_time})\n\n    # Meet Carol\n    travel_time = calculate_travel_time(\"Nob Hill\", \"Union Square\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Nob Hill\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Union Square\"})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"meet\", \"location\": \"Union Square\", \"duration\": 120, \"time\": current_time})\n\n    # Meet Patricia\n    travel_time = calculate_travel_time(\"Union Square\", \"Chinatown\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Chinatown\"})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"wait\", \"location\": \"Chinatown\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"meet\", \"location\": \"Chinatown\", \"duration\": 75, \"time\": current_time})\n\n    # Meet Karen\n    travel_time = calculate_travel_time(\"Chinatown\", \"The Castro\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Chinatown\", \"duration\": travel_time, \"time\": current_time, \"to\": \"The Castro\"})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"wait\", \"location\": \"The Castro\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"meet\", \"location\": \"The Castro\", \"duration\": 45, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_695"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Timothy",
            "start_time": "12:40",
            "end_time": "2:25PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Unknown",
            "start_time": "14:58",
            "end_time": "3:58PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Joseph",
            "start_time": "17:12",
            "end_time": "6:12PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Timothy",
            "start_time": "12:00PM",
            "end_time": "1:45PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Mark",
            "start_time": "6:45PM",
            "end_time": "7:45PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Joseph",
            "start_time": "7:59PM",
            "end_time": "8:59PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"Golden Gate Park\": {\n        \"Alamo Square\": 10,\n        \"Presidio\": 11,\n        \"Russian Hill\": 19\n    },\n    \"Alamo Square\": {\n        \"Golden Gate Park\": 9,\n        \"Presidio\": 18,\n        \"Russian Hill\": 13\n    },\n    \"Presidio\": {\n        \"Golden Gate Park\": 12,\n        \"Alamo Square\": 18,\n        \"Russian Hill\": 14\n    },\n    \"Russian Hill\": {\n        \"Golden Gate Park\": 21,\n        \"Alamo Square\": 15,\n        \"Presidio\": 14\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Timothy\": {\"start_time\": \"12:00\", \"end_time\": \"16:15\", \"duration\": 105},\n    \"Mark\": {\"start_time\": \"18:45\", \"end_time\": \"21:00\", \"duration\": 60},\n    \"Joseph\": {\"start_time\": \"16:45\", \"end_time\": \"21:30\", \"duration\": 60}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"Golden Gate Park\", \"time\": current_time})\n\n    # Meet Timothy\n    travel_time = calculate_travel_time(\"Golden Gate Park\", \"Alamo Square\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Alamo Square\"})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"wait\", \"location\": \"Alamo Square\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"meet\", \"location\": \"Alamo Square\", \"duration\": 105, \"time\": current_time})\n\n    # Meet Mark\n    travel_time = calculate_travel_time(\"Alamo Square\", \"Presidio\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Alamo Square\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Presidio\"})\n    current_time = calculate_meeting_time(current_time, 60)\n    schedule.append({\"action\": \"wait\", \"location\": \"Presidio\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 60)\n    schedule.append({\"action\": \"meet\", \"location\": \"Presidio\", \"duration\": 60, \"time\": current_time})\n\n    # Meet Joseph\n    travel_time = calculate_travel_time(\"Presidio\", \"Russian Hill\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Russian Hill\"})\n    current_time = calculate_meeting_time(current_time, 60)\n    schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 60)\n    schedule.append({\"action\": \"meet\", \"location\": \"Russian Hill\", \"duration\": 60, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_268"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Unknown",
            "start_time": "12:11",
            "end_time": "1:41PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Kenneth",
            "start_time": "2:15PM",
            "end_time": "3:45PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"Fisherman's Wharf\": {\n        \"Nob Hill\": 11\n    },\n    \"Nob Hill\": {\n        \"Fisherman's Wharf\": 11\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Kenneth\": {\"start_time\": \"14:15\", \"end_time\": \"19:45\", \"duration\": 90}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"Fisherman's Wharf\", \"time\": current_time})\n\n    # Meet Kenneth\n    travel_time = calculate_travel_time(\"Fisherman's Wharf\", \"Nob Hill\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Fisherman's Wharf\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Nob Hill\"})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"wait\", \"location\": \"Nob Hill\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"meet\", \"location\": \"Nob Hill\", \"duration\": 90, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_6"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Unknown",
            "start_time": "12:47",
            "end_time": "2:32PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Steven",
            "start_time": "14:35",
            "end_time": "3:20PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Unknown",
            "start_time": "15:40",
            "end_time": "4:10PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Unknown",
            "start_time": "16:22",
            "end_time": "4:37PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "John",
            "start_time": "9:08AM",
            "end_time": "9:23AM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Steven",
            "start_time": "1:30PM",
            "end_time": "2:15PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Barbara",
            "start_time": "6:00PM",
            "end_time": "6:30PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"Nob Hill\": {\n        \"Presidio\": 17,\n        \"North Beach\": 8,\n        \"Fisherman's Wharf\": 11,\n        \"Pacific Heights\": 8\n    },\n    \"Presidio\": {\n        \"Nob Hill\": 18,\n        \"North Beach\": 18,\n        \"Fisherman's Wharf\": 19,\n        \"Pacific Heights\": 11\n    },\n    \"North Beach\": {\n        \"Nob Hill\": 7,\n        \"Presidio\": 17,\n        \"Fisherman's Wharf\": 5,\n        \"Pacific Heights\": 8\n    },\n    \"Fisherman's Wharf\": {\n        \"Nob Hill\": 11,\n        \"Presidio\": 17,\n        \"North Beach\": 6,\n        \"Pacific Heights\": 12\n    },\n    \"Pacific Heights\": {\n        \"Nob Hill\": 8,\n        \"Presidio\": 11,\n        \"North Beach\": 9,\n        \"Fisherman's Wharf\": 13\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Jeffrey\": {\"start_time\": \"08:00\", \"end_time\": \"10:00\", \"duration\": 105},\n    \"Steven\": {\"start_time\": \"13:30\", \"end_time\": \"22:00\", \"duration\": 45},\n    \"Barbara\": {\"start_time\": \"18:00\", \"end_time\": \"21:30\", \"duration\": 30},\n    \"John\": {\"start_time\": \"09:00\", \"end_time\": \"13:30\", \"duration\": 15}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"Nob Hill\", \"time\": current_time})\n\n    # Meet Jeffrey\n    travel_time = calculate_travel_time(\"Nob Hill\", \"Presidio\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Nob Hill\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Presidio\"})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"wait\", \"location\": \"Presidio\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"meet\", \"location\": \"Presidio\", \"duration\": 105, \"time\": current_time})\n\n    # Meet Steven\n    travel_time = calculate_travel_time(\"Presidio\", \"North Beach\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": current_time, \"to\": \"North Beach\"})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"wait\", \"location\": \"North Beach\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"meet\", \"location\": \"North Beach\", \"duration\": 45, \"time\": current_time})\n\n    # Meet Barbara\n    travel_time = calculate_travel_time(\"North Beach\", \"Fisherman's Wharf\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"North Beach\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Fisherman's Wharf\"})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"wait\", \"location\": \"Fisherman's Wharf\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"meet\", \"location\": \"Fisherman's Wharf\", \"duration\": 30, \"time\": current_time})\n\n    # Meet John\n    travel_time = calculate_travel_time(\"Fisherman's Wharf\", \"Pacific Heights\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Fisherman's Wharf\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Pacific Heights\"})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"wait\", \"location\": \"Pacific Heights\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"meet\", \"location\": \"Pacific Heights\", \"duration\": 15, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_385"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Elizabeth",
            "start_time": "12:49",
            "end_time": "2:34PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Brian",
            "start_time": "13:59",
            "end_time": "2:29PM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Unknown",
            "start_time": "16:48",
            "end_time": "6:03PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Unknown",
            "start_time": "19:33",
            "end_time": "8:48PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Unknown",
            "start_time": "23:55",
            "end_time": "13:55PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Unknown",
            "start_time": "1:02",
            "end_time": "1:32AM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Unknown",
            "start_time": "5:21",
            "end_time": "7:21AM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Unknown",
            "start_time": "8:56",
            "end_time": "10:41AM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Unknown",
            "start_time": "12:07",
            "end_time": "1:37PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Sandra",
            "start_time": "9:20AM",
            "end_time": "9:50AM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Brian",
            "start_time": "10:15AM",
            "end_time": "10:45AM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Stephanie",
            "start_time": "11:03AM",
            "end_time": "12:18PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Helen",
            "start_time": "12:40PM",
            "end_time": "2:40PM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Laura",
            "start_time": "2:49PM",
            "end_time": "4:04PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Mary",
            "start_time": "4:45PM",
            "end_time": "6:45PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Deborah",
            "start_time": "7:00PM",
            "end_time": "8:45PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"Mission District\": {\n        \"Alamo Square\": 11,\n        \"Presidio\": 25,\n        \"Russian Hill\": 15,\n        \"North Beach\": 17,\n        \"Golden Gate Park\": 17,\n        \"Richmond District\": 20,\n        \"Embarcadero\": 19,\n        \"Financial District\": 15,\n        \"Marina District\": 19\n    },\n    \"Alamo Square\": {\n        \"Mission District\": 10,\n        \"Presidio\": 17,\n        \"Russian Hill\": 13,\n        \"North Beach\": 15,\n        \"Golden Gate Park\": 9,\n        \"Richmond District\": 11,\n        \"Embarcadero\": 16,\n        \"Financial District\": 17,\n        \"Marina District\": 15\n    },\n    \"Presidio\": {\n        \"Mission District\": 26,\n        \"Alamo Square\": 19,\n        \"Russian Hill\": 14,\n        \"North Beach\": 18,\n        \"Golden Gate Park\": 12,\n        \"Richmond District\": 7,\n        \"Embarcadero\": 20,\n        \"Financial District\": 23,\n        \"Marina District\": 11\n    },\n    \"Russian Hill\": {\n        \"Mission District\": 16,\n        \"Alamo Square\": 15,\n        \"Presidio\": 14,\n        \"North Beach\": 5,\n        \"Golden Gate Park\": 21,\n        \"Richmond District\": 14,\n        \"Embarcadero\": 8,\n        \"Financial District\": 11,\n        \"Marina District\": 7\n    },\n    \"North Beach\": {\n        \"Mission District\": 18,\n        \"Alamo Square\": 16,\n        \"Presidio\": 17,\n        \"Russian Hill\": 4,\n        \"Golden Gate Park\": 22,\n        \"Richmond District\": 18,\n        \"Embarcadero\": 6,\n        \"Financial District\": 8,\n        \"Marina District\": 9\n    },\n    \"Golden Gate Park\": {\n        \"Mission District\": 17,\n        \"Alamo Square\": 9,\n        \"Presidio\": 11,\n        \"Russian Hill\": 19,\n        \"North Beach\": 23,\n        \"Richmond District\": 7,\n        \"Embarcadero\": 25,\n        \"Financial District\": 26,\n        \"Marina District\": 16\n    },\n    \"Richmond District\": {\n        \"Mission District\": 20,\n        \"Alamo Square\": 13,\n        \"Presidio\": 7,\n        \"Russian Hill\": 13,\n        \"North Beach\": 17,\n        \"Golden Gate Park\": 9,\n        \"Embarcadero\": 19,\n        \"Financial District\": 22,\n        \"Marina District\": 9\n    },\n    \"Embarcadero\": {\n        \"Mission District\": 20,\n        \"Alamo Square\": 19,\n        \"Presidio\": 20,\n        \"Russian Hill\": 8,\n        \"North Beach\": 5,\n        \"Golden Gate Park\": 25,\n        \"Richmond District\": 21,\n        \"Financial District\": 5,\n        \"Marina District\": 12\n    },\n    \"Financial District\": {\n        \"Mission District\": 17,\n        \"Alamo Square\": 17,\n        \"Presidio\": 22,\n        \"Russian Hill\": 11,\n        \"North Beach\": 7,\n        \"Golden Gate Park\": 23,\n        \"Richmond District\": 21,\n        \"Embarcadero\": 4,\n        \"Marina District\": 15\n    },\n    \"Marina District\": {\n        \"Mission District\": 20,\n        \"Alamo Square\": 15,\n        \"Presidio\": 10,\n        \"Russian Hill\": 8,\n        \"North Beach\": 11,\n        \"Golden Gate Park\": 18,\n        \"Richmond District\": 11,\n        \"Embarcadero\": 14,\n        \"Financial District\": 17\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Laura\": {\"start_time\": \"14:30\", \"end_time\": \"16:15\", \"duration\": 75},\n    \"Brian\": {\"start_time\": \"10:15\", \"end_time\": \"17:00\", \"duration\": 30},\n    \"Karen\": {\"start_time\": \"18:00\", \"end_time\": \"20:15\", \"duration\": 90},\n    \"Stephanie\": {\"start_time\": \"10:15\", \"end_time\": \"16:00\", \"duration\": 75},\n    \"Helen\": {\"start_time\": \"11:30\", \"end_time\": \"21:45\", \"duration\": 120},\n    \"Sandra\": {\"start_time\": \"08:00\", \"end_time\": \"15:15\", \"duration\": 30},\n    \"Mary\": {\"start_time\": \"16:45\", \"end_time\": \"18:45\", \"duration\": 120},\n    \"Deborah\": {\"start_time\": \"19:00\", \"end_time\": \"20:45\", \"duration\": 105},\n    \"Elizabeth\": {\"start_time\": \"08:30\", \"end_time\": \"13:15\", \"duration\": 105}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"Mission District\", \"time\": current_time})\n\n    # Meet Elizabeth\n    travel_time = calculate_travel_time(\"Mission District\", \"Marina District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Mission District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Marina District\"})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"wait\", \"location\": \"Marina District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"meet\", \"location\": \"Marina District\", \"duration\": 105, \"time\": current_time})\n\n    # Meet Brian\n    travel_time = calculate_travel_time(\"Marina District\", \"Presidio\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Presidio\"})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"wait\", \"location\": \"Presidio\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"meet\", \"location\": \"Presidio\", \"duration\": 30, \"time\": current_time})\n\n    # Meet Laura\n    travel_time = calculate_travel_time(\"Presidio\", \"Alamo Square\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Alamo Square\"})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"wait\", \"location\": \"Alamo Square\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"meet\", \"location\": \"Alamo Square\", \"duration\": 75, \"time\": current_time})\n\n    # Meet Stephanie\n    travel_time = calculate_travel_time(\"Alamo Square\", \"North Beach\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Alamo Square\", \"duration\": travel_time, \"time\": current_time, \"to\": \"North Beach\"})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"wait\", \"location\": \"North Beach\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"meet\", \"location\": \"North Beach\", \"duration\": 75, \"time\": current_time})\n\n    # Meet Helen\n    travel_time = calculate_travel_time(\"North Beach\", \"Golden Gate Park\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"North Beach\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Golden Gate Park\"})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": 120, \"time\": current_time})\n\n    # Meet Sandra\n    travel_time = calculate_travel_time(\"Golden Gate Park\", \"Richmond District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Richmond District\"})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"meet\", \"location\": \"Richmond District\", \"duration\": 30, \"time\": current_time})\n\n    # Meet Mary\n    travel_time = calculate_travel_time(\"Richmond District\", \"Embarcadero\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Embarcadero\"})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"wait\", \"location\": \"Embarcadero\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"meet\", \"location\": \"Embarcadero\", \"duration\": 120, \"time\": current_time})\n\n    # Meet Deborah\n    travel_time = calculate_travel_time(\"Embarcadero\", \"Financial District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Embarcadero\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Financial District\"})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"meet\", \"location\": \"Financial District\", \"duration\": 105, \"time\": current_time})\n\n    # Meet Karen\n    travel_time = calculate_travel_time(\"Financial District\", \"Russian Hill\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Russian Hill\"})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"meet\", \"location\": \"Russian Hill\", \"duration\": 90, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_862"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Lisa",
            "start_time": "10:40",
            "end_time": "11:25AM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Unknown",
            "start_time": "11:19",
            "end_time": "11:34AM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Unknown",
            "start_time": "14:32",
            "end_time": "4:02PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Andrew",
            "start_time": "16:40",
            "end_time": "5:40PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "John",
            "start_time": "19:29",
            "end_time": "8:44PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Unknown",
            "start_time": "20:54",
            "end_time": "9:24PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Nancy",
            "start_time": "9:11AM",
            "end_time": "10:41AM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Lisa",
            "start_time": "10:53AM",
            "end_time": "11:38AM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Joshua",
            "start_time": "12:00PM",
            "end_time": "12:15PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Andrew",
            "start_time": "12:23PM",
            "end_time": "1:23PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "John",
            "start_time": "4:45PM",
            "end_time": "6:00PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Kenneth",
            "start_time": "9:15PM",
            "end_time": "9:45PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"Embarcadero\": {\n        \"Richmond District\": 21,\n        \"Union Square\": 10,\n        \"Financial District\": 5,\n        \"Pacific Heights\": 11,\n        \"Nob Hill\": 10,\n        \"Bayview\": 21\n    },\n    \"Richmond District\": {\n        \"Embarcadero\": 19,\n        \"Union Square\": 21,\n        \"Financial District\": 22,\n        \"Pacific Heights\": 10,\n        \"Nob Hill\": 17,\n        \"Bayview\": 26\n    },\n    \"Union Square\": {\n        \"Embarcadero\": 11,\n        \"Richmond District\": 20,\n        \"Financial District\": 9,\n        \"Pacific Heights\": 15,\n        \"Nob Hill\": 9,\n        \"Bayview\": 15\n    },\n    \"Financial District\": {\n        \"Embarcadero\": 4,\n        \"Richmond District\": 21,\n        \"Union Square\": 9,\n        \"Pacific Heights\": 13,\n        \"Nob Hill\": 8,\n        \"Bayview\": 19\n    },\n    \"Pacific Heights\": {\n        \"Embarcadero\": 10,\n        \"Richmond District\": 12,\n        \"Union Square\": 12,\n        \"Financial District\": 13,\n        \"Nob Hill\": 8,\n        \"Bayview\": 22\n    },\n    \"Nob Hill\": {\n        \"Embarcadero\": 9,\n        \"Richmond District\": 14,\n        \"Union Square\": 7,\n        \"Financial District\": 9,\n        \"Pacific Heights\": 8,\n        \"Bayview\": 19\n    },\n    \"Bayview\": {\n        \"Embarcadero\": 19,\n        \"Richmond District\": 25,\n        \"Union Square\": 17,\n        \"Financial District\": 19,\n        \"Pacific Heights\": 23,\n        \"Nob Hill\": 20\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Kenneth\": {\"start_time\": \"21:15\", \"end_time\": \"22:00\", \"duration\": 30},\n    \"Lisa\": {\"start_time\": \"09:00\", \"end_time\": \"16:30\", \"duration\": 45},\n    \"Joshua\": {\"start_time\": \"12:00\", \"end_time\": \"15:15\", \"duration\": 15},\n    \"Nancy\": {\"start_time\": \"08:00\", \"end_time\": \"11:30\", \"duration\": 90},\n    \"Andrew\": {\"start_time\": \"11:30\", \"end_time\": \"20:15\", \"duration\": 60},\n    \"John\": {\"start_time\": \"16:45\", \"end_time\": \"21:30\", \"duration\": 75}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"Embarcadero\", \"time\": current_time})\n\n    # Meet Lisa\n    travel_time = calculate_travel_time(\"Embarcadero\", \"Union Square\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Embarcadero\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Union Square\"})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"meet\", \"location\": \"Union Square\", \"duration\": 45, \"time\": current_time})\n\n    # Meet Joshua\n    travel_time = calculate_travel_time(\"Union Square\", \"Financial District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Financial District\"})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"wait\", \"location\": \"Financial District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"meet\", \"location\": \"Financial District\", \"duration\": 15, \"time\": current_time})\n\n    # Meet Nancy\n    travel_time = calculate_travel_time(\"Financial District\", \"Pacific Heights\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Pacific Heights\"})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"wait\", \"location\": \"Pacific Heights\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"meet\", \"location\": \"Pacific Heights\", \"duration\": 90, \"time\": current_time})\n\n    # Meet Andrew\n    travel_time = calculate_travel_time(\"Pacific Heights\", \"Nob Hill\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Pacific Heights\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Nob Hill\"})\n    current_time = calculate_meeting_time(current_time, 60)\n    schedule.append({\"action\": \"wait\", \"location\": \"Nob Hill\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 60)\n    schedule.append({\"action\": \"meet\", \"location\": \"Nob Hill\", \"duration\": 60, \"time\": current_time})\n\n    # Meet John\n    travel_time = calculate_travel_time(\"Nob Hill\", \"Bayview\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Nob Hill\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Bayview\"})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"wait\", \"location\": \"Bayview\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"meet\", \"location\": \"Bayview\", \"duration\": 75, \"time\": current_time})\n\n    # Meet Kenneth\n    travel_time = calculate_travel_time(\"Bayview\", \"Richmond District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Richmond District\"})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"meet\", \"location\": \"Richmond District\", \"duration\": 30, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_546"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Unknown",
            "start_time": "11:44",
            "end_time": "12:59PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Daniel",
            "start_time": "7:00PM",
            "end_time": "8:15PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"Russian Hill\": {\n        \"Richmond District\": 14\n    },\n    \"Richmond District\": {\n        \"Russian Hill\": 13\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Daniel\": {\"start_time\": \"19:00\", \"end_time\": \"20:15\", \"duration\": 75}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"Russian Hill\", \"time\": current_time})\n\n    # Meet Daniel\n    travel_time = calculate_travel_time(\"Russian Hill\", \"Richmond District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Russian Hill\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Richmond District\"})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"meet\", \"location\": \"Richmond District\", \"duration\": 75, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_91"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Mission District",
            "person": "David",
            "start_time": "10:48",
            "end_time": "11:33AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Kenneth",
            "start_time": "14:59",
            "end_time": "4:59PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Unknown",
            "start_time": "15:39",
            "end_time": "3:54PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Unknown",
            "start_time": "17:51",
            "end_time": "6:51PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Unknown",
            "start_time": "21:13",
            "end_time": "10:43PM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Unknown",
            "start_time": "21:53",
            "end_time": "10:08PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Unknown",
            "start_time": "23:09",
            "end_time": "11:39PM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Mission District",
            "person": "David",
            "start_time": "9:18AM",
            "end_time": "10:03AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Kenneth",
            "start_time": "2:00PM",
            "end_time": "4:00PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Deborah",
            "start_time": "4:09PM",
            "end_time": "5:39PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "John",
            "start_time": "5:55PM",
            "end_time": "6:10PM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Karen",
            "start_time": "6:31PM",
            "end_time": "6:46PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Charles",
            "start_time": "9:45PM",
            "end_time": "10:45PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"Chinatown\": {\n        \"Mission District\": 18,\n        \"Alamo Square\": 17,\n        \"Pacific Heights\": 10,\n        \"Union Square\": 7,\n        \"Golden Gate Park\": 23,\n        \"Sunset District\": 29,\n        \"Presidio\": 19\n    },\n    \"Mission District\": {\n        \"Chinatown\": 16,\n        \"Alamo Square\": 11,\n        \"Pacific Heights\": 16,\n        \"Union Square\": 15,\n        \"Golden Gate Park\": 17,\n        \"Sunset District\": 24,\n        \"Presidio\": 25\n    },\n    \"Alamo Square\": {\n        \"Chinatown\": 16,\n        \"Mission District\": 10,\n        \"Pacific Heights\": 10,\n        \"Union Square\": 14,\n        \"Golden Gate Park\": 9,\n        \"Sunset District\": 16,\n        \"Presidio\": 18\n    },\n    \"Pacific Heights\": {\n        \"Chinatown\": 11,\n        \"Mission District\": 15,\n        \"Alamo Square\": 10,\n        \"Union Square\": 12,\n        \"Golden Gate Park\": 15,\n        \"Sunset District\": 21,\n        \"Presidio\": 11\n    },\n    \"Union Square\": {\n        \"Chinatown\": 7,\n        \"Mission District\": 14,\n        \"Alamo Square\": 15,\n        \"Pacific Heights\": 15,\n        \"Golden Gate Park\": 22,\n        \"Sunset District\": 26,\n        \"Presidio\": 24\n    },\n    \"Golden Gate Park\": {\n        \"Chinatown\": 23,\n        \"Mission District\": 17,\n        \"Alamo Square\": 10,\n        \"Pacific Heights\": 16,\n        \"Union Square\": 22,\n        \"Sunset District\": 10,\n        \"Presidio\": 11\n    },\n    \"Sunset District\": {\n        \"Chinatown\": 30,\n        \"Mission District\": 24,\n        \"Alamo Square\": 17,\n        \"Pacific Heights\": 21,\n        \"Union Square\": 30,\n        \"Golden Gate Park\": 11,\n        \"Presidio\": 16\n    },\n    \"Presidio\": {\n        \"Chinatown\": 21,\n        \"Mission District\": 26,\n        \"Alamo Square\": 18,\n        \"Pacific Heights\": 11,\n        \"Union Square\": 22,\n        \"Golden Gate Park\": 12,\n        \"Sunset District\": 15\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"David\": {\"start_time\": \"08:00\", \"end_time\": \"19:45\", \"duration\": 45},\n    \"Kenneth\": {\"start_time\": \"14:00\", \"end_time\": \"19:45\", \"duration\": 120},\n    \"John\": {\"start_time\": \"17:00\", \"end_time\": \"20:00\", \"duration\": 15},\n    \"Charles\": {\"start_time\": \"21:45\", \"end_time\": \"22:45\", \"duration\": 60},\n    \"Deborah\": {\"start_time\": \"07:00\", \"end_time\": \"18:15\", \"duration\": 90},\n    \"Karen\": {\"start_time\": \"17:45\", \"end_time\": \"21:15\", \"duration\": 15},\n    \"Carol\": {\"start_time\": \"08:15\", \"end_time\": \"09:15\", \"duration\": 30}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"Chinatown\", \"time\": current_time})\n\n    # Meet David\n    travel_time = calculate_travel_time(\"Chinatown\", \"Mission District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Chinatown\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Mission District\"})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"wait\", \"location\": \"Mission District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"meet\", \"location\": \"Mission District\", \"duration\": 45, \"time\": current_time})\n\n    # Meet Kenneth\n    travel_time = calculate_travel_time(\"Mission District\", \"Alamo Square\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Mission District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Alamo Square\"})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"wait\", \"location\": \"Alamo Square\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"meet\", \"location\": \"Alamo Square\", \"duration\": 120, \"time\": current_time})\n\n    # Meet John\n    travel_time = calculate_travel_time(\"Alamo Square\", \"Pacific Heights\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Alamo Square\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Pacific Heights\"})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"wait\", \"location\": \"Pacific Heights\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"meet\", \"location\": \"Pacific Heights\", \"duration\": 15, \"time\": current_time})\n\n    # Meet Charles\n    travel_time = calculate_travel_time(\"Pacific Heights\", \"Union Square\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Pacific Heights\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Union Square\"})\n    current_time = calculate_meeting_time(current_time, 60)\n    schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 60)\n    schedule.append({\"action\": \"meet\", \"location\": \"Union Square\", \"duration\": 60, \"time\": current_time})\n\n    # Meet Deborah\n    travel_time = calculate_travel_time(\"Union Square\", \"Golden Gate Park\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Golden Gate Park\"})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"wait\", \"location\": \"Golden Gate Park\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"meet\", \"location\": \"Golden Gate Park\", \"duration\": 90, \"time\": current_time})\n\n    # Meet Karen\n    travel_time = calculate_travel_time(\"Golden Gate Park\", \"Sunset District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Sunset District\"})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"wait\", \"location\": \"Sunset District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"meet\", \"location\": \"Sunset District\", \"duration\": 15, \"time\": current_time})\n\n    # Meet Carol\n    travel_time = calculate_travel_time(\"Sunset District\", \"Presidio\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Sunset District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Presidio\"})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"wait\", \"location\": \"Presidio\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"meet\", \"location\": \"Presidio\", \"duration\": 30, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_609"
    },
    {
      "final_program_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Unknown",
            "start_time": "10:10",
            "end_time": "10:40AM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Stephanie",
            "start_time": "12:57",
            "end_time": "2:12PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Betty",
            "start_time": "13:58",
            "end_time": "2:13PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Lisa",
            "start_time": "15:46",
            "end_time": "4:31PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Unknown",
            "start_time": "18:03",
            "end_time": "7:03PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Unknown",
            "start_time": "19:24",
            "end_time": "7:54PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Unknown",
            "start_time": "22:45",
            "end_time": "12:15PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Unknown",
            "start_time": "0:26",
            "end_time": "1:11AM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Unknown",
            "start_time": "4:47",
            "end_time": "6:47AM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Unknown",
            "start_time": "8:44",
            "end_time": "10:29AM"
          }
        ]
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Mark",
            "start_time": "9:10AM",
            "end_time": "9:40AM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Betty",
            "start_time": "10:06AM",
            "end_time": "10:21AM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Brian",
            "start_time": "10:40AM",
            "end_time": "11:10AM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Joseph",
            "start_time": "11:31AM",
            "end_time": "1:01PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Stephanie",
            "start_time": "1:11PM",
            "end_time": "2:26PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Lisa",
            "start_time": "3:30PM",
            "end_time": "4:15PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Patricia",
            "start_time": "4:34PM",
            "end_time": "6:34PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "William",
            "start_time": "6:47PM",
            "end_time": "7:47PM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Karen",
            "start_time": "8:10PM",
            "end_time": "9:55PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    \"Financial District\": {\n        \"Fisherman's Wharf\": 10,\n        \"Presidio\": 22,\n        \"Bayview\": 19,\n        \"Haight-Ashbury\": 19,\n        \"Russian Hill\": 11,\n        \"The Castro\": 20,\n        \"Marina District\": 15,\n        \"Richmond District\": 21,\n        \"Union Square\": 9,\n        \"Sunset District\": 30\n    },\n    \"Fisherman's Wharf\": {\n        \"Financial District\": 11,\n        \"Presidio\": 17,\n        \"Bayview\": 26,\n        \"Haight-Ashbury\": 22,\n        \"Russian Hill\": 7,\n        \"The Castro\": 27,\n        \"Marina District\": 9,\n        \"Richmond District\": 18,\n        \"Union Square\": 13,\n        \"Sunset District\": 27\n    },\n    \"Presidio\": {\n        \"Financial District\": 23,\n        \"Fisherman's Wharf\": 19,\n        \"Bayview\": 31,\n        \"Haight-Ashbury\": 15,\n        \"Russian Hill\": 14,\n        \"The Castro\": 21,\n        \"Marina District\": 11,\n        \"Richmond District\": 7,\n        \"Union Square\": 22,\n        \"Sunset District\": 15\n    },\n    \"Bayview\": {\n        \"Financial District\": 19,\n        \"Fisherman's Wharf\": 25,\n        \"Presidio\": 32,\n        \"Haight-Ashbury\": 18,\n        \"Russian Hill\": 23,\n        \"The Castro\": 19,\n        \"Marina District\": 27,\n        \"Richmond District\": 25,\n        \"Union Square\": 18,\n        \"Sunset District\": 23\n    },\n    \"Haight-Ashbury\": {\n        \"Financial District\": 21,\n        \"Fisherman's Wharf\": 23,\n        \"Presidio\": 15,\n        \"Bayview\": 18,\n        \"Russian Hill\": 17,\n        \"The Castro\": 6,\n        \"Marina District\": 17,\n        \"Richmond District\": 10,\n        \"Union Square\": 19,\n        \"Sunset District\": 15\n    },\n    \"Russian Hill\": {\n        \"Financial District\": 11,\n        \"Fisherman's Wharf\": 7,\n        \"Presidio\": 14,\n        \"Bayview\": 23,\n        \"Haight-Ashbury\": 17,\n        \"The Castro\": 21,\n        \"Marina District\": 7,\n        \"Richmond District\": 14,\n        \"Union Square\": 10,\n        \"Sunset District\": 23\n    },\n    \"The Castro\": {\n        \"Financial District\": 21,\n        \"Fisherman's Wharf\": 24,\n        \"Presidio\": 20,\n        \"Bayview\": 19,\n        \"Haight-Ashbury\": 6,\n        \"Russian Hill\": 18,\n        \"Marina District\": 21,\n        \"Richmond District\": 16,\n        \"Union Square\": 19,\n        \"Sunset District\": 17\n    },\n    \"Marina District\": {\n        \"Financial District\": 17,\n        \"Fisherman's Wharf\": 10,\n        \"Presidio\": 10,\n        \"Bayview\": 27,\n        \"Haight-Ashbury\": 16,\n        \"Russian Hill\": 8,\n        \"The Castro\": 22,\n        \"Richmond District\": 11,\n        \"Union Square\": 16,\n        \"Sunset District\": 19\n    },\n    \"Richmond District\": {\n        \"Financial District\": 22,\n        \"Fisherman's Wharf\": 18,\n        \"Presidio\": 7,\n        \"Bayview\": 27,\n        \"Haight-Ashbury\": 10,\n        \"Russian Hill\": 13,\n        \"The Castro\": 16,\n        \"Marina District\": 9,\n        \"Union Square\": 21,\n        \"Sunset District\": 11\n    },\n    \"Union Square\": {\n        \"Financial District\": 9,\n        \"Fisherman's Wharf\": 15,\n        \"Presidio\": 24,\n        \"Bayview\": 15,\n        \"Haight-Ashbury\": 18,\n        \"Russian Hill\": 13,\n        \"The Castro\": 17,\n        \"Marina District\": 18,\n        \"Richmond District\": 20,\n        \"Sunset District\": 27\n    },\n    \"Sunset District\": {\n        \"Financial District\": 30,\n        \"Fisherman's Wharf\": 29,\n        \"Presidio\": 16,\n        \"Bayview\": 22,\n        \"Haight-Ashbury\": 15,\n        \"Russian Hill\": 24,\n        \"The Castro\": 17,\n        \"Marina District\": 21,\n        \"Richmond District\": 12,\n        \"Union Square\": 30\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Mark\": {\"start_time\": \"08:15\", \"end_time\": \"10:00\", \"duration\": 30},\n    \"Stephanie\": {\"start_time\": \"12:15\", \"end_time\": \"15:00\", \"duration\": 75},\n    \"Betty\": {\"start_time\": \"07:15\", \"end_time\": \"20:30\", \"duration\": 15},\n    \"Lisa\": {\"start_time\": \"15:30\", \"end_time\": \"18:30\", \"duration\": 45},\n    \"William\": {\"start_time\": \"18:45\", \"end_time\": \"20:00\", \"duration\": 60},\n    \"Brian\": {\"start_time\": \"09:15\", \"end_time\": \"13:15\", \"duration\": 30},\n    \"Joseph\": {\"start_time\": \"10:45\", \"end_time\": \"15:00\", \"duration\": 90},\n    \"Ashley\": {\"start_time\": \"09:45\", \"end_time\": \"11:15\", \"duration\": 45},\n    \"Patricia\": {\"start_time\": \"16:30\", \"end_time\": \"20:00\", \"duration\": 120},\n    \"Karen\": {\"start_time\": \"16:30\", \"end_time\": \"22:00\", \"duration\": 105}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef calculate_meeting_time(start_time, duration):\n    end_time = datetime.strptime(start_time, \"%H:%M\") + timedelta(minutes=duration)\n    return end_time.strftime(\"%H:%M\")\n\ndef generate_schedule():\n    schedule = []\n    current_time = \"09:00\"\n    schedule.append({\"action\": \"start\", \"location\": \"Financial District\", \"time\": current_time})\n\n    # Meet Mark\n    travel_time = calculate_travel_time(\"Financial District\", \"Fisherman's Wharf\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Financial District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Fisherman's Wharf\"})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"wait\", \"location\": \"Fisherman's Wharf\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"meet\", \"location\": \"Fisherman's Wharf\", \"duration\": 30, \"time\": current_time})\n\n    # Meet Stephanie\n    travel_time = calculate_travel_time(\"Fisherman's Wharf\", \"Presidio\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Fisherman's Wharf\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Presidio\"})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"wait\", \"location\": \"Presidio\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 75)\n    schedule.append({\"action\": \"meet\", \"location\": \"Presidio\", \"duration\": 75, \"time\": current_time})\n\n    # Meet Betty\n    travel_time = calculate_travel_time(\"Presidio\", \"Bayview\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Presidio\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Bayview\"})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"wait\", \"location\": \"Bayview\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 15)\n    schedule.append({\"action\": \"meet\", \"location\": \"Bayview\", \"duration\": 15, \"time\": current_time})\n\n    # Meet Lisa\n    travel_time = calculate_travel_time(\"Bayview\", \"Haight-Ashbury\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Haight-Ashbury\"})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"wait\", \"location\": \"Haight-Ashbury\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"meet\", \"location\": \"Haight-Ashbury\", \"duration\": 45, \"time\": current_time})\n\n    # Meet William\n    travel_time = calculate_travel_time(\"Haight-Ashbury\", \"Russian Hill\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Haight-Ashbury\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Russian Hill\"})\n    current_time = calculate_meeting_time(current_time, 60)\n    schedule.append({\"action\": \"wait\", \"location\": \"Russian Hill\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 60)\n    schedule.append({\"action\": \"meet\", \"location\": \"Russian Hill\", \"duration\": 60, \"time\": current_time})\n\n    # Meet Brian\n    travel_time = calculate_travel_time(\"Russian Hill\", \"The Castro\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Russian Hill\", \"duration\": travel_time, \"time\": current_time, \"to\": \"The Castro\"})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"wait\", \"location\": \"The Castro\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 30)\n    schedule.append({\"action\": \"meet\", \"location\": \"The Castro\", \"duration\": 30, \"time\": current_time})\n\n    # Meet Joseph\n    travel_time = calculate_travel_time(\"The Castro\", \"Marina District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"The Castro\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Marina District\"})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"wait\", \"location\": \"Marina District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 90)\n    schedule.append({\"action\": \"meet\", \"location\": \"Marina District\", \"duration\": 90, \"time\": current_time})\n\n    # Meet Ashley\n    travel_time = calculate_travel_time(\"Marina District\", \"Richmond District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Marina District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Richmond District\"})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"wait\", \"location\": \"Richmond District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 45)\n    schedule.append({\"action\": \"meet\", \"location\": \"Richmond District\", \"duration\": 45, \"time\": current_time})\n\n    # Meet Patricia\n    travel_time = calculate_travel_time(\"Richmond District\", \"Union Square\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Union Square\"})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"wait\", \"location\": \"Union Square\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 120)\n    schedule.append({\"action\": \"meet\", \"location\": \"Union Square\", \"duration\": 120, \"time\": current_time})\n\n    # Meet Karen\n    travel_time = calculate_travel_time(\"Union Square\", \"Sunset District\")\n    current_time = calculate_meeting_time(current_time, travel_time)\n    schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_time, \"time\": current_time, \"to\": \"Sunset District\"})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"wait\", \"location\": \"Sunset District\", \"time\": current_time})\n    current_time = calculate_meeting_time(current_time, 105)\n    schedule.append({\"action\": \"meet\", \"location\": \"Sunset District\", \"duration\": 105, \"time\": current_time})\n\n    return schedule\n\ndef main():\n    schedule = generate_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_908"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Helen",
            "start_time": "9:09AM",
            "end_time": "9:24AM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Kevin",
            "start_time": "10:45AM",
            "end_time": "11:30AM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Betty",
            "start_time": "7:00PM",
            "end_time": "8:30PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Pacific Heights\": {\n        \"North Beach\": 9,\n        \"Financial District\": 13,\n        \"Alamo Square\": 10,\n        \"Mission District\": 15\n    },\n    \"North Beach\": {\n        \"Pacific Heights\": 8,\n        \"Financial District\": 8,\n        \"Alamo Square\": 16,\n        \"Mission District\": 18\n    },\n    \"Financial District\": {\n        \"Pacific Heights\": 13,\n        \"North Beach\": 7,\n        \"Alamo Square\": 17,\n        \"Mission District\": 17\n    },\n    \"Alamo Square\": {\n        \"Pacific Heights\": 10,\n        \"North Beach\": 15,\n        \"Financial District\": 17,\n        \"Mission District\": 10\n    },\n    \"Mission District\": {\n        \"Pacific Heights\": 16,\n        \"North Beach\": 17,\n        \"Financial District\": 17,\n        \"Alamo Square\": 11\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Helen\": {\"location\": \"North Beach\", \"start_time\": 9, \"end_time\": 17, \"duration\": 15},\n    \"Betty\": {\"location\": \"Financial District\", \"start_time\": 19, \"end_time\": 21, \"duration\": 90},\n    \"Amanda\": {\"location\": \"Alamo Square\", \"start_time\": 19, \"end_time\": 21, \"duration\": 60},\n    \"Kevin\": {\"location\": \"Mission District\", \"start_time\": 10, \"end_time\": 14, \"duration\": 45}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    current_location = \"Pacific Heights\"\n\n    # Meet Helen\n    helen_start_time = datetime.strptime(f\"{constraints['Helen']['start_time']}:00AM\", \"%H:%M%p\")\n    helen_end_time = datetime.strptime(f\"{constraints['Helen']['end_time']}:00PM\", \"%H:%M%p\")\n    helen_duration = constraints['Helen']['duration']\n    if current_time < helen_start_time:\n        travel_time = travel_distances[current_location][\"North Beach\"]\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"North Beach\"})\n        current_location = \"North Beach\"\n        current_time += timedelta(minutes=travel_time)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < helen_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": helen_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=helen_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < helen_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Pacific Heights\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Pacific Heights\"})\n        current_location = \"Pacific Heights\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Pacific Heights\"])\n    elif current_time < helen_end_time:\n        travel_time = travel_distances[current_location][\"North Beach\"]\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_time, \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"North Beach\"})\n        current_location = \"North Beach\"\n        current_time += timedelta(minutes=travel_time)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": helen_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=helen_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Kevin\n    kevin_start_time = datetime.strptime(f\"{constraints['Kevin']['start_time']}:00AM\", \"%H:%M%p\")\n    kevin_end_time = datetime.strptime(f\"{constraints['Kevin']['end_time']}:00PM\", \"%H:%M%p\")\n    kevin_duration = constraints['Kevin']['duration']\n    if current_time < kevin_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < kevin_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Mission District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Mission District\"})\n        current_location = \"Mission District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Mission District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": kevin_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=kevin_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < kevin_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Pacific Heights\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Pacific Heights\"})\n        current_location = \"Pacific Heights\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Pacific Heights\"])\n    elif current_time < kevin_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Mission District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Mission District\"})\n        current_location = \"Mission District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Mission District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": kevin_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=kevin_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Betty\n    betty_start_time = datetime.strptime(f\"{constraints['Betty']['start_time']}:00PM\", \"%H:%M%p\")\n    betty_end_time = datetime.strptime(f\"{constraints['Betty']['end_time']}:00PM\", \"%H:%M%p\")\n    betty_duration = constraints['Betty']['duration']\n    if current_time < betty_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < betty_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Financial District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Financial District\"})\n        current_location = \"Financial District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Financial District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": betty_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=betty_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < betty_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Pacific Heights\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Pacific Heights\"})\n        current_location = \"Pacific Heights\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Pacific Heights\"])\n    elif current_time < betty_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Financial District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Financial District\"})\n        current_location = \"Financial District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Financial District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": betty_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=betty_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Amanda\n    amanda_start_time = datetime.strptime(f\"{constraints['Amanda']['start_time']}:00PM\", \"%H:%M%p\")\n    amanda_end_time = datetime.strptime(f\"{constraints['Amanda']['end_time']}:00PM\", \"%H:%M%p\")\n    amanda_duration = constraints['Amanda']['duration']\n    if current_time < amanda_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < amanda_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Alamo Square\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Alamo Square\"})\n        current_location = \"Alamo Square\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Alamo Square\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": amanda_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=amanda_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < amanda_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Pacific Heights\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Pacific Heights\"})\n        current_location = \"Pacific Heights\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Pacific Heights\"])\n    elif current_time < amanda_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Alamo Square\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Alamo Square\"})\n        current_location = \"Alamo Square\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Alamo Square\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": amanda_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=amanda_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_335"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Matthew",
            "start_time": "9:12AM",
            "end_time": "9:27AM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Michelle",
            "start_time": "10:30AM",
            "end_time": "11:45AM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Carol",
            "start_time": "12:00PM",
            "end_time": "1:30PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Stephanie",
            "start_time": "1:37PM",
            "end_time": "2:07PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Jessica",
            "start_time": "3:45PM",
            "end_time": "4:45PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Linda",
            "start_time": "4:56PM",
            "end_time": "6:26PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Karen",
            "start_time": "8:45PM",
            "end_time": "9:45PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Sunset District\": {\n        \"Russian Hill\": 24,\n        \"The Castro\": 17,\n        \"Richmond District\": 12,\n        \"Marina District\": 21,\n        \"North Beach\": 29,\n        \"Union Square\": 30,\n        \"Golden Gate Park\": 11\n    },\n    \"Russian Hill\": {\n        \"Sunset District\": 23,\n        \"The Castro\": 18,\n        \"Richmond District\": 14,\n        \"Marina District\": 7,\n        \"North Beach\": 5,\n        \"Union Square\": 11,\n        \"Golden Gate Park\": 21\n    },\n    \"The Castro\": {\n        \"Sunset District\": 17,\n        \"Russian Hill\": 21,\n        \"Richmond District\": 16,\n        \"Marina District\": 21,\n        \"North Beach\": 20,\n        \"Union Square\": 19,\n        \"Golden Gate Park\": 11\n    },\n    \"Richmond District\": {\n        \"Sunset District\": 11,\n        \"Russian Hill\": 13,\n        \"The Castro\": 16,\n        \"Marina District\": 9,\n        \"North Beach\": 17,\n        \"Union Square\": 21,\n        \"Golden Gate Park\": 9\n    },\n    \"Marina District\": {\n        \"Sunset District\": 19,\n        \"Russian Hill\": 8,\n        \"The Castro\": 22,\n        \"Richmond District\": 11,\n        \"North Beach\": 11,\n        \"Union Square\": 16,\n        \"Golden Gate Park\": 18\n    },\n    \"North Beach\": {\n        \"Sunset District\": 27,\n        \"Russian Hill\": 4,\n        \"The Castro\": 22,\n        \"Richmond District\": 18,\n        \"Marina District\": 9,\n        \"Union Square\": 7,\n        \"Golden Gate Park\": 22\n    },\n    \"Union Square\": {\n        \"Sunset District\": 26,\n        \"Russian Hill\": 13,\n        \"The Castro\": 19,\n        \"Richmond District\": 20,\n        \"Marina District\": 18,\n        \"North Beach\": 10,\n        \"Golden Gate Park\": 22\n    },\n    \"Golden Gate Park\": {\n        \"Sunset District\": 10,\n        \"Russian Hill\": 19,\n        \"The Castro\": 13,\n        \"Richmond District\": 7,\n        \"Marina District\": 16,\n        \"North Beach\": 24,\n        \"Union Square\": 22\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Karen\": {\"location\": \"Russian Hill\", \"start_time\": 20, \"end_time\": 21, \"duration\": 60},\n    \"Jessica\": {\"location\": \"The Castro\", \"start_time\": 15, \"end_time\": 19, \"duration\": 60},\n    \"Matthew\": {\"location\": \"Richmond District\", \"start_time\": 7, \"end_time\": 15, \"duration\": 15},\n    \"Michelle\": {\"location\": \"Marina District\", \"start_time\": 10, \"end_time\": 18, \"duration\": 75},\n    \"Carol\": {\"location\": \"North Beach\", \"start_time\": 12, \"end_time\": 17, \"duration\": 90},\n    \"Stephanie\": {\"location\": \"Union Square\", \"start_time\": 10, \"end_time\": 14, \"duration\": 30},\n    \"Linda\": {\"location\": \"Golden Gate Park\", \"start_time\": 10, \"end_time\": 22, \"duration\": 90}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    current_location = \"Sunset District\"\n\n    # Meet Matthew\n    matthew_start_time = datetime.strptime(f\"{constraints['Matthew']['start_time']}:00AM\", \"%H:%M%p\")\n    matthew_end_time = datetime.strptime(f\"{constraints['Matthew']['end_time']}:00PM\", \"%H:%M%p\")\n    matthew_duration = constraints['Matthew']['duration']\n    if current_time < matthew_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < matthew_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Richmond District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Richmond District\"})\n        current_location = \"Richmond District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Richmond District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": matthew_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=matthew_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < matthew_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Sunset District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Sunset District\"})\n        current_location = \"Sunset District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Sunset District\"])\n    elif current_time < matthew_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Richmond District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Richmond District\"})\n        current_location = \"Richmond District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Richmond District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": matthew_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=matthew_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Stephanie\n    stephanie_start_time = datetime.strptime(f\"{constraints['Stephanie']['start_time']}:00AM\", \"%H:%M%p\")\n    stephanie_end_time = datetime.strptime(f\"{constraints['Stephanie']['end_time']}:00PM\", \"%H:%M%p\")\n    stephanie_duration = constraints['Stephanie']['duration']\n    if current_time < stephanie_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < stephanie_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Union Square\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Union Square\"})\n        current_location = \"Union Square\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Union Square\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": stephanie_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=stephanie_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < stephanie_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Sunset District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Sunset District\"})\n        current_location = \"Sunset District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Sunset District\"])\n    elif current_time < stephanie_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Union Square\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Union Square\"})\n        current_location = \"Union Square\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Union Square\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": stephanie_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=stephanie_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Michelle\n    michelle_start_time = datetime.strptime(f\"{constraints['Michelle']['start_time']}:00AM\", \"%H:%M%p\")\n    michelle_end_time = datetime.strptime(f\"{constraints['Michelle']['end_time']}:00PM\", \"%H:%M%p\")\n    michelle_duration = constraints['Michelle']['duration']\n    if current_time < michelle_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < michelle_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Marina District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Marina District\"})\n        current_location = \"Marina District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Marina District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": michelle_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=michelle_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < michelle_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Sunset District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Sunset District\"})\n        current_location = \"Sunset District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Sunset District\"])\n    elif current_time < michelle_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Marina District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Marina District\"})\n        current_location = \"Marina District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Marina District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": michelle_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=michelle_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Carol\n    carol_start_time = datetime.strptime(f\"{constraints['Carol']['start_time']}:00AM\", \"%H:%M%p\")\n    carol_end_time = datetime.strptime(f\"{constraints['Carol']['end_time']}:00PM\", \"%H:%M%p\")\n    carol_duration = constraints['Carol']['duration']\n    if current_time < carol_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < carol_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"North Beach\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"North Beach\"})\n        current_location = \"North Beach\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"North Beach\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": carol_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=carol_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < carol_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Sunset District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Sunset District\"})\n        current_location = \"Sunset District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Sunset District\"])\n    elif current_time < carol_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"North Beach\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"North Beach\"})\n        current_location = \"North Beach\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"North Beach\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": carol_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=carol_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Jessica\n    jessica_start_time = datetime.strptime(f\"{constraints['Jessica']['start_time']}:00PM\", \"%H:%M%p\")\n    jessica_end_time = datetime.strptime(f\"{constraints['Jessica']['end_time']}:00PM\", \"%H:%M%p\")\n    jessica_duration = constraints['Jessica']['duration']\n    if current_time < jessica_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < jessica_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"The Castro\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"The Castro\"})\n        current_location = \"The Castro\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"The Castro\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": jessica_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=jessica_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < jessica_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Sunset District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Sunset District\"})\n        current_location = \"Sunset District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Sunset District\"])\n    elif current_time < jessica_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"The Castro\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"The Castro\"})\n        current_location = \"The Castro\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"The Castro\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": jessica_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=jessica_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Linda\n    linda_start_time = datetime.strptime(f\"{constraints['Linda']['start_time']}:00AM\", \"%H:%M%p\")\n    linda_end_time = datetime.strptime(f\"{constraints['Linda']['end_time']}:00PM\", \"%H:%M%p\")\n    linda_duration = constraints['Linda']['duration']\n    if current_time < linda_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < linda_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Golden Gate Park\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n        current_location = \"Golden Gate Park\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Golden Gate Park\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": linda_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=linda_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < linda_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Sunset District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Sunset District\"})\n        current_location = \"Sunset District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Sunset District\"])\n    elif current_time < linda_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Golden Gate Park\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n        current_location = \"Golden Gate Park\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Golden Gate Park\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": linda_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=linda_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Karen\n    karen_start_time = datetime.strptime(f\"{constraints['Karen']['start_time']}:00PM\", \"%H:%M%p\")\n    karen_end_time = datetime.strptime(f\"{constraints['Karen']['end_time']}:00PM\", \"%H:%M%p\")\n    karen_duration = constraints['Karen']['duration']\n    if current_time < karen_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < karen_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Russian Hill\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Russian Hill\"})\n        current_location = \"Russian Hill\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Russian Hill\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": karen_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=karen_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < karen_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Sunset District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Sunset District\"})\n        current_location = \"Sunset District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Sunset District\"])\n    elif current_time < karen_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Russian Hill\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Russian Hill\"})\n        current_location = \"Russian Hill\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Russian Hill\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": karen_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=karen_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_607"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Joseph",
            "start_time": "9:24AM",
            "end_time": "10:54AM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Kevin",
            "start_time": "11:16AM",
            "end_time": "11:46AM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Barbara",
            "start_time": "12:03PM",
            "end_time": "12:18PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Jeffrey",
            "start_time": "5:30PM",
            "end_time": "6:30PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Golden Gate Park\": {\n        \"Fisherman's Wharf\": 24,\n        \"Bayview\": 23,\n        \"Mission District\": 17,\n        \"Embarcadero\": 25,\n        \"Financial District\": 26\n    },\n    \"Fisherman's Wharf\": {\n        \"Golden Gate Park\": 25,\n        \"Bayview\": 26,\n        \"Mission District\": 22,\n        \"Embarcadero\": 8,\n        \"Financial District\": 11\n    },\n    \"Bayview\": {\n        \"Golden Gate Park\": 22,\n        \"Fisherman's Wharf\": 25,\n        \"Mission District\": 13,\n        \"Embarcadero\": 19,\n        \"Financial District\": 19\n    },\n    \"Mission District\": {\n        \"Golden Gate Park\": 17,\n        \"Fisherman's Wharf\": 22,\n        \"Bayview\": 15,\n        \"Embarcadero\": 19,\n        \"Financial District\": 17\n    },\n    \"Embarcadero\": {\n        \"Golden Gate Park\": 25,\n        \"Fisherman's Wharf\": 6,\n        \"Bayview\": 21,\n        \"Mission District\": 20,\n        \"Financial District\": 5\n    },\n    \"Financial District\": {\n        \"Golden Gate Park\": 23,\n        \"Fisherman's Wharf\": 10,\n        \"Bayview\": 19,\n        \"Mission District\": 17,\n        \"Embarcadero\": 4\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Joseph\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 8, \"end_time\": 17, \"duration\": 90},\n    \"Jeffrey\": {\"location\": \"Bayview\", \"start_time\": 17, \"end_time\": 21, \"duration\": 60},\n    \"Kevin\": {\"location\": \"Mission District\", \"start_time\": 11, \"end_time\": 15, \"duration\": 30},\n    \"David\": {\"location\": \"Embarcadero\", \"start_time\": 8, \"end_time\": 9, \"duration\": 30},\n    \"Barbara\": {\"location\": \"Financial District\", \"start_time\": 10, \"end_time\": 16, \"duration\": 15}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    current_location = \"Golden Gate Park\"\n\n    # Meet David\n    david_start_time = datetime.strptime(f\"{constraints['David']['start_time']}:00AM\", \"%H:%M%p\")\n    david_end_time = datetime.strptime(f\"{constraints['David']['end_time']}:00AM\", \"%H:%M%p\")\n    david_duration = constraints['David']['duration']\n    if current_time < david_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < david_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Embarcadero\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Embarcadero\"})\n        current_location = \"Embarcadero\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Embarcadero\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": david_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=david_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < david_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Golden Gate Park\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n        current_location = \"Golden Gate Park\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Golden Gate Park\"])\n    elif current_time < david_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Embarcadero\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Embarcadero\"})\n        current_location = \"Embarcadero\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Embarcadero\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": david_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=david_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Kevin\n    kevin_start_time = datetime.strptime(f\"{constraints['Kevin']['start_time']}:00AM\", \"%H:%M%p\")\n    kevin_end_time = datetime.strptime(f\"{constraints['Kevin']['end_time']}:00PM\", \"%H:%M%p\")\n    kevin_duration = constraints['Kevin']['duration']\n    if current_time < kevin_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < kevin_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Mission District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Mission District\"})\n        current_location = \"Mission District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Mission District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": kevin_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=kevin_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < kevin_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Golden Gate Park\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n        current_location = \"Golden Gate Park\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Golden Gate Park\"])\n    elif current_time < kevin_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Mission District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Mission District\"})\n        current_location = \"Mission District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Mission District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": kevin_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=kevin_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Barbara\n    barbara_start_time = datetime.strptime(f\"{constraints['Barbara']['start_time']}:00AM\", \"%H:%M%p\")\n    barbara_end_time = datetime.strptime(f\"{constraints['Barbara']['end_time']}:00PM\", \"%H:%M%p\")\n    barbara_duration = constraints['Barbara']['duration']\n    if current_time < barbara_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < barbara_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Financial District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Financial District\"})\n        current_location = \"Financial District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Financial District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": barbara_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=barbara_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < barbara_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Golden Gate Park\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n        current_location = \"Golden Gate Park\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Golden Gate Park\"])\n    elif current_time < barbara_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Financial District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Financial District\"})\n        current_location = \"Financial District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Financial District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": barbara_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=barbara_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Joseph\n    joseph_start_time = datetime.strptime(f\"{constraints['Joseph']['start_time']}:00AM\", \"%H:%M%p\")\n    joseph_end_time = datetime.strptime(f\"{constraints['Joseph']['end_time']}:00PM\", \"%H:%M%p\")\n    joseph_duration = constraints['Joseph']['duration']\n    if current_time < joseph_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < joseph_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Fisherman's Wharf\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Fisherman's Wharf\"})\n        current_location = \"Fisherman's Wharf\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Fisherman's Wharf\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": joseph_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=joseph_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < joseph_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Golden Gate Park\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n        current_location = \"Golden Gate Park\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Golden Gate Park\"])\n    elif current_time < joseph_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Fisherman's Wharf\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Fisherman's Wharf\"})\n        current_location = \"Fisherman's Wharf\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Fisherman's Wharf\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": joseph_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=joseph_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Jeffrey\n    jeffrey_start_time = datetime.strptime(f\"{constraints['Jeffrey']['start_time']}:00PM\", \"%H:%M%p\")\n    jeffrey_end_time = datetime.strptime(f\"{constraints['Jeffrey']['end_time']}:00PM\", \"%H:%M%p\")\n    jeffrey_duration = constraints['Jeffrey']['duration']\n    if current_time < jeffrey_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < jeffrey_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Bayview\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Bayview\"})\n        current_location = \"Bayview\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Bayview\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": jeffrey_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=jeffrey_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < jeffrey_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Golden Gate Park\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n        current_location = \"Golden Gate Park\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Golden Gate Park\"])\n    elif current_time < jeffrey_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Bayview\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Bayview\"})\n        current_location = \"Bayview\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Bayview\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": jeffrey_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=jeffrey_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_432"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Nancy",
            "start_time": "9:30AM",
            "end_time": "11:00AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Mary",
            "start_time": "11:17AM",
            "end_time": "12:32PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Jessica",
            "start_time": "12:48PM",
            "end_time": "1:33PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Financial District\": {\n        \"Chinatown\": 5,\n        \"Alamo Square\": 17,\n        \"Bayview\": 19,\n        \"Fisherman's Wharf\": 10\n    },\n    \"Chinatown\": {\n        \"Financial District\": 5,\n        \"Alamo Square\": 16,\n        \"Bayview\": 22,\n        \"Fisherman's Wharf\": 8\n    },\n    \"Alamo Square\": {\n        \"Financial District\": 17,\n        \"Chinatown\": 16,\n        \"Bayview\": 16,\n        \"Fisherman's Wharf\": 19\n    },\n    \"Bayview\": {\n        \"Financial District\": 19,\n        \"Chinatown\": 18,\n        \"Alamo Square\": 16,\n        \"Fisherman's Wharf\": 26\n    },\n    \"Fisherman's Wharf\": {\n        \"Financial District\": 11,\n        \"Chinatown\": 12,\n        \"Alamo Square\": 20,\n        \"Bayview\": 25\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Nancy\": {\"location\": \"Chinatown\", \"start_time\": 9, \"end_time\": 13, \"duration\": 90},\n    \"Mary\": {\"location\": \"Alamo Square\", \"start_time\": 7, \"end_time\": 21, \"duration\": 75},\n    \"Jessica\": {\"location\": \"Bayview\", \"start_time\": 11, \"end_time\": 14, \"duration\": 45},\n    \"Rebecca\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 7, \"end_time\": 8, \"duration\": 45}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    current_location = \"Financial District\"\n\n    # Meet Rebecca\n    rebecca_start_time = datetime.strptime(f\"{constraints['Rebecca']['start_time']}:00AM\", \"%H:%M%p\")\n    rebecca_end_time = datetime.strptime(f\"{constraints['Rebecca']['end_time']}:00AM\", \"%H:%M%p\")\n    rebecca_duration = constraints['Rebecca']['duration']\n    if current_time < rebecca_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < rebecca_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Fisherman's Wharf\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Fisherman's Wharf\"})\n        current_location = \"Fisherman's Wharf\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Fisherman's Wharf\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": rebecca_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=rebecca_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < rebecca_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Financial District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Financial District\"})\n        current_location = \"Financial District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Financial District\"])\n    elif current_time < rebecca_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Fisherman's Wharf\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Fisherman's Wharf\"})\n        current_location = \"Fisherman's Wharf\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Fisherman's Wharf\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": rebecca_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=rebecca_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Jessica\n    jessica_start_time = datetime.strptime(f\"{constraints['Jessica']['start_time']}:00AM\", \"%H:%M%p\")\n    jessica_end_time = datetime.strptime(f\"{constraints['Jessica']['end_time']}:00PM\", \"%H:%M%p\")\n    jessica_duration = constraints['Jessica']['duration']\n    if current_time < jessica_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < jessica_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Bayview\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Bayview\"})\n        current_location = \"Bayview\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Bayview\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": jessica_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=jessica_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < jessica_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Financial District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Financial District\"})\n        current_location = \"Financial District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Financial District\"])\n    elif current_time < jessica_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Bayview\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Bayview\"})\n        current_location = \"Bayview\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Bayview\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": jessica_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=jessica_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Mary\n    mary_start_time = datetime.strptime(f\"{constraints['Mary']['start_time']}:00AM\", \"%H:%M%p\")\n    mary_end_time = datetime.strptime(f\"{constraints['Mary']['end_time']}:00PM\", \"%H:%M%p\")\n    mary_duration = constraints['Mary']['duration']\n    if current_time < mary_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < mary_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Alamo Square\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Alamo Square\"})\n        current_location = \"Alamo Square\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Alamo Square\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": mary_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=mary_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < mary_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Financial District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Financial District\"})\n        current_location = \"Financial District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Financial District\"])\n    elif current_time < mary_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Alamo Square\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Alamo Square\"})\n        current_location = \"Alamo Square\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Alamo Square\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": mary_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=mary_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Nancy\n    nancy_start_time = datetime.strptime(f\"{constraints['Nancy']['start_time']}:00AM\", \"%H:%M%p\")\n    nancy_end_time = datetime.strptime(f\"{constraints['Nancy']['end_time']}:00PM\", \"%H:%M%p\")\n    nancy_duration = constraints['Nancy']['duration']\n    if current_time < nancy_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < nancy_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Chinatown\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Chinatown\"})\n        current_location = \"Chinatown\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Chinatown\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": nancy_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=nancy_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < nancy_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Financial District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Financial District\"})\n        current_location = \"Financial District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Financial District\"])\n    elif current_time < nancy_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Chinatown\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Chinatown\"})\n        current_location = \"Chinatown\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Chinatown\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": nancy_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=nancy_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_309"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Michelle",
            "start_time": "9:30AM",
            "end_time": "9:45AM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "George",
            "start_time": "10:30AM",
            "end_time": "11:00AM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Robert",
            "start_time": "11:19AM",
            "end_time": "11:49AM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "William",
            "start_time": "6:30PM",
            "end_time": "8:15PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Sunset District\": {\n        \"Russian Hill\": 24,\n        \"Chinatown\": 30,\n        \"Presidio\": 16,\n        \"Fisherman's Wharf\": 29\n    },\n    \"Russian Hill\": {\n        \"Sunset District\": 23,\n        \"Chinatown\": 9,\n        \"Presidio\": 14,\n        \"Fisherman's Wharf\": 7\n    },\n    \"Chinatown\": {\n        \"Sunset District\": 29,\n        \"Russian Hill\": 7,\n        \"Presidio\": 19,\n        \"Fisherman's Wharf\": 8\n    },\n    \"Presidio\": {\n        \"Sunset District\": 15,\n        \"Russian Hill\": 14,\n        \"Chinatown\": 21,\n        \"Fisherman's Wharf\": 19\n    },\n    \"Fisherman's Wharf\": {\n        \"Sunset District\": 27,\n        \"Russian Hill\": 7,\n        \"Chinatown\": 12,\n        \"Presidio\": 17\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"William\": {\"location\": \"Russian Hill\", \"start_time\": 18, \"end_time\": 20, \"duration\": 105},\n    \"Michelle\": {\"location\": \"Chinatown\", \"start_time\": 8, \"end_time\": 14, \"duration\": 15},\n    \"George\": {\"location\": \"Presidio\", \"start_time\": 10, \"end_time\": 18, \"duration\": 30},\n    \"Robert\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 9, \"end_time\": 14, \"duration\": 30}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    current_location = \"Sunset District\"\n\n    # Meet Robert\n    robert_start_time = datetime.strptime(f\"{constraints['Robert']['start_time']}:00AM\", \"%H:%M%p\")\n    robert_end_time = datetime.strptime(f\"{constraints['Robert']['end_time']}:00PM\", \"%H:%M%p\")\n    robert_duration = constraints['Robert']['duration']\n    if current_time < robert_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < robert_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Fisherman's Wharf\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Fisherman's Wharf\"})\n        current_location = \"Fisherman's Wharf\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Fisherman's Wharf\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": robert_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=robert_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < robert_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Sunset District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Sunset District\"})\n        current_location = \"Sunset District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Sunset District\"])\n    elif current_time < robert_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Fisherman's Wharf\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Fisherman's Wharf\"})\n        current_location = \"Fisherman's Wharf\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Fisherman's Wharf\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": robert_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=robert_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet George\n    george_start_time = datetime.strptime(f\"{constraints['George']['start_time']}:00AM\", \"%H:%M%p\")\n    george_end_time = datetime.strptime(f\"{constraints['George']['end_time']}:00PM\", \"%H:%M%p\")\n    george_duration = constraints['George']['duration']\n    if current_time < george_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < george_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Presidio\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Presidio\"})\n        current_location = \"Presidio\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Presidio\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": george_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=george_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < george_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Sunset District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Sunset District\"})\n        current_location = \"Sunset District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Sunset District\"])\n    elif current_time < george_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Presidio\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Presidio\"})\n        current_location = \"Presidio\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Presidio\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": george_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=george_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Michelle\n    michelle_start_time = datetime.strptime(f\"{constraints['Michelle']['start_time']}:00AM\", \"%H:%M%p\")\n    michelle_end_time = datetime.strptime(f\"{constraints['Michelle']['end_time']}:00PM\", \"%H:%M%p\")\n    michelle_duration = constraints['Michelle']['duration']\n    if current_time < michelle_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < michelle_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Chinatown\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Chinatown\"})\n        current_location = \"Chinatown\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Chinatown\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": michelle_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=michelle_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < michelle_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Sunset District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Sunset District\"})\n        current_location = \"Sunset District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Sunset District\"])\n    elif current_time < michelle_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Chinatown\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Chinatown\"})\n        current_location = \"Chinatown\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Chinatown\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": michelle_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=michelle_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet William\n    william_start_time = datetime.strptime(f\"{constraints['William']['start_time']}:00PM\", \"%H:%M%p\")\n    william_end_time = datetime.strptime(f\"{constraints['William']['end_time']}:00PM\", \"%H:%M%p\")\n    william_duration = constraints['William']['duration']\n    if current_time < william_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < william_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Russian Hill\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Russian Hill\"})\n        current_location = \"Russian Hill\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Russian Hill\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": william_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=william_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < william_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Sunset District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Sunset District\"})\n        current_location = \"Sunset District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Sunset District\"])\n    elif current_time < william_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Russian Hill\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Russian Hill\"})\n        current_location = \"Russian Hill\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Russian Hill\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": william_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=william_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_322"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Mary",
            "start_time": "9:25AM",
            "end_time": "10:10AM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Kevin",
            "start_time": "10:17AM",
            "end_time": "11:47AM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Stephanie",
            "start_time": "12:02PM",
            "end_time": "2:02PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Deborah",
            "start_time": "3:00PM",
            "end_time": "5:00PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Emily",
            "start_time": "5:19PM",
            "end_time": "7:04PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Embarcadero\": {\n        \"Golden Gate Park\": 25,\n        \"Haight-Ashbury\": 21,\n        \"Bayview\": 21,\n        \"Presidio\": 20,\n        \"Financial District\": 5\n    },\n    \"Golden Gate Park\": {\n        \"Embarcadero\": 25,\n        \"Haight-Ashbury\": 7,\n        \"Bayview\": 23,\n        \"Presidio\": 11,\n        \"Financial District\": 26\n    },\n    \"Haight-Ashbury\": {\n        \"Embarcadero\": 20,\n        \"Golden Gate Park\": 7,\n        \"Bayview\": 18,\n        \"Presidio\": 15,\n        \"Financial District\": 21\n    },\n    \"Bayview\": {\n        \"Embarcadero\": 19,\n        \"Golden Gate Park\": 22,\n        \"Haight-Ashbury\": 19,\n        \"Presidio\": 31,\n        \"Financial District\": 19\n    },\n    \"Presidio\": {\n        \"Embarcadero\": 20,\n        \"Golden Gate Park\": 12,\n        \"Haight-Ashbury\": 15,\n        \"Bayview\": 31,\n        \"Financial District\": 23\n    },\n    \"Financial District\": {\n        \"Embarcadero\": 4,\n        \"Golden Gate Park\": 23,\n        \"Haight-Ashbury\": 19,\n        \"Bayview\": 19,\n        \"Presidio\": 22\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Mary\": {\"location\": \"Golden Gate Park\", \"start_time\": 8, \"end_time\": 11, \"duration\": 45},\n    \"Kevin\": {\"location\": \"Haight-Ashbury\", \"start_time\": 10, \"end_time\": 16, \"duration\": 90},\n    \"Deborah\": {\"location\": \"Bayview\", \"start_time\": 15, \"end_time\": 19, \"duration\": 120},\n    \"Stephanie\": {\"location\": \"Presidio\", \"start_time\": 10, \"end_time\": 17, \"duration\": 120},\n    \"Emily\": {\"location\": \"Financial District\", \"start_time\": 11, \"end_time\": 21, \"duration\": 105}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    current_location = \"Embarcadero\"\n\n    # Meet Mary\n    mary_start_time = datetime.strptime(f\"{constraints['Mary']['start_time']}:00AM\", \"%H:%M%p\")\n    mary_end_time = datetime.strptime(f\"{constraints['Mary']['end_time']}:00PM\", \"%H:%M%p\")\n    mary_duration = constraints['Mary']['duration']\n    if current_time < mary_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < mary_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Golden Gate Park\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n        current_location = \"Golden Gate Park\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Golden Gate Park\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": mary_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=mary_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < mary_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Embarcadero\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Embarcadero\"})\n        current_location = \"Embarcadero\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Embarcadero\"])\n    elif current_time < mary_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Golden Gate Park\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n        current_location = \"Golden Gate Park\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Golden Gate Park\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": mary_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=mary_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Kevin\n    kevin_start_time = datetime.strptime(f\"{constraints['Kevin']['start_time']}:00AM\", \"%H:%M%p\")\n    kevin_end_time = datetime.strptime(f\"{constraints['Kevin']['end_time']}:00PM\", \"%H:%M%p\")\n    kevin_duration = constraints['Kevin']['duration']\n    if current_time < kevin_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < kevin_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Haight-Ashbury\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Haight-Ashbury\"})\n        current_location = \"Haight-Ashbury\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Haight-Ashbury\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": kevin_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=kevin_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < kevin_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Embarcadero\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Embarcadero\"})\n        current_location = \"Embarcadero\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Embarcadero\"])\n    elif current_time < kevin_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Haight-Ashbury\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Haight-Ashbury\"})\n        current_location = \"Haight-Ashbury\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Haight-Ashbury\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": kevin_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=kevin_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Deborah\n    deborah_start_time = datetime.strptime(f\"{constraints['Deborah']['start_time']}:00PM\", \"%H:%M%p\")\n    deborah_end_time = datetime.strptime(f\"{constraints['Deborah']['end_time']}:00PM\", \"%H:%M%p\")\n    deborah_duration = constraints['Deborah']['duration']\n    if current_time < deborah_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < deborah_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Bayview\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Bayview\"})\n        current_location = \"Bayview\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Bayview\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": deborah_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=deborah_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < deborah_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Embarcadero\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Embarcadero\"})\n        current_location = \"Embarcadero\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Embarcadero\"])\n    elif current_time < deborah_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Bayview\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Bayview\"})\n        current_location = \"Bayview\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Bayview\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": deborah_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=deborah_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Stephanie\n    stephanie_start_time = datetime.strptime(f\"{constraints['Stephanie']['start_time']}:00AM\", \"%H:%M%p\")\n    stephanie_end_time = datetime.strptime(f\"{constraints['Stephanie']['end_time']}:00PM\", \"%H:%M%p\")\n    stephanie_duration = constraints['Stephanie']['duration']\n    if current_time < stephanie_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < stephanie_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Presidio\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Presidio\"})\n        current_location = \"Presidio\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Presidio\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": stephanie_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=stephanie_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < stephanie_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Embarcadero\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Embarcadero\"})\n        current_location = \"Embarcadero\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Embarcadero\"])\n    elif current_time < stephanie_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Presidio\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Presidio\"})\n        current_location = \"Presidio\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Presidio\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": stephanie_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=stephanie_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Emily\n    emily_start_time = datetime.strptime(f\"{constraints['Emily']['start_time']}:00AM\", \"%H:%M%p\")\n    emily_end_time = datetime.strptime(f\"{constraints['Emily']['end_time']}:00PM\", \"%H:%M%p\")\n    emily_duration = constraints['Emily']['duration']\n    if current_time < emily_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < emily_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Financial District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Financial District\"})\n        current_location = \"Financial District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Financial District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": emily_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=emily_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < emily_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Embarcadero\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Embarcadero\"})\n        current_location = \"Embarcadero\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Embarcadero\"])\n    elif current_time < emily_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Financial District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Financial District\"})\n        current_location = \"Financial District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Financial District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": emily_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=emily_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_479"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Timothy",
            "start_time": "8:45PM",
            "end_time": "9:30PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Alamo Square\": {\n        \"Richmond District\": 12,\n        \"Richmond District\": 13\n    },\n    \"Richmond District\": {\n        \"Alamo Square\": 13,\n        \"Alamo Square\": 12\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Timothy\": {\"location\": \"Richmond District\", \"start_time\": 20, \"end_time\": 21, \"duration\": 45}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    current_location = \"Alamo Square\"\n\n    # Meet Timothy\n    timothy_start_time = datetime.strptime(f\"{constraints['Timothy']['start_time']}:00PM\", \"%H:%M%p\")\n    timothy_end_time = datetime.strptime(f\"{constraints['Timothy']['end_time']}:00PM\", \"%H:%M%p\")\n    timothy_duration = constraints['Timothy']['duration']\n    if current_time < timothy_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < timothy_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Richmond District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Richmond District\"})\n        current_location = \"Richmond District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Richmond District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": timothy_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=timothy_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < timothy_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Alamo Square\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Alamo Square\"})\n        current_location = \"Alamo Square\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Alamo Square\"])\n    elif current_time < timothy_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Richmond District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Richmond District\"})\n        current_location = \"Richmond District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Richmond District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": timothy_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=timothy_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_98"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Helen",
            "start_time": "9:08AM",
            "end_time": "11:08AM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Kimberly",
            "start_time": "4:30PM",
            "end_time": "5:15PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Patricia",
            "start_time": "6:00PM",
            "end_time": "8:00PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Nob Hill\": {\n        \"North Beach\": 8,\n        \"Fisherman's Wharf\": 11,\n        \"Bayview\": 19\n    },\n    \"North Beach\": {\n        \"Nob Hill\": 7,\n        \"Fisherman's Wharf\": 5,\n        \"Bayview\": 22\n    },\n    \"Fisherman's Wharf\": {\n        \"Nob Hill\": 11,\n        \"North Beach\": 6,\n        \"Bayview\": 26\n    },\n    \"Bayview\": {\n        \"Nob Hill\": 20,\n        \"North Beach\": 21,\n        \"Fisherman's Wharf\": 25\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Helen\": {\"location\": \"North Beach\", \"start_time\": 7, \"end_time\": 16, \"duration\": 120},\n    \"Kimberly\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 16, \"end_time\": 21, \"duration\": 45},\n    \"Patricia\": {\"location\": \"Bayview\", \"start_time\": 18, \"end_time\": 21, \"duration\": 120}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    current_location = \"Nob Hill\"\n\n    # Meet Helen\n    helen_start_time = datetime.strptime(f\"{constraints['Helen']['start_time']}:00AM\", \"%H:%M%p\")\n    helen_end_time = datetime.strptime(f\"{constraints['Helen']['end_time']}:00PM\", \"%H:%M%p\")\n    helen_duration = constraints['Helen']['duration']\n    if current_time < helen_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < helen_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"North Beach\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"North Beach\"})\n        current_location = \"North Beach\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"North Beach\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": helen_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=helen_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < helen_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Nob Hill\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Nob Hill\"})\n        current_location = \"Nob Hill\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Nob Hill\"])\n    elif current_time < helen_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"North Beach\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"North Beach\"})\n        current_location = \"North Beach\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"North Beach\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": helen_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=helen_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Kimberly\n    kimberly_start_time = datetime.strptime(f\"{constraints['Kimberly']['start_time']}:00PM\", \"%H:%M%p\")\n    kimberly_end_time = datetime.strptime(f\"{constraints['Kimberly']['end_time']}:00PM\", \"%H:%M%p\")\n    kimberly_duration = constraints['Kimberly']['duration']\n    if current_time < kimberly_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < kimberly_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Fisherman's Wharf\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Fisherman's Wharf\"})\n        current_location = \"Fisherman's Wharf\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Fisherman's Wharf\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": kimberly_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=kimberly_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < kimberly_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Nob Hill\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Nob Hill\"})\n        current_location = \"Nob Hill\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Nob Hill\"])\n    elif current_time < kimberly_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Fisherman's Wharf\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Fisherman's Wharf\"})\n        current_location = \"Fisherman's Wharf\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Fisherman's Wharf\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": kimberly_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=kimberly_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Patricia\n    patricia_start_time = datetime.strptime(f\"{constraints['Patricia']['start_time']}:00PM\", \"%H:%M%p\")\n    patricia_end_time = datetime.strptime(f\"{constraints['Patricia']['end_time']}:00PM\", \"%H:%M%p\")\n    patricia_duration = constraints['Patricia']['duration']\n    if current_time < patricia_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < patricia_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Bayview\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Bayview\"})\n        current_location = \"Bayview\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Bayview\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": patricia_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=patricia_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < patricia_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Nob Hill\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Nob Hill\"})\n        current_location = \"Nob Hill\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Nob Hill\"])\n    elif current_time < patricia_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Bayview\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Bayview\"})\n        current_location = \"Bayview\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Bayview\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": patricia_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=patricia_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_222"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Matthew",
            "start_time": "11:00AM",
            "end_time": "12:30PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Kimberly",
            "start_time": "1:00PM",
            "end_time": "3:00PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Nancy",
            "start_time": "3:16PM",
            "end_time": "3:31PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Kenneth",
            "start_time": "3:53PM",
            "end_time": "4:53PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Margaret",
            "start_time": "5:11PM",
            "end_time": "6:41PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Helen",
            "start_time": "7:45PM",
            "end_time": "8:45PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Rebecca",
            "start_time": "9:15PM",
            "end_time": "10:15PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Russian Hill\": {\n        \"Presidio\": 14,\n        \"Chinatown\": 9,\n        \"Pacific Heights\": 7,\n        \"Richmond District\": 14,\n        \"Fisherman's Wharf\": 7,\n        \"Golden Gate Park\": 21,\n        \"Bayview\": 23\n    },\n    \"Presidio\": {\n        \"Russian Hill\": 14,\n        \"Chinatown\": 21,\n        \"Pacific Heights\": 11,\n        \"Richmond District\": 7,\n        \"Fisherman's Wharf\": 19,\n        \"Golden Gate Park\": 12,\n        \"Bayview\": 31\n    },\n    \"Chinatown\": {\n        \"Russian Hill\": 7,\n        \"Presidio\": 19,\n        \"Pacific Heights\": 10,\n        \"Richmond District\": 20,\n        \"Fisherman's Wharf\": 8,\n        \"Golden Gate Park\": 23,\n        \"Bayview\": 22\n    },\n    \"Pacific Heights\": {\n        \"Russian Hill\": 7,\n        \"Presidio\": 11,\n        \"Chinatown\": 11,\n        \"Richmond District\": 12,\n        \"Fisherman's Wharf\": 13,\n        \"Golden Gate Park\": 15,\n        \"Bayview\": 22\n    },\n    \"Richmond District\": {\n        \"Russian Hill\": 13,\n        \"Presidio\": 7,\n        \"Chinatown\": 20,\n        \"Pacific Heights\": 10,\n        \"Fisherman's Wharf\": 18,\n        \"Golden Gate Park\": 9,\n        \"Bayview\": 26\n    },\n    \"Fisherman's Wharf\": {\n        \"Russian Hill\": 7,\n        \"Presidio\": 17,\n        \"Chinatown\": 12,\n        \"Pacific Heights\": 12,\n        \"Richmond District\": 18,\n        \"Golden Gate Park\": 25,\n        \"Bayview\": 26\n    },\n    \"Golden Gate Park\": {\n        \"Russian Hill\": 19,\n        \"Presidio\": 11,\n        \"Chinatown\": 23,\n        \"Pacific Heights\": 16,\n        \"Richmond District\": 7,\n        \"Fisherman's Wharf\": 24,\n        \"Bayview\": 23\n    },\n    \"Bayview\": {\n        \"Russian Hill\": 23,\n        \"Presidio\": 31,\n        \"Chinatown\": 18,\n        \"Pacific Heights\": 23,\n        \"Richmond District\": 25,\n        \"Fisherman's Wharf\": 25,\n        \"Golden Gate Park\": 22\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Matthew\": {\"location\": \"Presidio\", \"start_time\": 11, \"end_time\": 21, \"duration\": 90},\n    \"Margaret\": {\"location\": \"Chinatown\", \"start_time\": 9, \"end_time\": 18, \"duration\": 90},\n    \"Nancy\": {\"location\": \"Pacific Heights\", \"start_time\": 14, \"end_time\": 17, \"duration\": 15},\n    \"Helen\": {\"location\": \"Richmond District\", \"start_time\": 19, \"end_time\": 22, \"duration\": 60},\n    \"Rebecca\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 21, \"end_time\": 22, \"duration\": 60},\n    \"Kimberly\": {\"location\": \"Golden Gate Park\", \"start_time\": 13, \"end_time\": 17, \"duration\": 120},\n    \"Kenneth\": {\"location\": \"Bayview\", \"start_time\": 14, \"end_time\": 19, \"duration\": 60}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    current_location = \"Russian Hill\"\n\n    # Meet Matthew\n    matthew_start_time = datetime.strptime(f\"{constraints['Matthew']['start_time']}:00AM\", \"%H:%M%p\")\n    matthew_end_time = datetime.strptime(f\"{constraints['Matthew']['end_time']}:00PM\", \"%H:%M%p\")\n    matthew_duration = constraints['Matthew']['duration']\n    if current_time < matthew_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < matthew_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Presidio\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Presidio\"})\n        current_location = \"Presidio\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Presidio\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": matthew_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=matthew_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < matthew_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Russian Hill\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Russian Hill\"})\n        current_location = \"Russian Hill\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Russian Hill\"])\n    elif current_time < matthew_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Presidio\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Presidio\"})\n        current_location = \"Presidio\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Presidio\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": matthew_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=matthew_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Margaret\n    margaret_start_time = datetime.strptime(f\"{constraints['Margaret']['start_time']}:00AM\", \"%H:%M%p\")\n    margaret_end_time = datetime.strptime(f\"{constraints['Margaret']['end_time']}:00PM\", \"%H:%M%p\")\n    margaret_duration = constraints['Margaret']['duration']\n    if current_time < margaret_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < margaret_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Chinatown\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Chinatown\"})\n        current_location = \"Chinatown\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Chinatown\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": margaret_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=margaret_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < margaret_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Russian Hill\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Russian Hill\"})\n        current_location = \"Russian Hill\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Russian Hill\"])\n    elif current_time < margaret_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Chinatown\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Chinatown\"})\n        current_location = \"Chinatown\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Chinatown\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": margaret_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=margaret_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Nancy\n    nancy_start_time = datetime.strptime(f\"{constraints['Nancy']['start_time']}:00PM\", \"%H:%M%p\")\n    nancy_end_time = datetime.strptime(f\"{constraints['Nancy']['end_time']}:00PM\", \"%H:%M%p\")\n    nancy_duration = constraints['Nancy']['duration']\n    if current_time < nancy_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < nancy_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Pacific Heights\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Pacific Heights\"})\n        current_location = \"Pacific Heights\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Pacific Heights\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": nancy_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=nancy_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < nancy_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Russian Hill\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Russian Hill\"})\n        current_location = \"Russian Hill\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Russian Hill\"])\n    elif current_time < nancy_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Pacific Heights\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Pacific Heights\"})\n        current_location = \"Pacific Heights\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Pacific Heights\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": nancy_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=nancy_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Helen\n    helen_start_time = datetime.strptime(f\"{constraints['Helen']['start_time']}:00PM\", \"%H:%M%p\")\n    helen_end_time = datetime.strptime(f\"{constraints['Helen']['end_time']}:00PM\", \"%H:%M%p\")\n    helen_duration = constraints['Helen']['duration']\n    if current_time < helen_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < helen_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Richmond District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Richmond District\"})\n        current_location = \"Richmond District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Richmond District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": helen_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=helen_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < helen_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Russian Hill\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Russian Hill\"})\n        current_location = \"Russian Hill\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Russian Hill\"])\n    elif current_time < helen_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Richmond District\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Richmond District\"})\n        current_location = \"Richmond District\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Richmond District\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": helen_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=helen_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Rebecca\n    rebecca_start_time = datetime.strptime(f\"{constraints['Rebecca']['start_time']}:00PM\", \"%H:%M%p\")\n    rebecca_end_time = datetime.strptime(f\"{constraints['Rebecca']['end_time']}:00PM\", \"%H:%M%p\")\n    rebecca_duration = constraints['Rebecca']['duration']\n    if current_time < rebecca_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < rebecca_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Fisherman's Wharf\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Fisherman's Wharf\"})\n        current_location = \"Fisherman's Wharf\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Fisherman's Wharf\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": rebecca_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=rebecca_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < rebecca_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Russian Hill\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Russian Hill\"})\n        current_location = \"Russian Hill\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Russian Hill\"])\n    elif current_time < rebecca_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Fisherman's Wharf\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Fisherman's Wharf\"})\n        current_location = \"Fisherman's Wharf\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Fisherman's Wharf\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": rebecca_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=rebecca_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Kimberly\n    kimberly_start_time = datetime.strptime(f\"{constraints['Kimberly']['start_time']}:00PM\", \"%H:%M%p\")\n    kimberly_end_time = datetime.strptime(f\"{constraints['Kimberly']['end_time']}:00PM\", \"%H:%M%p\")\n    kimberly_duration = constraints['Kimberly']['duration']\n    if current_time < kimberly_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < kimberly_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Golden Gate Park\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n        current_location = \"Golden Gate Park\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Golden Gate Park\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": kimberly_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=kimberly_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < kimberly_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Russian Hill\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Russian Hill\"})\n        current_location = \"Russian Hill\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Russian Hill\"])\n    elif current_time < kimberly_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Golden Gate Park\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n        current_location = \"Golden Gate Park\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Golden Gate Park\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": kimberly_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=kimberly_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Kenneth\n    kenneth_start_time = datetime.strptime(f\"{constraints['Kenneth']['start_time']}:00PM\", \"%H:%M%p\")\n    kenneth_end_time = datetime.strptime(f\"{constraints['Kenneth']['end_time']}:00PM\", \"%H:%M%p\")\n    kenneth_duration = constraints['Kenneth']['duration']\n    if current_time < kenneth_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < kenneth_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Bayview\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Bayview\"})\n        current_location = \"Bayview\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Bayview\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": kenneth_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=kenneth_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < kenneth_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Russian Hill\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Russian Hill\"})\n        current_location = \"Russian Hill\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Russian Hill\"])\n    elif current_time < kenneth_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Bayview\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Bayview\"})\n        current_location = \"Bayview\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Bayview\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": kenneth_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=kenneth_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_629"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Rebecca",
            "start_time": "9:19AM",
            "end_time": "10:49AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "James",
            "start_time": "11:05AM",
            "end_time": "12:35PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Sarah",
            "start_time": "12:54PM",
            "end_time": "2:24PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Melissa",
            "start_time": "2:49PM",
            "end_time": "4:19PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Amanda",
            "start_time": "6:30PM",
            "end_time": "8:00PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"The Castro\": {\n        \"Bayview\": 19,\n        \"Pacific Heights\": 16,\n        \"Alamo Square\": 8,\n        \"Fisherman's Wharf\": 24,\n        \"Golden Gate Park\": 11\n    },\n    \"Bayview\": {\n        \"The Castro\": 20,\n        \"Pacific Heights\": 23,\n        \"Alamo Square\": 16,\n        \"Fisherman's Wharf\": 25,\n        \"Golden Gate Park\": 22\n    },\n    \"Pacific Heights\": {\n        \"The Castro\": 16,\n        \"Bayview\": 22,\n        \"Alamo Square\": 10,\n        \"Fisherman's Wharf\": 13,\n        \"Golden Gate Park\": 15\n    },\n    \"Alamo Square\": {\n        \"The Castro\": 8,\n        \"Bayview\": 16,\n        \"Pacific Heights\": 10,\n        \"Fisherman's Wharf\": 19,\n        \"Golden Gate Park\": 9\n    },\n    \"Fisherman's Wharf\": {\n        \"The Castro\": 26,\n        \"Bayview\": 26,\n        \"Pacific Heights\": 12,\n        \"Alamo Square\": 20,\n        \"Golden Gate Park\": 25\n    },\n    \"Golden Gate Park\": {\n        \"The Castro\": 13,\n        \"Bayview\": 23,\n        \"Pacific Heights\": 16,\n        \"Alamo Square\": 10,\n        \"Fisherman's Wharf\": 24\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Rebecca\": {\"location\": \"Bayview\", \"start_time\": 9, \"end_time\": 12, \"duration\": 90},\n    \"Amanda\": {\"location\": \"Pacific Heights\", \"start_time\": 18, \"end_time\": 21, \"duration\": 90},\n    \"James\": {\"location\": \"Alamo Square\", \"start_time\": 9, \"end_time\": 21, \"duration\": 90},\n    \"Sarah\": {\"location\": \"Fisherman's Wharf\", \"start_time\": 8, \"end_time\": 21, \"duration\": 90},\n    \"Melissa\": {\"location\": \"Golden Gate Park\", \"start_time\": 9, \"end_time\": 19, \"duration\": 90}\n}\n\ndef compute_schedule():\n    schedule = []\n    current_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    current_location = \"The Castro\"\n\n    # Meet Rebecca\n    rebecca_start_time = datetime.strptime(f\"{constraints['Rebecca']['start_time']}:00AM\", \"%H:%M%p\")\n    rebecca_end_time = datetime.strptime(f\"{constraints['Rebecca']['end_time']}:00PM\", \"%H:%M%p\")\n    rebecca_duration = constraints['Rebecca']['duration']\n    if current_time < rebecca_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < rebecca_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Bayview\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Bayview\"})\n        current_location = \"Bayview\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Bayview\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": rebecca_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=rebecca_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < rebecca_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"The Castro\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"The Castro\"})\n        current_location = \"The Castro\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"The Castro\"])\n    elif current_time < rebecca_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Bayview\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Bayview\"})\n        current_location = \"Bayview\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Bayview\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": rebecca_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=rebecca_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet James\n    james_start_time = datetime.strptime(f\"{constraints['James']['start_time']}:00AM\", \"%H:%M%p\")\n    james_end_time = datetime.strptime(f\"{constraints['James']['end_time']}:00PM\", \"%H:%M%p\")\n    james_duration = constraints['James']['duration']\n    if current_time < james_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < james_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Alamo Square\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Alamo Square\"})\n        current_location = \"Alamo Square\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Alamo Square\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": james_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=james_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < james_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"The Castro\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"The Castro\"})\n        current_location = \"The Castro\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"The Castro\"])\n    elif current_time < james_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Alamo Square\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Alamo Square\"})\n        current_location = \"Alamo Square\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Alamo Square\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": james_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=james_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Sarah\n    sarah_start_time = datetime.strptime(f\"{constraints['Sarah']['start_time']}:00AM\", \"%H:%M%p\")\n    sarah_end_time = datetime.strptime(f\"{constraints['Sarah']['end_time']}:00PM\", \"%H:%M%p\")\n    sarah_duration = constraints['Sarah']['duration']\n    if current_time < sarah_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < sarah_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Fisherman's Wharf\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Fisherman's Wharf\"})\n        current_location = \"Fisherman's Wharf\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Fisherman's Wharf\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": sarah_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=sarah_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < sarah_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"The Castro\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"The Castro\"})\n        current_location = \"The Castro\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"The Castro\"])\n    elif current_time < sarah_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Fisherman's Wharf\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Fisherman's Wharf\"})\n        current_location = \"Fisherman's Wharf\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Fisherman's Wharf\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": sarah_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=sarah_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Melissa\n    melissa_start_time = datetime.strptime(f\"{constraints['Melissa']['start_time']}:00AM\", \"%H:%M%p\")\n    melissa_end_time = datetime.strptime(f\"{constraints['Melissa']['end_time']}:00PM\", \"%H:%M%p\")\n    melissa_duration = constraints['Melissa']['duration']\n    if current_time < melissa_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < melissa_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Golden Gate Park\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n        current_location = \"Golden Gate Park\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Golden Gate Park\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": melissa_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=melissa_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < melissa_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"The Castro\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"The Castro\"})\n        current_location = \"The Castro\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"The Castro\"])\n    elif current_time < melissa_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Golden Gate Park\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n        current_location = \"Golden Gate Park\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Golden Gate Park\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": melissa_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=melissa_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    # Meet Amanda\n    amanda_start_time = datetime.strptime(f\"{constraints['Amanda']['start_time']}:00PM\", \"%H:%M%p\")\n    amanda_end_time = datetime.strptime(f\"{constraints['Amanda']['end_time']}:00PM\", \"%H:%M%p\")\n    amanda_duration = constraints['Amanda']['duration']\n    if current_time < amanda_start_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < amanda_start_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Pacific Heights\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Pacific Heights\"})\n        current_location = \"Pacific Heights\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Pacific Heights\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": amanda_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=amanda_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        while current_time < amanda_end_time:\n            schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n            current_time += timedelta(minutes=1)\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"The Castro\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"The Castro\"})\n        current_location = \"The Castro\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"The Castro\"])\n    elif current_time < amanda_end_time:\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"travel\", \"location\": current_location, \"duration\": travel_distances[current_location][\"Pacific Heights\"], \"time\": current_time.strftime(\"%I:%M%p\"), \"to\": \"Pacific Heights\"})\n        current_location = \"Pacific Heights\"\n        current_time += timedelta(minutes=travel_distances[current_location][\"Pacific Heights\"])\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n        schedule.append({\"action\": \"meet\", \"location\": current_location, \"duration\": amanda_duration, \"time\": current_time.strftime(\"%I:%M%p\")})\n        current_time += timedelta(minutes=amanda_duration)\n        schedule.append({\"action\": \"wait\", \"location\": current_location, \"time\": current_time.strftime(\"%I:%M%p\")})\n\n    return schedule\n\ndef main():\n    schedule = compute_schedule()\n    print(json.dumps({\"schedule\": schedule}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
      "count": "meeting_planning_example_468"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Union Square",
            "person": "William",
            "start_time": "10:45AM",
            "end_time": "11:30AM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Sandra",
            "start_time": "11:40AM",
            "end_time": "11:55AM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Elizabeth",
            "start_time": "12:15PM",
            "end_time": "2:00PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Carol",
            "start_time": "2:09PM",
            "end_time": "3:09PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Anthony",
            "start_time": "3:32PM",
            "end_time": "4:47PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Stephanie",
            "start_time": "4:54PM",
            "end_time": "6:09PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Barbara",
            "start_time": "7:15PM",
            "end_time": "8:30PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Kenneth",
            "start_time": "9:15PM",
            "end_time": "10:00PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Marina District\": {\n        \"Richmond District\": 11,\n        \"Union Square\": 16,\n        \"Nob Hill\": 12,\n        \"Fisherman's Wharf\": 10,\n        \"Golden Gate Park\": 18,\n        \"Embarcadero\": 14,\n        \"Financial District\": 17,\n        \"North Beach\": 11,\n        \"Presidio\": 10\n    },\n    \"Richmond District\": {\n        \"Marina District\": 9,\n        \"Union Square\": 21,\n        \"Nob Hill\": 17,\n        \"Fisherman's Wharf\": 18,\n        \"Golden Gate Park\": 9,\n        \"Embarcadero\": 19,\n        \"Financial District\": 22,\n        \"North Beach\": 17,\n        \"Presidio\": 7\n    },\n    \"Union Square\": {\n        \"Marina District\": 18,\n        \"Richmond District\": 20,\n        \"Nob Hill\": 9,\n        \"Fisherman's Wharf\": 15,\n        \"Golden Gate Park\": 22,\n        \"Embarcadero\": 11,\n        \"Financial District\": 9,\n        \"North Beach\": 10,\n        \"Presidio\": 24\n    },\n    \"Nob Hill\": {\n        \"Marina District\": 11,\n        \"Richmond District\": 14,\n        \"Union Square\": 7,\n        \"Fisherman's Wharf\": 10,\n        \"Golden Gate Park\": 17,\n        \"Embarcadero\": 9,\n        \"Financial District\": 9,\n        \"North Beach\": 8,\n        \"Presidio\": 17\n    },\n    \"Fisherman's Wharf\": {\n        \"Marina District\": 9,\n        \"Richmond District\": 18,\n        \"Union Square\": 13,\n        \"Nob Hill\": 11,\n        \"Golden Gate Park\": 25,\n        \"Embarcadero\": 8,\n        \"Financial District\": 11,\n        \"North Beach\": 6,\n        \"Presidio\": 17\n    },\n    \"Golden Gate Park\": {\n        \"Marina District\": 16,\n        \"Richmond District\": 7,\n        \"Union Square\": 22,\n        \"Nob Hill\": 20,\n        \"Fisherman's Wharf\": 24,\n        \"Embarcadero\": 25,\n        \"Financial District\": 26,\n        \"North Beach\": 23,\n        \"Presidio\": 11\n    },\n    \"Embarcadero\": {\n        \"Marina District\": 12,\n        \"Richmond District\": 21,\n        \"Union Square\": 10,\n        \"Nob Hill\": 10,\n        \"Fisherman's Wharf\": 6,\n        \"Golden Gate Park\": 25,\n        \"Financial District\": 5,\n        \"North Beach\": 5,\n        \"Presidio\": 20\n    },\n    \"Financial District\": {\n        \"Marina District\": 15,\n        \"Richmond District\": 21,\n        \"Union Square\": 9,\n        \"Nob Hill\": 8,\n        \"Fisherman's Wharf\": 10,\n        \"Golden Gate Park\": 23,\n        \"Embarcadero\": 4,\n        \"North Beach\": 7,\n        \"Presidio\": 22\n    },\n    \"North Beach\": {\n        \"Marina District\": 9,\n        \"Richmond District\": 18,\n        \"Union Square\": 7,\n        \"Nob Hill\": 7,\n        \"Fisherman's Wharf\": 5,\n        \"Golden Gate Park\": 22,\n        \"Embarcadero\": 6,\n        \"Financial District\": 8,\n        \"Presidio\": 17\n    },\n    \"Presidio\": {\n        \"Marina District\": 11,\n        \"Richmond District\": 7,\n        \"Union Square\": 22,\n        \"Nob Hill\": 18,\n        \"Fisherman's Wharf\": 19,\n        \"Golden Gate Park\": 12,\n        \"Embarcadero\": 20,\n        \"Financial District\": 23,\n        \"North Beach\": 18\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Stephanie\": {\"start\": \"4:15PM\", \"end\": \"9:30PM\", \"duration\": 75},\n    \"William\": {\"start\": \"10:45AM\", \"end\": \"5:30PM\", \"duration\": 45},\n    \"Elizabeth\": {\"start\": \"12:15PM\", \"end\": \"3:00PM\", \"duration\": 105},\n    \"Joseph\": {\"start\": \"12:45PM\", \"end\": \"2:00PM\", \"duration\": 75},\n    \"Anthony\": {\"start\": \"1:00PM\", \"end\": \"8:30PM\", \"duration\": 75},\n    \"Barbara\": {\"start\": \"7:15PM\", \"end\": \"8:30PM\", \"duration\": 75},\n    \"Carol\": {\"start\": \"11:45AM\", \"end\": \"4:15PM\", \"duration\": 60},\n    \"Sandra\": {\"start\": \"10:00AM\", \"end\": \"12:30PM\", \"duration\": 15},\n    \"Kenneth\": {\"start\": \"9:15PM\", \"end\": \"10:15PM\", \"duration\": 45}\n}\n\n# Start time\nstart_time = \"9:00AM\"\n\n# Initialize schedule\nschedule = []\n\n# Function to calculate travel time\ndef calculate_travel_time(origin, destination):\n    return travel_distances[origin][destination]\n\n# Function to add event to schedule\ndef add_event(action, location, time, duration=None):\n    schedule.append({\"action\": action, \"location\": location, \"time\": time})\n    if duration:\n        schedule.append({\"action\": \"wait\", \"location\": location, \"time\": time})\n        schedule.append({\"action\": \"meet\", \"location\": location, \"duration\": duration, \"time\": time})\n\n# Function to find optimal schedule\ndef find_optimal_schedule():\n    current_time = datetime.strptime(start_time, \"%I:%M%p\")\n    for person, constraint in constraints.items():\n        start_time_str = constraint[\"start\"]\n        end_time_str = constraint[\"end\"]\n        start_time = datetime.strptime(start_time_str, \"%I:%M%p\")\n        end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n        if start_time > current_time:\n            travel_time = calculate_travel_time(\"Marina District\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n        elif end_time < current_time:\n            continue\n        else:\n            travel_time = calculate_travel_time(\"Marina District\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            wait_time = (start_time - current_time).total_seconds() / 60\n            current_time += timedelta(minutes=wait_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n            current_time += timedelta(minutes=constraint[\"duration\"])\n            travel_time = calculate_travel_time(constraint[\"start\"][:-3], \"Marina District\")\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", \"Marina District\", current_time.strftime(\"%I:%M%p\"), travel_time)\n\n# Find optimal schedule\nfind_optimal_schedule()\n\n# Add remaining events\ncurrent_time = datetime.strptime(start_time, \"%I:%M%p\")\nfor person, constraint in constraints.items():\n    end_time_str = constraint[\"end\"]\n    end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n    if end_time < current_time:\n        continue\n    else:\n        travel_time = calculate_travel_time(\"Marina District\", constraint[\"start\"][:-3])\n        current_time += timedelta(minutes=travel_time)\n        add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n        wait_time = (end_time - current_time).total_seconds() / 60\n        current_time += timedelta(minutes=wait_time)\n        add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n\n# Add Kenneth's event\nadd_event(\"travel\", \"Presidio\", current_time.strftime(\"%I:%M%p\"), calculate_travel_time(\"Marina District\", \"Presidio\"))\nadd_event(\"wait\", \"Presidio\", current_time.strftime(\"%I:%M%p\"))\nadd_event(\"meet\", \"Presidio\", current_time.strftime(\"%I:%M%p\"), 45)\n\n# Convert schedule to JSON\nschedule_json = json.dumps(schedule, indent=4)\n\n# Print schedule\nprint(\"SOLUTION:\")\nprint(schedule_json)\n```",
      "count": "meeting_planning_example_828"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Kimberly",
            "start_time": "9:10AM",
            "end_time": "9:25AM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Kenneth",
            "start_time": "12:15PM",
            "end_time": "2:00PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Brian",
            "start_time": "2:10PM",
            "end_time": "2:55PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Joseph",
            "start_time": "3:30PM",
            "end_time": "4:45PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Betty",
            "start_time": "7:00PM",
            "end_time": "8:30PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Melissa",
            "start_time": "8:36PM",
            "end_time": "9:06PM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Barbara",
            "start_time": "9:14PM",
            "end_time": "9:29PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Union Square\": {\n        \"The Castro\": 17,\n        \"North Beach\": 10,\n        \"Embarcadero\": 11,\n        \"Alamo Square\": 15,\n        \"Nob Hill\": 9,\n        \"Presidio\": 24,\n        \"Fisherman's Wharf\": 15,\n        \"Mission District\": 14,\n        \"Haight-Ashbury\": 18\n    },\n    \"The Castro\": {\n        \"Union Square\": 19,\n        \"North Beach\": 20,\n        \"Embarcadero\": 22,\n        \"Alamo Square\": 8,\n        \"Nob Hill\": 16,\n        \"Presidio\": 20,\n        \"Fisherman's Wharf\": 24,\n        \"Mission District\": 7,\n        \"Haight-Ashbury\": 6\n    },\n    \"North Beach\": {\n        \"Union Square\": 7,\n        \"The Castro\": 23,\n        \"Embarcadero\": 6,\n        \"Alamo Square\": 16,\n        \"Nob Hill\": 7,\n        \"Presidio\": 17,\n        \"Fisherman's Wharf\": 5,\n        \"Mission District\": 18,\n        \"Haight-Ashbury\": 18\n    },\n    \"Embarcadero\": {\n        \"Union Square\": 10,\n        \"The Castro\": 25,\n        \"North Beach\": 5,\n        \"Alamo Square\": 19,\n        \"Nob Hill\": 10,\n        \"Presidio\": 20,\n        \"Fisherman's Wharf\": 6,\n        \"Mission District\": 20,\n        \"Haight-Ashbury\": 21\n    },\n    \"Alamo Square\": {\n        \"Union Square\": 14,\n        \"The Castro\": 8,\n        \"North Beach\": 15,\n        \"Embarcadero\": 16,\n        \"Nob Hill\": 11,\n        \"Presidio\": 17,\n        \"Fisherman's Wharf\": 19,\n        \"Mission District\": 10,\n        \"Haight-Ashbury\": 5\n    },\n    \"Nob Hill\": {\n        \"Union Square\": 7,\n        \"The Castro\": 17,\n        \"North Beach\": 8,\n        \"Embarcadero\": 9,\n        \"Alamo Square\": 11,\n        \"Presidio\": 17,\n        \"Fisherman's Wharf\": 10,\n        \"Mission District\": 13,\n        \"Haight-Ashbury\": 13\n    },\n    \"Presidio\": {\n        \"Union Square\": 22,\n        \"The Castro\": 21,\n        \"North Beach\": 18,\n        \"Embarcadero\": 20,\n        \"Alamo Square\": 19,\n        \"Nob Hill\": 18,\n        \"Fisherman's Wharf\": 19,\n        \"Mission District\": 26,\n        \"Haight-Ashbury\": 15\n    },\n    \"Fisherman's Wharf\": {\n        \"Union Square\": 13,\n        \"The Castro\": 27,\n        \"North Beach\": 6,\n        \"Embarcadero\": 8,\n        \"Alamo Square\": 21,\n        \"Nob Hill\": 11,\n        \"Presidio\": 17,\n        \"Mission District\": 22,\n        \"Haight-Ashbury\": 22\n    },\n    \"Mission District\": {\n        \"Union Square\": 15,\n        \"The Castro\": 7,\n        \"North Beach\": 17,\n        \"Embarcadero\": 19,\n        \"Alamo Square\": 11,\n        \"Nob Hill\": 12,\n        \"Presidio\": 25,\n        \"Fisherman's Wharf\": 22,\n        \"Haight-Ashbury\": 12\n    },\n    \"Haight-Ashbury\": {\n        \"Union Square\": 19,\n        \"The Castro\": 6,\n        \"North Beach\": 19,\n        \"Embarcadero\": 20,\n        \"Alamo Square\": 5,\n        \"Nob Hill\": 15,\n        \"Presidio\": 15,\n        \"Fisherman's Wharf\": 23,\n        \"Mission District\": 11\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Melissa\": {\"start\": \"8:15PM\", \"end\": \"9:15PM\", \"duration\": 30},\n    \"Kimberly\": {\"start\": \"7:00AM\", \"end\": \"10:30AM\", \"duration\": 15},\n    \"Joseph\": {\"start\": \"3:30PM\", \"end\": \"7:30PM\", \"duration\": 75},\n    \"Barbara\": {\"start\": \"8:45PM\", \"end\": \"9:45PM\", \"duration\": 15},\n    \"Kenneth\": {\"start\": \"12:15PM\", \"end\": \"5:15PM\", \"duration\": 105},\n    \"Joshua\": {\"start\": \"4:30PM\", \"end\": \"6:15PM\", \"duration\": 105},\n    \"Brian\": {\"start\": \"9:30AM\", \"end\": \"3:30PM\", \"duration\": 45},\n    \"Steven\": {\"start\": \"7:30PM\", \"end\": \"9:00PM\", \"duration\": 90},\n    \"Betty\": {\"start\": \"7:00PM\", \"end\": \"8:30PM\", \"duration\": 90}\n}\n\n# Start time\nstart_time = \"9:00AM\"\n\n# Initialize schedule\nschedule = []\n\n# Function to calculate travel time\ndef calculate_travel_time(origin, destination):\n    return travel_distances[origin][destination]\n\n# Function to add event to schedule\ndef add_event(action, location, time, duration=None):\n    schedule.append({\"action\": action, \"location\": location, \"time\": time})\n    if duration:\n        schedule.append({\"action\": \"wait\", \"location\": location, \"time\": time})\n        schedule.append({\"action\": \"meet\", \"location\": location, \"duration\": duration, \"time\": time})\n\n# Function to find optimal schedule\ndef find_optimal_schedule():\n    current_time = datetime.strptime(start_time, \"%I:%M%p\")\n    for person, constraint in constraints.items():\n        start_time_str = constraint[\"start\"]\n        end_time_str = constraint[\"end\"]\n        start_time = datetime.strptime(start_time_str, \"%I:%M%p\")\n        end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n        if start_time > current_time:\n            travel_time = calculate_travel_time(\"Union Square\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n        elif end_time < current_time:\n            continue\n        else:\n            travel_time = calculate_travel_time(\"Union Square\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            wait_time = (start_time - current_time).total_seconds() / 60\n            current_time += timedelta(minutes=wait_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n            current_time += timedelta(minutes=constraint[\"duration\"])\n            travel_time = calculate_travel_time(constraint[\"start\"][:-3], \"Union Square\")\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", \"Union Square\", current_time.strftime(\"%I:%M%p\"), travel_time)\n\n# Find optimal schedule\nfind_optimal_schedule()\n\n# Add remaining events\ncurrent_time = datetime.strptime(start_time, \"%I:%M%p\")\nfor person, constraint in constraints.items():\n    end_time_str = constraint[\"end\"]\n    end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n    if end_time < current_time:\n        continue\n    else:\n        travel_time = calculate_travel_time(\"Union Square\", constraint[\"start\"][:-3])\n        current_time += timedelta(minutes=travel_time)\n        add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n        wait_time = (end_time - current_time).total_seconds() / 60\n        current_time += timedelta(minutes=wait_time)\n        add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n\n# Convert schedule to JSON\nschedule_json = json.dumps(schedule, indent=4)\n\n# Print schedule\nprint(\"SOLUTION:\")\nprint(schedule_json)\n```",
      "count": "meeting_planning_example_800"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Jessica",
            "start_time": "9:13AM",
            "end_time": "11:13AM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "John",
            "start_time": "11:18AM",
            "end_time": "11:33AM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Nancy",
            "start_time": "11:40AM",
            "end_time": "12:25PM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Rebecca",
            "start_time": "12:49PM",
            "end_time": "2:04PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Jason",
            "start_time": "3:15PM",
            "end_time": "5:15PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Sarah",
            "start_time": "5:30PM",
            "end_time": "6:15PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Mark",
            "start_time": "6:28PM",
            "end_time": "7:58PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Kevin",
            "start_time": "8:45PM",
            "end_time": "9:45PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Union Square\": {\n        \"Mission District\": 14,\n        \"Fisherman's Wharf\": 15,\n        \"Russian Hill\": 13,\n        \"Marina District\": 18,\n        \"North Beach\": 10,\n        \"Chinatown\": 7,\n        \"Pacific Heights\": 15,\n        \"The Castro\": 17,\n        \"Nob Hill\": 9,\n        \"Sunset District\": 27\n    },\n    \"Mission District\": {\n        \"Union Square\": 15,\n        \"Fisherman's Wharf\": 22,\n        \"Russian Hill\": 15,\n        \"Marina District\": 19,\n        \"North Beach\": 17,\n        \"Chinatown\": 16,\n        \"Pacific Heights\": 16,\n        \"The Castro\": 7,\n        \"Nob Hill\": 12,\n        \"Sunset District\": 24\n    },\n    \"Fisherman's Wharf\": {\n        \"Union Square\": 13,\n        \"Mission District\": 22,\n        \"Russian Hill\": 7,\n        \"Marina District\": 9,\n        \"North Beach\": 6,\n        \"Chinatown\": 12,\n        \"Pacific Heights\": 12,\n        \"The Castro\": 27,\n        \"Nob Hill\": 11,\n        \"Sunset District\": 27\n    },\n    \"Russian Hill\": {\n        \"Union Square\": 10,\n        \"Mission District\": 16,\n        \"Fisherman's Wharf\": 7,\n        \"Marina District\": 7,\n        \"North Beach\": 5,\n        \"Chinatown\": 9,\n        \"Pacific Heights\": 7,\n        \"The Castro\": 21,\n        \"Nob Hill\": 5,\n        \"Sunset District\": 23\n    },\n    \"Marina District\": {\n        \"Union Square\": 16,\n        \"Mission District\": 20,\n        \"Fisherman's Wharf\": 10,\n        \"Russian Hill\": 8,\n        \"North Beach\": 11,\n        \"Chinatown\": 15,\n        \"Pacific Heights\": 7,\n        \"The Castro\": 22,\n        \"Nob Hill\": 12,\n        \"Sunset District\": 19\n    },\n    \"North Beach\": {\n        \"Union Square\": 7,\n        \"Mission District\": 18,\n        \"Fisherman's Wharf\": 5,\n        \"Russian Hill\": 4,\n        \"Marina District\": 9,\n        \"Chinatown\": 6,\n        \"Pacific Heights\": 8,\n        \"The Castro\": 23,\n        \"Nob Hill\": 7,\n        \"Sunset District\": 27\n    },\n    \"Chinatown\": {\n        \"Union Square\": 7,\n        \"Mission District\": 17,\n        \"Fisherman's Wharf\": 8,\n        \"Russian Hill\": 7,\n        \"Marina District\": 12,\n        \"North Beach\": 3,\n        \"Pacific Heights\": 10,\n        \"The Castro\": 22,\n        \"Nob Hill\": 9,\n        \"Sunset District\": 29\n    },\n    \"Pacific Heights\": {\n        \"Union Square\": 12,\n        \"Mission District\": 15,\n        \"Fisherman's Wharf\": 13,\n        \"Russian Hill\": 7,\n        \"Marina District\": 6,\n        \"North Beach\": 9,\n        \"Chinatown\": 11,\n        \"The Castro\": 16,\n        \"Nob Hill\": 8,\n        \"Sunset District\": 21\n    },\n    \"The Castro\": {\n        \"Union Square\": 19,\n        \"Mission District\": 7,\n        \"Fisherman's Wharf\": 24,\n        \"Russian Hill\": 18,\n        \"Marina District\": 21,\n        \"North Beach\": 20,\n        \"Chinatown\": 22,\n        \"Pacific Heights\": 16,\n        \"Nob Hill\": 16,\n        \"Sunset District\": 17\n    },\n    \"Nob Hill\": {\n        \"Union Square\": 7,\n        \"Mission District\": 13,\n        \"Fisherman's Wharf\": 10,\n        \"Russian Hill\": 5,\n        \"Marina District\": 11,\n        \"North Beach\": 8,\n        \"Chinatown\": 6,\n        \"Pacific Heights\": 8,\n        \"The Castro\": 17,\n        \"Sunset District\": 24\n    },\n    \"Sunset District\": {\n        \"Union Square\": 30,\n        \"Mission District\": 25,\n        \"Fisherman's Wharf\": 29,\n        \"Russian Hill\": 24,\n        \"Marina District\": 21,\n        \"North Beach\": 28,\n        \"Chinatown\": 30,\n        \"Pacific Heights\": 21,\n        \"The Castro\": 17,\n        \"Nob Hill\": 27\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Kevin\": {\"start\": \"8:45PM\", \"end\": \"9:45PM\", \"duration\": 60},\n    \"Mark\": {\"start\": \"5:15PM\", \"end\": \"8:00PM\", \"duration\": 90},\n    \"Jessica\": {\"start\": \"9:00AM\", \"end\": \"3:00PM\", \"duration\": 120},\n    \"Jason\": {\"start\": \"3:15PM\", \"end\": \"9:45PM\", \"duration\": 120},\n    \"John\": {\"start\": \"9:45AM\", \"end\": \"6:00PM\", \"duration\": 15},\n    \"Karen\": {\"start\": \"4:45PM\", \"end\": \"7:00PM\", \"duration\": 75},\n    \"Sarah\": {\"start\": \"5:30PM\", \"end\": \"6:15PM\", \"duration\": 45},\n    \"Amanda\": {\"start\": \"8:00PM\", \"end\": \"9:15PM\", \"duration\": 60},\n    \"Nancy\": {\"start\": \"9:45AM\", \"end\": \"1:00PM\", \"duration\": 45},\n    \"Rebecca\": {\"start\": \"8:45AM\", \"end\": \"3:00PM\", \"duration\": 75}\n}\n\n# Start time\nstart_time = \"9:00AM\"\n\n# Initialize schedule\nschedule = []\n\n# Function to calculate travel time\ndef calculate_travel_time(origin, destination):\n    return travel_distances[origin][destination]\n\n# Function to add event to schedule\ndef add_event(action, location, time, duration=None):\n    schedule.append({\"action\": action, \"location\": location, \"time\": time})\n    if duration:\n        schedule.append({\"action\": \"wait\", \"location\": location, \"time\": time})\n        schedule.append({\"action\": \"meet\", \"location\": location, \"duration\": duration, \"time\": time})\n\n# Function to find optimal schedule\ndef find_optimal_schedule():\n    current_time = datetime.strptime(start_time, \"%I:%M%p\")\n    for person, constraint in constraints.items():\n        start_time_str = constraint[\"start\"]\n        end_time_str = constraint[\"end\"]\n        start_time = datetime.strptime(start_time_str, \"%I:%M%p\")\n        end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n        if start_time > current_time:\n            travel_time = calculate_travel_time(\"Union Square\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n        elif end_time < current_time:\n            continue\n        else:\n            travel_time = calculate_travel_time(\"Union Square\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            wait_time = (start_time - current_time).total_seconds() / 60\n            current_time += timedelta(minutes=wait_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n            current_time += timedelta(minutes=constraint[\"duration\"])\n            travel_time = calculate_travel_time(constraint[\"start\"][:-3], \"Union Square\")\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", \"Union Square\", current_time.strftime(\"%I:%M%p\"), travel_time)\n\n# Find optimal schedule\nfind_optimal_schedule()\n\n# Add remaining events\ncurrent_time = datetime.strptime(start_time, \"%I:%M%p\")\nfor person, constraint in constraints.items():\n    end_time_str = constraint[\"end\"]\n    end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n    if end_time < current_time:\n        continue\n    else:\n        travel_time = calculate_travel_time(\"Union Square\", constraint[\"start\"][:-3])\n        current_time += timedelta(minutes=travel_time)\n        add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n        wait_time = (end_time - current_time).total_seconds() / 60\n        current_time += timedelta(minutes=wait_time)\n        add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n\n# Convert schedule to JSON\nschedule_json = json.dumps(schedule, indent=4)\n\n# Print schedule\nprint(\"SOLUTION:\")\nprint(schedule_json)\n```",
      "count": "meeting_planning_example_940"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Kevin",
            "start_time": "9:17AM",
            "end_time": "10:32AM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Kimberly",
            "start_time": "10:45AM",
            "end_time": "11:15AM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Joseph",
            "start_time": "6:30PM",
            "end_time": "7:15PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Thomas",
            "start_time": "7:38PM",
            "end_time": "8:23PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Sunset District\": {\n        \"Alamo Square\": 17,\n        \"Russian Hill\": 24,\n        \"Presidio\": 16,\n        \"Financial District\": 30\n    },\n    \"Alamo Square\": {\n        \"Sunset District\": 16,\n        \"Russian Hill\": 13,\n        \"Presidio\": 18,\n        \"Financial District\": 17\n    },\n    \"Russian Hill\": {\n        \"Sunset District\": 23,\n        \"Alamo Square\": 15,\n        \"Presidio\": 14,\n        \"Financial District\": 11\n    },\n    \"Presidio\": {\n        \"Sunset District\": 15,\n        \"Alamo Square\": 18,\n        \"Russian Hill\": 14,\n        \"Financial District\": 23\n    },\n    \"Financial District\": {\n        \"Sunset District\": 31,\n        \"Alamo Square\": 17,\n        \"Russian Hill\": 10,\n        \"Presidio\": 22\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Kevin\": {\"start\": \"8:15AM\", \"end\": \"9:30PM\", \"duration\": 75},\n    \"Kimberly\": {\"start\": \"8:45AM\", \"end\": \"12:30PM\", \"duration\": 30},\n    \"Joseph\": {\"start\": \"6:30PM\", \"end\": \"7:15PM\", \"duration\": 45},\n    \"Thomas\": {\"start\": \"7:00PM\", \"end\": \"9:45PM\", \"duration\": 45}\n}\n\n# Start time\nstart_time = \"9:00AM\"\n\n# Initialize schedule\nschedule = []\n\n# Function to calculate travel time\ndef calculate_travel_time(origin, destination):\n    return travel_distances[origin][destination]\n\n# Function to add event to schedule\ndef add_event(action, location, time, duration=None):\n    schedule.append({\"action\": action, \"location\": location, \"time\": time})\n    if duration:\n        schedule.append({\"action\": \"wait\", \"location\": location, \"time\": time})\n        schedule.append({\"action\": \"meet\", \"location\": location, \"duration\": duration, \"time\": time})\n\n# Function to find optimal schedule\ndef find_optimal_schedule():\n    current_time = datetime.strptime(start_time, \"%I:%M%p\")\n    for person, constraint in constraints.items():\n        start_time_str = constraint[\"start\"]\n        end_time_str = constraint[\"end\"]\n        start_time = datetime.strptime(start_time_str, \"%I:%M%p\")\n        end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n        if start_time > current_time:\n            travel_time = calculate_travel_time(\"Sunset District\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n        elif end_time < current_time:\n            continue\n        else:\n            travel_time = calculate_travel_time(\"Sunset District\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            wait_time = (start_time - current_time).total_seconds() / 60\n            current_time += timedelta(minutes=wait_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n            current_time += timedelta(minutes=constraint[\"duration\"])\n            travel_time = calculate_travel_time(constraint[\"start\"][:-3], \"Sunset District\")\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", \"Sunset District\", current_time.strftime(\"%I:%M%p\"), travel_time)\n\n# Find optimal schedule\nfind_optimal_schedule()\n\n# Add remaining events\ncurrent_time = datetime.strptime(start_time, \"%I:%M%p\")\nfor person, constraint in constraints.items():\n    end_time_str = constraint[\"end\"]\n    end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n    if end_time < current_time:\n        continue\n    else:\n        travel_time = calculate_travel_time(\"Sunset District\", constraint[\"start\"][:-3])\n        current_time += timedelta(minutes=travel_time)\n        add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n        wait_time = (end_time - current_time).total_seconds() / 60\n        current_time += timedelta(minutes=wait_time)\n        add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n\n# Convert schedule to JSON\nschedule_json = json.dumps(schedule, indent=4)\n\n# Print schedule\nprint(\"SOLUTION:\")\nprint(schedule_json)\n```",
      "count": "meeting_planning_example_391"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Mark",
            "start_time": "1:00PM",
            "end_time": "3:00PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Karen",
            "start_time": "6:45PM",
            "end_time": "8:15PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"North Beach\": {\n        \"Pacific Heights\": 8,\n        \"Embarcadero\": 6\n    },\n    \"Pacific Heights\": {\n        \"North Beach\": 9,\n        \"Embarcadero\": 10\n    },\n    \"Embarcadero\": {\n        \"North Beach\": 5,\n        \"Pacific Heights\": 11\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Karen\": {\"start\": \"6:45PM\", \"end\": \"8:15PM\", \"duration\": 90},\n    \"Mark\": {\"start\": \"1:00PM\", \"end\": \"5:45PM\", \"duration\": 120}\n}\n\n# Start time\nstart_time = \"9:00AM\"\n\n# Initialize schedule\nschedule = []\n\n# Function to calculate travel time\ndef calculate_travel_time(origin, destination):\n    return travel_distances[origin][destination]\n\n# Function to add event to schedule\ndef add_event(action, location, time, duration=None):\n    schedule.append({\"action\": action, \"location\": location, \"time\": time})\n    if duration:\n        schedule.append({\"action\": \"wait\", \"location\": location, \"time\": time})\n        schedule.append({\"action\": \"meet\", \"location\": location, \"duration\": duration, \"time\": time})\n\n# Function to find optimal schedule\ndef find_optimal_schedule():\n    current_time = datetime.strptime(start_time, \"%I:%M%p\")\n    for person, constraint in constraints.items():\n        start_time_str = constraint[\"start\"]\n        end_time_str = constraint[\"end\"]\n        start_time = datetime.strptime(start_time_str, \"%I:%M%p\")\n        end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n        if start_time > current_time:\n            travel_time = calculate_travel_time(\"North Beach\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n        elif end_time < current_time:\n            continue\n        else:\n            travel_time = calculate_travel_time(\"North Beach\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            wait_time = (start_time - current_time).total_seconds() / 60\n            current_time += timedelta(minutes=wait_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n            current_time += timedelta(minutes=constraint[\"duration\"])\n            travel_time = calculate_travel_time(constraint[\"start\"][:-3], \"North Beach\")\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", \"North Beach\", current_time.strftime(\"%I:%M%p\"), travel_time)\n\n# Find optimal schedule\nfind_optimal_schedule()\n\n# Add remaining events\ncurrent_time = datetime.strptime(start_time, \"%I:%M%p\")\nfor person, constraint in constraints.items():\n    end_time_str = constraint[\"end\"]\n    end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n    if end_time < current_time:\n        continue\n    else:\n        travel_time = calculate_travel_time(\"North Beach\", constraint[\"start\"][:-3])\n        current_time += timedelta(minutes=travel_time)\n        add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n        wait_time = (end_time - current_time).total_seconds() / 60\n        current_time += timedelta(minutes=wait_time)\n        add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n\n# Convert schedule to JSON\nschedule_json = json.dumps(schedule, indent=4)\n\n# Print schedule\nprint(\"SOLUTION:\")\nprint(schedule_json)\n```",
      "count": "meeting_planning_example_143"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Joseph",
            "start_time": "12:30PM",
            "end_time": "2:00PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Sandra",
            "start_time": "2:19PM",
            "end_time": "3:34PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Nancy",
            "start_time": "3:46PM",
            "end_time": "5:31PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Karen",
            "start_time": "9:15PM",
            "end_time": "9:45PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Union Square\": {\n        \"Nob Hill\": 9,\n        \"Haight-Ashbury\": 18,\n        \"Chinatown\": 7,\n        \"Marina District\": 18\n    },\n    \"Nob Hill\": {\n        \"Union Square\": 7,\n        \"Haight-Ashbury\": 13,\n        \"Chinatown\": 6,\n        \"Marina District\": 11\n    },\n    \"Haight-Ashbury\": {\n        \"Union Square\": 17,\n        \"Nob Hill\": 15,\n        \"Chinatown\": 19,\n        \"Marina District\": 17\n    },\n    \"Chinatown\": {\n        \"Union Square\": 7,\n        \"Nob Hill\": 8,\n        \"Haight-Ashbury\": 19,\n        \"Marina District\": 12\n    },\n    \"Marina District\": {\n        \"Union Square\": 16,\n        \"Nob Hill\": 12,\n        \"Haight-Ashbury\": 16,\n        \"Chinatown\": 16\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Karen\": {\"start\": \"9:15PM\", \"end\": \"9:45PM\", \"duration\": 30},\n    \"Joseph\": {\"start\": \"12:30PM\", \"end\": \"7:45PM\", \"duration\": 90},\n    \"Sandra\": {\"start\": \"7:15AM\", \"end\": \"7:15PM\", \"duration\": 75},\n    \"Nancy\": {\"start\": \"11:00AM\", \"end\": \"8:15PM\", \"duration\": 105}\n}\n\n# Start time\nstart_time = \"9:00AM\"\n\n# Initialize schedule\nschedule = []\n\n# Function to calculate travel time\ndef calculate_travel_time(origin, destination):\n    return travel_distances[origin][destination]\n\n# Function to add event to schedule\ndef add_event(action, location, time, duration=None):\n    schedule.append({\"action\": action, \"location\": location, \"time\": time})\n    if duration:\n        schedule.append({\"action\": \"wait\", \"location\": location, \"time\": time})\n        schedule.append({\"action\": \"meet\", \"location\": location, \"duration\": duration, \"time\": time})\n\n# Function to find optimal schedule\ndef find_optimal_schedule():\n    current_time = datetime.strptime(start_time, \"%I:%M%p\")\n    for person, constraint in constraints.items():\n        start_time_str = constraint[\"start\"]\n        end_time_str = constraint[\"end\"]\n        start_time = datetime.strptime(start_time_str, \"%I:%M%p\")\n        end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n        if start_time > current_time:\n            travel_time = calculate_travel_time(\"Union Square\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n        elif end_time < current_time:\n            continue\n        else:\n            travel_time = calculate_travel_time(\"Union Square\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            wait_time = (start_time - current_time).total_seconds() / 60\n            current_time += timedelta(minutes=wait_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n            current_time += timedelta(minutes=constraint[\"duration\"])\n            travel_time = calculate_travel_time(constraint[\"start\"][:-3], \"Union Square\")\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", \"Union Square\", current_time.strftime(\"%I:%M%p\"), travel_time)\n\n# Find optimal schedule\nfind_optimal_schedule()\n\n# Add remaining events\ncurrent_time = datetime.strptime(start_time, \"%I:%M%p\")\nfor person, constraint in constraints.items():\n    end_time_str = constraint[\"end\"]\n    end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n    if end_time < current_time:\n        continue\n    else:\n        travel_time = calculate_travel_time(\"Union Square\", constraint[\"start\"][:-3])\n        current_time += timedelta(minutes=travel_time)\n        add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n        wait_time = (end_time - current_time).total_seconds() / 60\n        current_time += timedelta(minutes=wait_time)\n        add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n\n# Convert schedule to JSON\nschedule_json = json.dumps(schedule, indent=4)\n\n# Print schedule\nprint(\"SOLUTION:\")\nprint(schedule_json)\n```",
      "count": "meeting_planning_example_352"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Laura",
            "start_time": "9:11AM",
            "end_time": "9:41AM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Thomas",
            "start_time": "3:30PM",
            "end_time": "5:30PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Stephanie",
            "start_time": "6:30PM",
            "end_time": "7:00PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Betty",
            "start_time": "7:16PM",
            "end_time": "8:01PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Patricia",
            "start_time": "8:15PM",
            "end_time": "9:00PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Fisherman's Wharf\": {\n        \"Bayview\": 26,\n        \"Golden Gate Park\": 25,\n        \"Nob Hill\": 11,\n        \"Marina District\": 9,\n        \"Embarcadero\": 8\n    },\n    \"Bayview\": {\n        \"Fisherman's Wharf\": 25,\n        \"Golden Gate Park\": 22,\n        \"Nob Hill\": 20,\n        \"Marina District\": 25,\n        \"Embarcadero\": 19\n    },\n    \"Golden Gate Park\": {\n        \"Fisherman's Wharf\": 24,\n        \"Bayview\": 23,\n        \"Nob Hill\": 17,\n        \"Marina District\": 16,\n        \"Embarcadero\": 25\n    },\n    \"Nob Hill\": {\n        \"Fisherman's Wharf\": 11,\n        \"Bayview\": 19,\n        \"Golden Gate Park\": 17,\n        \"Marina District\": 11,\n        \"Embarcadero\": 9\n    },\n    \"Marina District\": {\n        \"Fisherman's Wharf\": 10,\n        \"Bayview\": 27,\n        \"Golden Gate Park\": 18,\n        \"Nob Hill\": 12,\n        \"Embarcadero\": 14\n    },\n    \"Embarcadero\": {\n        \"Fisherman's Wharf\": 6,\n        \"Bayview\": 21,\n        \"Golden Gate Park\": 25,\n        \"Nob Hill\": 10,\n        \"Marina District\": 12\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Thomas\": {\"start\": \"3:30PM\", \"end\": \"6:30PM\", \"duration\": 120},\n    \"Stephanie\": {\"start\": \"6:30PM\", \"end\": \"9:45PM\", \"duration\": 30},\n    \"Laura\": {\"start\": \"8:45AM\", \"end\": \"4:15PM\", \"duration\": 30},\n    \"Betty\": {\"start\": \"6:45PM\", \"end\": \"9:45PM\", \"duration\": 45},\n    \"Patricia\": {\"start\": \"5:30PM\", \"end\": \"10:00PM\", \"duration\": 45}\n}\n\n# Start time\nstart_time = \"9:00AM\"\n\n# Initialize schedule\nschedule = []\n\n# Function to calculate travel time\ndef calculate_travel_time(origin, destination):\n    return travel_distances[origin][destination]\n\n# Function to add event to schedule\ndef add_event(action, location, time, duration=None):\n    schedule.append({\"action\": action, \"location\": location, \"time\": time})\n    if duration:\n        schedule.append({\"action\": \"wait\", \"location\": location, \"time\": time})\n        schedule.append({\"action\": \"meet\", \"location\": location, \"duration\": duration, \"time\": time})\n\n# Function to find optimal schedule\ndef find_optimal_schedule():\n    current_time = datetime.strptime(start_time, \"%I:%M%p\")\n    for person, constraint in constraints.items():\n        start_time_str = constraint[\"start\"]\n        end_time_str = constraint[\"end\"]\n        start_time = datetime.strptime(start_time_str, \"%I:%M%p\")\n        end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n        if start_time > current_time:\n            travel_time = calculate_travel_time(\"Fisherman's Wharf\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n        elif end_time < current_time:\n            continue\n        else:\n            travel_time = calculate_travel_time(\"Fisherman's Wharf\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            wait_time = (start_time - current_time).total_seconds() / 60\n            current_time += timedelta(minutes=wait_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n            current_time += timedelta(minutes=constraint[\"duration\"])\n            travel_time = calculate_travel_time(constraint[\"start\"][:-3], \"Fisherman's Wharf\")\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", \"Fisherman's Wharf\", current_time.strftime(\"%I:%M%p\"), travel_time)\n\n# Find optimal schedule\nfind_optimal_schedule()\n\n# Add remaining events\ncurrent_time = datetime.strptime(start_time, \"%I:%M%p\")\nfor person, constraint in constraints.items():\n    end_time_str = constraint[\"end\"]\n    end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n    if end_time < current_time:\n        continue\n    else:\n        travel_time = calculate_travel_time(\"Fisherman's Wharf\", constraint[\"start\"][:-3])\n        current_time += timedelta(minutes=travel_time)\n        add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n        wait_time = (end_time - current_time).total_seconds() / 60\n        current_time += timedelta(minutes=wait_time)\n        add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n\n# Convert schedule to JSON\nschedule_json = json.dumps(schedule, indent=4)\n\n# Print schedule\nprint(\"SOLUTION:\")\nprint(schedule_json)\n```",
      "count": "meeting_planning_example_409"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Richard",
            "start_time": "11:00AM",
            "end_time": "12:00PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Elizabeth",
            "start_time": "12:11PM",
            "end_time": "1:26PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Brian",
            "start_time": "1:34PM",
            "end_time": "3:04PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Anthony",
            "start_time": "3:12PM",
            "end_time": "3:42PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Ashley",
            "start_time": "3:53PM",
            "end_time": "5:23PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Deborah",
            "start_time": "5:42PM",
            "end_time": "6:42PM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Kimberly",
            "start_time": "6:57PM",
            "end_time": "7:42PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Jessica",
            "start_time": "8:00PM",
            "end_time": "9:45PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Bayview\": {\n        \"North Beach\": 22,\n        \"Fisherman's Wharf\": 25,\n        \"Haight-Ashbury\": 19,\n        \"Nob Hill\": 20,\n        \"Golden Gate Park\": 22,\n        \"Union Square\": 18,\n        \"Alamo Square\": 16,\n        \"Presidio\": 32,\n        \"Chinatown\": 19,\n        \"Pacific Heights\": 23\n    },\n    \"North Beach\": {\n        \"Bayview\": 25,\n        \"Fisherman's Wharf\": 5,\n        \"Haight-Ashbury\": 18,\n        \"Nob Hill\": 7,\n        \"Golden Gate Park\": 22,\n        \"Union Square\": 7,\n        \"Alamo Square\": 16,\n        \"Presidio\": 17,\n        \"Chinatown\": 6,\n        \"Pacific Heights\": 8\n    },\n    \"Fisherman's Wharf\": {\n        \"Bayview\": 26,\n        \"North Beach\": 6,\n        \"Haight-Ashbury\": 22,\n        \"Nob Hill\": 11,\n        \"Golden Gate Park\": 25,\n        \"Union Square\": 13,\n        \"Alamo Square\": 21,\n        \"Presidio\": 17,\n        \"Chinatown\": 12,\n        \"Pacific Heights\": 12\n    },\n    \"Haight-Ashbury\": {\n        \"Bayview\": 18,\n        \"North Beach\": 19,\n        \"Fisherman's Wharf\": 23,\n        \"Nob Hill\": 15,\n        \"Golden Gate Park\": 7,\n        \"Union Square\": 19,\n        \"Alamo Square\": 5,\n        \"Presidio\": 15,\n        \"Chinatown\": 19,\n        \"Pacific Heights\": 12\n    },\n    \"Nob Hill\": {\n        \"Bayview\": 19,\n        \"North Beach\": 8,\n        \"Fisherman's Wharf\": 10,\n        \"Haight-Ashbury\": 13,\n        \"Golden Gate Park\": 17,\n        \"Union Square\": 7,\n        \"Alamo Square\": 11,\n        \"Presidio\": 17,\n        \"Chinatown\": 6,\n        \"Pacific Heights\": 8\n    },\n    \"Golden Gate Park\": {\n        \"Bayview\": 23,\n        \"North Beach\": 23,\n        \"Fisherman's Wharf\": 24,\n        \"Haight-Ashbury\": 7,\n        \"Nob Hill\": 20,\n        \"Union Square\": 22,\n        \"Alamo Square\": 9,\n        \"Presidio\": 11,\n        \"Chinatown\": 23,\n        \"Pacific Heights\": 16\n    },\n    \"Union Square\": {\n        \"Bayview\": 15,\n        \"North Beach\": 10,\n        \"Fisherman's Wharf\": 15,\n        \"Haight-Ashbury\": 18,\n        \"Nob Hill\": 9,\n        \"Golden Gate Park\": 22,\n        \"Alamo Square\": 15,\n        \"Presidio\": 24,\n        \"Chinatown\": 7,\n        \"Pacific Heights\": 15\n    },\n    \"Alamo Square\": {\n        \"Bayview\": 16,\n        \"North Beach\": 15,\n        \"Fisherman's Wharf\": 19,\n        \"Haight-Ashbury\": 5,\n        \"Nob Hill\": 11,\n        \"Golden Gate Park\": 9,\n        \"Union Square\": 14,\n        \"Presidio\": 17,\n        \"Chinatown\": 15,\n        \"Pacific Heights\": 10\n    },\n    \"Presidio\": {\n        \"Bayview\": 31,\n        \"North Beach\": 18,\n        \"Fisherman's Wharf\": 19,\n        \"Haight-Ashbury\": 15,\n        \"Nob Hill\": 18,\n        \"Golden Gate Park\": 12,\n        \"Union Square\": 22,\n        \"Alamo Square\": 19,\n        \"Chinatown\": 21,\n        \"Pacific Heights\": 11\n    },\n    \"Chinatown\": {\n        \"Bayview\": 20,\n        \"North Beach\": 3,\n        \"Fisherman's Wharf\": 8,\n        \"Haight-Ashbury\": 19,\n        \"Nob Hill\": 9,\n        \"Golden Gate Park\": 23,\n        \"Union Square\": 7,\n        \"Alamo Square\": 17,\n        \"Presidio\": 19,\n        \"Pacific Heights\": 10\n    },\n    \"Pacific Heights\": {\n        \"Bayview\": 22,\n        \"North Beach\": 9,\n        \"Fisherman's Wharf\": 13,\n        \"Haight-Ashbury\": 11,\n        \"Nob Hill\": 8,\n        \"Golden Gate Park\": 15,\n        \"Union Square\": 12,\n        \"Alamo Square\": 10,\n        \"Presidio\": 11,\n        \"Chinatown\": 11\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Brian\": {\"start\": \"1:00PM\", \"end\": \"7:00PM\", \"duration\": 90},\n    \"Richard\": {\"start\": \"11:00AM\", \"end\": \"12:45PM\", \"duration\": 60},\n    \"Ashley\": {\"start\": \"3:00PM\", \"end\": \"8:30PM\", \"duration\": 90},\n    \"Elizabeth\": {\"start\": \"11:45AM\", \"end\": \"6:30PM\", \"duration\": 75},\n    \"Jessica\": {\"start\": \"8:00PM\", \"end\": \"9:45PM\", \"duration\": 105},\n    \"Deborah\": {\"start\": \"5:30PM\", \"end\": \"10:00PM\", \"duration\": 60},\n    \"Kimberly\": {\"start\": \"5:30PM\", \"end\": \"9:15PM\", \"duration\": 45},\n    \"Matthew\": {\"start\": \"8:15AM\", \"end\": \"9:00AM\", \"duration\": 15},\n    \"Kenneth\": {\"start\": \"1:45PM\", \"end\": \"7:30PM\", \"duration\": 105},\n    \"Anthony\": {\"start\": \"2:15PM\", \"end\": \"4:00PM\", \"duration\": 30}\n}\n\n# Start time\nstart_time = \"9:00AM\"\n\n# Initialize schedule\nschedule = []\n\n# Function to calculate travel time\ndef calculate_travel_time(origin, destination):\n    return travel_distances[origin][destination]\n\n# Function to add event to schedule\ndef add_event(action, location, time, duration=None):\n    schedule.append({\"action\": action, \"location\": location, \"time\": time})\n    if duration:\n        schedule.append({\"action\": \"wait\", \"location\": location, \"time\": time})\n        schedule.append({\"action\": \"meet\", \"location\": location, \"duration\": duration, \"time\": time})\n\n# Function to find optimal schedule\ndef find_optimal_schedule():\n    current_time = datetime.strptime(start_time, \"%I:%M%p\")\n    for person, constraint in constraints.items():\n        start_time_str = constraint[\"start\"]\n        end_time_str = constraint[\"end\"]\n        start_time = datetime.strptime(start_time_str, \"%I:%M%p\")\n        end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n        if start_time > current_time:\n            travel_time = calculate_travel_time(\"Bayview\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n        elif end_time < current_time:\n            continue\n        else:\n            travel_time = calculate_travel_time(\"Bayview\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            wait_time = (start_time - current_time).total_seconds() / 60\n            current_time += timedelta(minutes=wait_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n            current_time += timedelta(minutes=constraint[\"duration\"])\n            travel_time = calculate_travel_time(constraint[\"start\"][:-3], \"Bayview\")\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", \"Bayview\", current_time.strftime(\"%I:%M%p\"), travel_time)\n\n# Find optimal schedule\nfind_optimal_schedule()\n\n# Add remaining events\ncurrent_time = datetime.strptime(start_time, \"%I:%M%p\")\nfor person, constraint in constraints.items():\n    end_time_str = constraint[\"end\"]\n    end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n    if end_time < current_time:\n        continue\n    else:\n        travel_time = calculate_travel_time(\"Bayview\", constraint[\"start\"][:-3])\n        current_time += timedelta(minutes=travel_time)\n        add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n        wait_time = (end_time - current_time).total_seconds() / 60\n        current_time += timedelta(minutes=wait_time)\n        add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n\n# Convert schedule to JSON\nschedule_json = json.dumps(schedule, indent=4)\n\n# Print schedule\nprint(\"SOLUTION:\")\nprint(schedule_json)\n```",
      "count": "meeting_planning_example_952"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Carol",
            "start_time": "10:15AM",
            "end_time": "11:15AM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Kimberly",
            "start_time": "2:15PM",
            "end_time": "2:45PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Kenneth",
            "start_time": "3:01PM",
            "end_time": "3:31PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Brian",
            "start_time": "3:51PM",
            "end_time": "5:06PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Sandra",
            "start_time": "5:24PM",
            "end_time": "6:24PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Laura",
            "start_time": "6:37PM",
            "end_time": "7:07PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Karen",
            "start_time": "7:22PM",
            "end_time": "8:37PM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Paul",
            "start_time": "9:00PM",
            "end_time": "9:15PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Linda",
            "start_time": "9:30PM",
            "end_time": "10:00PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Pacific Heights\": {\n        \"Marina District\": 6,\n        \"The Castro\": 16,\n        \"Richmond District\": 12,\n        \"Alamo Square\": 10,\n        \"Financial District\": 13,\n        \"Presidio\": 11,\n        \"Mission District\": 15,\n        \"Nob Hill\": 8,\n        \"Russian Hill\": 7\n    },\n    \"Marina District\": {\n        \"Pacific Heights\": 7,\n        \"The Castro\": 22,\n        \"Richmond District\": 11,\n        \"Alamo Square\": 15,\n        \"Financial District\": 17,\n        \"Presidio\": 10,\n        \"Mission District\": 20,\n        \"Nob Hill\": 12,\n        \"Russian Hill\": 8\n    },\n    \"The Castro\": {\n        \"Pacific Heights\": 16,\n        \"Marina District\": 21,\n        \"Richmond District\": 16,\n        \"Alamo Square\": 8,\n        \"Financial District\": 21,\n        \"Presidio\": 20,\n        \"Mission District\": 7,\n        \"Nob Hill\": 16,\n        \"Russian Hill\": 18\n    },\n    \"Richmond District\": {\n        \"Pacific Heights\": 10,\n        \"Marina District\": 9,\n        \"The Castro\": 16,\n        \"Alamo Square\": 13,\n        \"Financial District\": 22,\n        \"Presidio\": 7,\n        \"Mission District\": 20,\n        \"Nob Hill\": 17,\n        \"Russian Hill\": 13\n    },\n    \"Alamo Square\": {\n        \"Pacific Heights\": 10,\n        \"Marina District\": 15,\n        \"The Castro\": 8,\n        \"Richmond District\": 11,\n        \"Financial District\": 17,\n        \"Presidio\": 17,\n        \"Mission District\": 10,\n        \"Nob Hill\": 11,\n        \"Russian Hill\": 13\n    },\n    \"Financial District\": {\n        \"Pacific Heights\": 13,\n        \"Marina District\": 15,\n        \"The Castro\": 20,\n        \"Richmond District\": 21,\n        \"Alamo Square\": 17,\n        \"Presidio\": 22,\n        \"Mission District\": 17,\n        \"Nob Hill\": 8,\n        \"Russian Hill\": 11\n    },\n    \"Presidio\": {\n        \"Pacific Heights\": 11,\n        \"Marina District\": 11,\n        \"The Castro\": 21,\n        \"Richmond District\": 7,\n        \"Alamo Square\": 19,\n        \"Financial District\": 23,\n        \"Mission District\": 26,\n        \"Nob Hill\": 18,\n        \"Russian Hill\": 14\n    },\n    \"Mission District\": {\n        \"Pacific Heights\": 16,\n        \"Marina District\": 19,\n        \"The Castro\": 7,\n        \"Richmond District\": 20,\n        \"Alamo Square\": 11,\n        \"Financial District\": 15,\n        \"Presidio\": 25,\n        \"Nob Hill\": 12,\n        \"Russian Hill\": 15\n    },\n    \"Nob Hill\": {\n        \"Pacific Heights\": 8,\n        \"Marina District\": 11,\n        \"The Castro\": 17,\n        \"Richmond District\": 14,\n        \"Alamo Square\": 11,\n        \"Financial District\": 9,\n        \"Presidio\": 17,\n        \"Mission District\": 13,\n        \"Russian Hill\": 5\n    },\n    \"Russian Hill\": {\n        \"Pacific Heights\": 7,\n        \"Marina District\": 7,\n        \"The Castro\": 21,\n        \"Richmond District\": 14,\n        \"Alamo Square\": 15,\n        \"Financial District\": 11,\n        \"Presidio\": 14,\n        \"Mission District\": 16,\n        \"Nob Hill\": 5\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Linda\": {\"start\": \"6:00PM\", \"end\": \"10:00PM\", \"duration\": 30},\n    \"Kenneth\": {\"start\": \"2:45PM\", \"end\": \"4:15PM\", \"duration\": 30},\n    \"Kimberly\": {\"start\": \"2:15PM\", \"end\": \"10:00PM\", \"duration\": 30},\n    \"Paul\": {\"start\": \"9:00PM\", \"end\": \"9:30PM\", \"duration\": 15},\n    \"Carol\": {\"start\": \"10:15AM\", \"end\": \"12:00PM\", \"duration\": 60},\n    \"Brian\": {\"start\": \"10:00AM\", \"end\": \"9:30PM\", \"duration\": 75},\n    \"Laura\": {\"start\": \"4:15PM\", \"end\": \"8:30PM\", \"duration\": 30},\n    \"Sandra\": {\"start\": \"9:15AM\", \"end\": \"6:30PM\", \"duration\": 60},\n    \"Karen\": {\"start\": \"6:30PM\", \"end\": \"10:00PM\", \"duration\": 75}\n}\n\n# Start time\nstart_time = \"9:00AM\"\n\n# Initialize schedule\nschedule = []\n\n# Function to calculate travel time\ndef calculate_travel_time(origin, destination):\n    return travel_distances[origin][destination]\n\n# Function to add event to schedule\ndef add_event(action, location, time, duration=None):\n    schedule.append({\"action\": action, \"location\": location, \"time\": time})\n    if duration:\n        schedule.append({\"action\": \"wait\", \"location\": location, \"time\": time})\n        schedule.append({\"action\": \"meet\", \"location\": location, \"duration\": duration, \"time\": time})\n\n# Function to find optimal schedule\ndef find_optimal_schedule():\n    current_time = datetime.strptime(start_time, \"%I:%M%p\")\n    for person, constraint in constraints.items():\n        start_time_str = constraint[\"start\"]\n        end_time_str = constraint[\"end\"]\n        start_time = datetime.strptime(start_time_str, \"%I:%M%p\")\n        end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n        if start_time > current_time:\n            travel_time = calculate_travel_time(\"Pacific Heights\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n        elif end_time < current_time:\n            continue\n        else:\n            travel_time = calculate_travel_time(\"Pacific Heights\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            wait_time = (start_time - current_time).total_seconds() / 60\n            current_time += timedelta(minutes=wait_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n            current_time += timedelta(minutes=constraint[\"duration\"])\n            travel_time = calculate_travel_time(constraint[\"start\"][:-3], \"Pacific Heights\")\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", \"Pacific Heights\", current_time.strftime(\"%I:%M%p\"), travel_time)\n\n# Find optimal schedule\nfind_optimal_schedule()\n\n# Add remaining events\ncurrent_time = datetime.strptime(start_time, \"%I:%M%p\")\nfor person, constraint in constraints.items():\n    end_time_str = constraint[\"end\"]\n    end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n    if end_time < current_time:\n        continue\n    else:\n        travel_time = calculate_travel_time(\"Pacific Heights\", constraint[\"start\"][:-3])\n        current_time += timedelta(minutes=travel_time)\n        add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n        wait_time = (end_time - current_time).total_seconds() / 60\n        current_time += timedelta(minutes=wait_time)\n        add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n\n# Convert schedule to JSON\nschedule_json = json.dumps(schedule, indent=4)\n\n# Print schedule\nprint(\"SOLUTION:\")\nprint(schedule_json)\n```",
      "count": "meeting_planning_example_870"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Robert",
            "start_time": "9:20AM",
            "end_time": "11:20AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Matthew",
            "start_time": "11:37AM",
            "end_time": "1:07PM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "David",
            "start_time": "1:23PM",
            "end_time": "2:08PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Melissa",
            "start_time": "2:36PM",
            "end_time": "3:21PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Mark",
            "start_time": "3:27PM",
            "end_time": "4:12PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Jessica",
            "start_time": "4:17PM",
            "end_time": "5:02PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Deborah",
            "start_time": "7:00PM",
            "end_time": "7:45PM"
          },
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Karen",
            "start_time": "7:57PM",
            "end_time": "9:57PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"Richmond District\": {\n        \"Chinatown\": 20,\n        \"Sunset District\": 11,\n        \"Alamo Square\": 13,\n        \"Financial District\": 22,\n        \"North Beach\": 17,\n        \"Embarcadero\": 19,\n        \"Presidio\": 7,\n        \"Golden Gate Park\": 9,\n        \"Bayview\": 27\n    },\n    \"Chinatown\": {\n        \"Richmond District\": 20,\n        \"Sunset District\": 29,\n        \"Alamo Square\": 17,\n        \"Financial District\": 5,\n        \"North Beach\": 3,\n        \"Embarcadero\": 5,\n        \"Presidio\": 19,\n        \"Golden Gate Park\": 23,\n        \"Bayview\": 20\n    },\n    \"Sunset District\": {\n        \"Richmond District\": 12,\n        \"Chinatown\": 30,\n        \"Alamo Square\": 17,\n        \"Financial District\": 30,\n        \"North Beach\": 28,\n        \"Embarcadero\": 30,\n        \"Presidio\": 16,\n        \"Golden Gate Park\": 11,\n        \"Bayview\": 22\n    },\n    \"Alamo Square\": {\n        \"Richmond District\": 11,\n        \"Chinatown\": 15,\n        \"Sunset District\": 16,\n        \"Financial District\": 17,\n        \"North Beach\": 15,\n        \"Embarcadero\": 16,\n        \"Presidio\": 17,\n        \"Golden Gate Park\": 9,\n        \"Bayview\": 16\n    },\n    \"Financial District\": {\n        \"Richmond District\": 21,\n        \"Chinatown\": 5,\n        \"Sunset District\": 30,\n        \"Alamo Square\": 17,\n        \"North Beach\": 7,\n        \"Embarcadero\": 4,\n        \"Presidio\": 22,\n        \"Golden Gate Park\": 23,\n        \"Bayview\": 19\n    },\n    \"North Beach\": {\n        \"Richmond District\": 18,\n        \"Chinatown\": 6,\n        \"Sunset District\": 27,\n        \"Alamo Square\": 16,\n        \"Financial District\": 8,\n        \"Embarcadero\": 6,\n        \"Presidio\": 17,\n        \"Golden Gate Park\": 22,\n        \"Bayview\": 25\n    },\n    \"Embarcadero\": {\n        \"Richmond District\": 21,\n        \"Chinatown\": 7,\n        \"Sunset District\": 30,\n        \"Alamo Square\": 19,\n        \"Financial District\": 5,\n        \"North Beach\": 5,\n        \"Presidio\": 20,\n        \"Golden Gate Park\": 25,\n        \"Bayview\": 21\n    },\n    \"Presidio\": {\n        \"Richmond District\": 7,\n        \"Chinatown\": 21,\n        \"Sunset District\": 15,\n        \"Alamo Square\": 19,\n        \"Financial District\": 23,\n        \"North Beach\": 18,\n        \"Embarcadero\": 20,\n        \"Golden Gate Park\": 12,\n        \"Bayview\": 31\n    },\n    \"Golden Gate Park\": {\n        \"Richmond District\": 7,\n        \"Chinatown\": 23,\n        \"Sunset District\": 10,\n        \"Alamo Square\": 9,\n        \"Financial District\": 26,\n        \"North Beach\": 23,\n        \"Embarcadero\": 25,\n        \"Presidio\": 11,\n        \"Bayview\": 23\n    },\n    \"Bayview\": {\n        \"Richmond District\": 25,\n        \"Chinatown\": 19,\n        \"Sunset District\": 23,\n        \"Alamo Square\": 16,\n        \"Financial District\": 19,\n        \"North Beach\": 22,\n        \"Embarcadero\": 19,\n        \"Presidio\": 32,\n        \"Golden Gate Park\": 22\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"Robert\": {\"start\": \"7:45AM\", \"end\": \"5:30PM\", \"duration\": 120},\n    \"David\": {\"start\": \"12:30PM\", \"end\": \"7:45PM\", \"duration\": 45},\n    \"Matthew\": {\"start\": \"8:45AM\", \"end\": \"1:45PM\", \"duration\": 90},\n    \"Jessica\": {\"start\": \"9:30AM\", \"end\": \"6:45PM\", \"duration\": 45},\n    \"Melissa\": {\"start\": \"7:15AM\", \"end\": \"4:45PM\", \"duration\": 45},\n    \"Mark\": {\"start\": \"3:15PM\", \"end\": \"5:00PM\", \"duration\": 45},\n    \"Deborah\": {\"start\": \"7:00PM\", \"end\": \"7:45PM\", \"duration\": 45},\n    \"Karen\": {\"start\": \"7:30PM\", \"end\": \"10:00PM\", \"duration\": 120},\n    \"Laura\": {\"start\": \"9:15PM\", \"end\": \"10:15PM\", \"duration\": 15}\n}\n\n# Start time\nstart_time = \"9:00AM\"\n\n# Initialize schedule\nschedule = []\n\n# Function to calculate travel time\ndef calculate_travel_time(origin, destination):\n    return travel_distances[origin][destination]\n\n# Function to add event to schedule\ndef add_event(action, location, time, duration=None):\n    schedule.append({\"action\": action, \"location\": location, \"time\": time})\n    if duration:\n        schedule.append({\"action\": \"wait\", \"location\": location, \"time\": time})\n        schedule.append({\"action\": \"meet\", \"location\": location, \"duration\": duration, \"time\": time})\n\n# Function to find optimal schedule\ndef find_optimal_schedule():\n    current_time = datetime.strptime(start_time, \"%I:%M%p\")\n    for person, constraint in constraints.items():\n        start_time_str = constraint[\"start\"]\n        end_time_str = constraint[\"end\"]\n        start_time = datetime.strptime(start_time_str, \"%I:%M%p\")\n        end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n        if start_time > current_time:\n            travel_time = calculate_travel_time(\"Richmond District\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n        elif end_time < current_time:\n            continue\n        else:\n            travel_time = calculate_travel_time(\"Richmond District\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            wait_time = (start_time - current_time).total_seconds() / 60\n            current_time += timedelta(minutes=wait_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n            current_time += timedelta(minutes=constraint[\"duration\"])\n            travel_time = calculate_travel_time(constraint[\"start\"][:-3], \"Richmond District\")\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", \"Richmond District\", current_time.strftime(\"%I:%M%p\"), travel_time)\n\n# Find optimal schedule\nfind_optimal_schedule()\n\n# Add remaining events\ncurrent_time = datetime.strptime(start_time, \"%I:%M%p\")\nfor person, constraint in constraints.items():\n    end_time_str = constraint[\"end\"]\n    end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n    if end_time < current_time:\n        continue\n    else:\n        travel_time = calculate_travel_time(\"Richmond District\", constraint[\"start\"][:-3])\n        current_time += timedelta(minutes=travel_time)\n        add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n        wait_time = (end_time - current_time).total_seconds() / 60\n        current_time += timedelta(minutes=wait_time)\n        add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n\n# Convert schedule to JSON\nschedule_json = json.dumps(schedule, indent=4)\n\n# Print schedule\nprint(\"SOLUTION:\")\nprint(schedule_json)\n```",
      "count": "meeting_planning_example_884"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Mission District",
            "person": "James",
            "start_time": "12:45PM",
            "end_time": "2:00PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Robert",
            "start_time": "2:07PM",
            "end_time": "2:37PM"
          }
        ]
      },
      "has_error": true,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances in minutes\ntravel_distances = {\n    \"North Beach\": {\n        \"Mission District\": 18,\n        \"The Castro\": 22\n    },\n    \"Mission District\": {\n        \"North Beach\": 17,\n        \"The Castro\": 7\n    },\n    \"The Castro\": {\n        \"North Beach\": 20,\n        \"Mission District\": 7\n    }\n}\n\n# Meeting constraints\nconstraints = {\n    \"James\": {\"start\": \"12:45PM\", \"end\": \"2:00PM\", \"duration\": 75},\n    \"Robert\": {\"start\": \"12:45PM\", \"end\": \"3:15PM\", \"duration\": 30}\n}\n\n# Start time\nstart_time = \"9:00AM\"\n\n# Initialize schedule\nschedule = []\n\n# Function to calculate travel time\ndef calculate_travel_time(origin, destination):\n    return travel_distances[origin][destination]\n\n# Function to add event to schedule\ndef add_event(action, location, time, duration=None):\n    schedule.append({\"action\": action, \"location\": location, \"time\": time})\n    if duration:\n        schedule.append({\"action\": \"wait\", \"location\": location, \"time\": time})\n        schedule.append({\"action\": \"meet\", \"location\": location, \"duration\": duration, \"time\": time})\n\n# Function to find optimal schedule\ndef find_optimal_schedule():\n    current_time = datetime.strptime(start_time, \"%I:%M%p\")\n    for person, constraint in constraints.items():\n        start_time_str = constraint[\"start\"]\n        end_time_str = constraint[\"end\"]\n        start_time = datetime.strptime(start_time_str, \"%I:%M%p\")\n        end_time = datetime.strptime(end_time_str, \"%I:%M%p\")\n        if start_time > current_time:\n            travel_time = calculate_travel_time(\"North Beach\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n        elif end_time < current_time:\n            continue\n        else:\n            travel_time = calculate_travel_time(\"North Beach\", constraint[\"start\"][:-3])\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), travel_time)\n            wait_time = (start_time - current_time).total_seconds() / 60\n            current_time += timedelta(minutes=wait_time)\n            add_event(\"wait\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"))\n            add_event(\"meet\", constraint[\"start\"][:-3], current_time.strftime(\"%I:%M%p\"), constraint[\"duration\"])\n            current_time += timedelta(minutes=constraint[\"duration\"])\n            travel_time = calculate_travel_time(constraint[\"start\"][:-3], \"North Beach\")\n            current_time += timedelta(minutes=travel_time)\n            add_event(\"travel\", \"North Beach\", current_time.strftime(\"%I:%M%p\"), travel_time)\n\n# Find optimal schedule\nfind_optimal_schedule()\n\n# Convert schedule to JSON\nschedule_json = json.dumps(schedule, indent=4)\n\n# Print schedule\nprint(\"SOLUTION:\")\nprint(schedule_json)\n```",
      "count": "meeting_planning_example_180"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Kenneth",
            "start_time": "12:00PM",
            "end_time": "12:45PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Thomas",
            "start_time": "3:30PM",
            "end_time": "4:45PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_schedule():\n    # Travel distances (in minutes)\n    travel_distances = {\n        \"Nob Hill to Pacific Heights\": 8,\n        \"Nob Hill to Mission District\": 13,\n        \"Pacific Heights to Nob Hill\": 8,\n        \"Pacific Heights to Mission District\": 15,\n        \"Mission District to Nob Hill\": 12,\n        \"Mission District to Pacific Heights\": 16\n    }\n\n    # Constraints\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    thomas_available = (datetime.strptime(\"3:30PM\", \"%I:%M%p\"), datetime.strptime(\"7:15PM\", \"%I:%M%p\"))\n    kenneth_available = (datetime.strptime(\"12:00PM\", \"%I:%M%p\"), datetime.strptime(\"3:45PM\", \"%I:%M%p\"))\n    min_meeting_time_thomas = 75\n    min_meeting_time_kenneth = 45\n\n    # Calculate travel times\n    travel_times = {\n        \"Nob Hill to Pacific Heights\": timedelta(minutes=8),\n        \"Nob Hill to Mission District\": timedelta(minutes=13),\n        \"Pacific Heights to Nob Hill\": timedelta(minutes=8),\n        \"Pacific Heights to Mission District\": timedelta(minutes=15),\n        \"Mission District to Nob Hill\": timedelta(minutes=12),\n        \"Mission District to Pacific Heights\": timedelta(minutes=16)\n    }\n\n    # Schedule\n    schedule = []\n    schedule.append({\"action\": \"start\", \"location\": \"Nob Hill\", \"time\": start_time.strftime(\"%I:%M%p\")})\n\n    # Meet Thomas\n    thomas_meeting_time = max(thomas_available[0], start_time + timedelta(minutes=30))\n    thomas_meeting_location = \"Pacific Heights\"\n    thomas_meeting_duration = min(min_meeting_time_thomas, (thomas_available[1] - thomas_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": \"Nob Hill\", \"duration\": travel_times[\"Nob Hill to Pacific Heights\"].total_seconds() / 60, \"time\": thomas_meeting_time.strftime(\"%I:%M%p\"), \"to\": thomas_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": thomas_meeting_location, \"duration\": thomas_meeting_duration, \"time\": thomas_meeting_time.strftime(\"%I:%M%p\")})\n    thomas_meeting_end_time = thomas_meeting_time + timedelta(minutes=thomas_meeting_duration)\n\n    # Meet Kenneth\n    kenneth_meeting_time = max(kenneth_available[0], thomas_meeting_end_time + timedelta(minutes=30))\n    kenneth_meeting_location = \"Mission District\"\n    kenneth_meeting_duration = min(min_meeting_time_kenneth, (kenneth_available[1] - kenneth_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": thomas_meeting_location, \"duration\": travel_times[thomas_meeting_location + \" to \" + kenneth_meeting_location].total_seconds() / 60, \"time\": kenneth_meeting_time.strftime(\"%I:%M%p\"), \"to\": kenneth_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": kenneth_meeting_location, \"duration\": kenneth_meeting_duration, \"time\": kenneth_meeting_time.strftime(\"%I:%M%p\")})\n    kenneth_meeting_end_time = kenneth_meeting_time + timedelta(minutes=kenneth_meeting_duration)\n\n    # Wait until end of meeting\n    wait_time = (kenneth_available[1] - kenneth_meeting_end_time).total_seconds() / 60\n    schedule.append({\"action\": \"wait\", \"location\": kenneth_meeting_location, \"time\": kenneth_meeting_end_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": kenneth_meeting_location, \"duration\": travel_times[kenneth_meeting_location + \" to Nob Hill\"].total_seconds() / 60, \"time\": kenneth_meeting_end_time.strftime(\"%I:%M%p\"), \"to\": \"Nob Hill\"})\n\n    return json.dumps(schedule, indent=4)\n\nprint(\"SOLUTION:\")\nprint(calculate_schedule())\n```",
      "count": "meeting_planning_example_174"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Thomas",
            "start_time": "1:30PM",
            "end_time": "2:00PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Nancy",
            "start_time": "2:45PM",
            "end_time": "3:00PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Brian",
            "start_time": "3:09PM",
            "end_time": "4:09PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Jessica",
            "start_time": "4:30PM",
            "end_time": "6:30PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Mary",
            "start_time": "6:37PM",
            "end_time": "7:37PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Matthew",
            "start_time": "7:52PM",
            "end_time": "9:52PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_schedule():\n    # Travel distances (in minutes)\n    travel_distances = {\n        \"Embarcadero to Bayview\": 21,\n        \"Embarcadero to Chinatown\": 7,\n        \"Embarcadero to Alamo Square\": 19,\n        \"Embarcadero to Nob Hill\": 10,\n        \"Embarcadero to Presidio\": 20,\n        \"Embarcadero to Union Square\": 10,\n        \"Embarcadero to The Castro\": 25,\n        \"Embarcadero to North Beach\": 5,\n        \"Embarcadero to Fisherman's Wharf\": 6,\n        \"Embarcadero to Marina District\": 12,\n        \"Bayview to Embarcadero\": 21,\n        \"Bayview to Chinatown\": 19,\n        \"Bayview to Alamo Square\": 16,\n        \"Bayview to Nob Hill\": 20,\n        \"Bayview to Presidio\": 32,\n        \"Bayview to Union Square\": 18,\n        \"Bayview to The Castro\": 19,\n        \"Bayview to North Beach\": 22,\n        \"Bayview to Fisherman's Wharf\": 25,\n        \"Bayview to Marina District\": 27,\n        \"Chinatown to Embarcadero\": 5,\n        \"Chinatown to Bayview\": 20,\n        \"Chinatown to Alamo Square\": 17,\n        \"Chinatown to Nob Hill\": 9,\n        \"Chinatown to Presidio\": 19,\n        \"Chinatown to Union Square\": 7,\n        \"Chinatown to The Castro\": 22,\n        \"Chinatown to North Beach\": 3,\n        \"Chinatown to Fisherman's Wharf\": 8,\n        \"Chinatown to Marina District\": 12,\n        \"Alamo Square to Embarcadero\": 16,\n        \"Alamo Square to Bayview\": 16,\n        \"Alamo Square to Chinatown\": 15,\n        \"Alamo Square to Nob Hill\": 11,\n        \"Alamo Square to Presidio\": 17,\n        \"Alamo Square to Union Square\": 14,\n        \"Alamo Square to The Castro\": 8,\n        \"Alamo Square to North Beach\": 15,\n        \"Alamo Square to Fisherman's Wharf\": 19,\n        \"Alamo Square to Marina District\": 15,\n        \"Nob Hill to Embarcadero\": 9,\n        \"Nob Hill to Bayview\": 19,\n        \"Nob Hill to Chinatown\": 6,\n        \"Nob Hill to Alamo Square\": 11,\n        \"Nob Hill to Presidio\": 17,\n        \"Nob Hill to Union Square\": 7,\n        \"Nob Hill to The Castro\": 17,\n        \"Nob Hill to North Beach\": 8,\n        \"Nob Hill to Fisherman's Wharf\": 10,\n        \"Nob Hill to Marina District\": 11,\n        \"Presidio to Embarcadero\": 20,\n        \"Presidio to Bayview\": 31,\n        \"Presidio to Chinatown\": 21,\n        \"Presidio to Alamo Square\": 19,\n        \"Presidio to Nob Hill\": 18,\n        \"Presidio to Union Square\": 22,\n        \"Presidio to The Castro\": 21,\n        \"Presidio to North Beach\": 18,\n        \"Presidio to Fisherman's Wharf\": 19,\n        \"Presidio to Marina District\": 11,\n        \"Union Square to Embarcadero\": 11,\n        \"Union Square to Bayview\": 15,\n        \"Union Square to Chinatown\": 7,\n        \"Union Square to Alamo Square\": 15,\n        \"Union Square to Nob Hill\": 9,\n        \"Union Square to Presidio\": 24,\n        \"Union Square to The Castro\": 17,\n        \"Union Square to North Beach\": 10,\n        \"Union Square to Fisherman's Wharf\": 15,\n        \"Union Square to Marina District\": 18,\n        \"The Castro to Embarcadero\": 22,\n        \"The Castro to Bayview\": 19,\n        \"The Castro to Chinatown\": 22,\n        \"The Castro to Alamo Square\": 8,\n        \"The Castro to Nob Hill\": 16,\n        \"The Castro to Presidio\": 20,\n        \"The Castro to Union Square\": 19,\n        \"The Castro to North Beach\": 20,\n        \"The Castro to Fisherman's Wharf\": 24,\n        \"The Castro to Marina District\": 21,\n        \"North Beach to Embarcadero\": 6,\n        \"North Beach to Bayview\": 25,\n        \"North Beach to Chinatown\": 6,\n        \"North Beach to Alamo Square\": 16,\n        \"North Beach to Nob Hill\": 7,\n        \"North Beach to Presidio\": 17,\n        \"North Beach to Union Square\": 7,\n        \"North Beach to The Castro\": 23,\n        \"North Beach to Fisherman's Wharf\": 5,\n        \"North Beach to Marina District\": 9,\n        \"Fisherman's Wharf to Embarcadero\": 8,\n        \"Fisherman's Wharf to Bayview\": 26,\n        \"Fisherman's Wharf to Chinatown\": 12,\n        \"Fisherman's Wharf to Alamo Square\": 21,\n        \"Fisherman's Wharf to Nob Hill\": 11,\n        \"Fisherman's Wharf to Presidio\": 17,\n        \"Fisherman's Wharf to Union Square\": 13,\n        \"Fisherman's Wharf to The Castro\": 27,\n        \"Fisherman's Wharf to North Beach\": 6,\n        \"Fisherman's Wharf to Marina District\": 9,\n        \"Marina District to Embarcadero\": 14,\n        \"Marina District to Bayview\": 27,\n        \"Marina District to Chinatown\": 15,\n        \"Marina District to Alamo Square\": 15,\n        \"Marina District to Nob Hill\": 12,\n        \"Marina District to Presidio\": 10,\n        \"Marina District to Union Square\": 16,\n        \"Marina District to The Castro\": 22,\n        \"Marina District to North Beach\": 11,\n        \"Marina District to Fisherman's Wharf\": 10\n    }\n\n    # Constraints\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    matthew_available = (datetime.strptime(\"7:15PM\", \"%I:%M%p\"), datetime.strptime(\"10:00PM\", \"%I:%M%p\"))\n    karen_available = (datetime.strptime(\"7:15PM\", \"%I:%M%p\"), datetime.strptime(\"9:15PM\", \"%I:%M%p\"))\n    sarah_available = (datetime.strptime(\"8:00PM\", \"%I:%M%p\"), datetime.strptime(\"9:45PM\", \"%I:%M%p\"))\n    jessica_available = (datetime.strptime(\"4:30PM\", \"%I:%M%p\"), datetime.strptime(\"6:45PM\", \"%I:%M%p\"))\n    stephanie_available = (datetime.strptime(\"7:30AM\", \"%I:%M%p\"), datetime.strptime(\"10:15AM\", \"%I:%M%p\"))\n    mary_available = (datetime.strptime(\"4:45PM\", \"%I:%M%p\"), datetime.strptime(\"9:30PM\", \"%I:%M%p\"))\n    charles_available = (datetime.strptime(\"4:30PM\", \"%I:%M%p\"), datetime.strptime(\"10:00PM\", \"%I:%M%p\"))\n    nancy_available = (datetime.strptime(\"2:45PM\", \"%I:%M%p\"), datetime.strptime(\"8:00PM\", \"%I:%M%p\"))\n    thomas_available = (datetime.strptime(\"1:30PM\", \"%I:%M%p\"), datetime.strptime(\"7:00PM\", \"%I:%M%p\"))\n    brian_available = (datetime.strptime(\"12:15PM\", \"%I:%M%p\"), datetime.strptime(\"6:00PM\", \"%I:%M%p\"))\n    min_meeting_time_matthew = 120\n    min_meeting_time_karen = 90\n    min_meeting_time_sarah = 105\n    min_meeting_time_jessica = 120\n    min_meeting_time_stephanie = 60\n    min_meeting_time_mary = 60\n    min_meeting_time_charles = 105\n    min_meeting_time_nancy = 15\n    min_meeting_time_thomas = 30\n    min_meeting_time_brian = 60\n\n    # Calculate travel times\n    travel_times = {\n        \"Embarcadero to Bayview\": timedelta(minutes=21),\n        \"Embarcadero to Chinatown\": timedelta(minutes=7),\n        \"Embarcadero to Alamo Square\": timedelta(minutes=19),\n        \"Embarcadero to Nob Hill\": timedelta(minutes=10),\n        \"Embarcadero to Presidio\": timedelta(minutes=20),\n        \"Embarcadero to Union Square\": timedelta(minutes=10),\n        \"Embarcadero to The Castro\": timedelta(minutes=25),\n        \"Embarcadero to North Beach\": timedelta(minutes=5),\n        \"Embarcadero to Fisherman's Wharf\": timedelta(minutes=6),\n        \"Embarcadero to Marina District\": timedelta(minutes=12),\n        \"Bayview to Embarcadero\": timedelta(minutes=21),\n        \"Bayview to Chinatown\": timedelta(minutes=19),\n        \"Bayview to Alamo Square\": timedelta(minutes=16),\n        \"Bayview to Nob Hill\": timedelta(minutes=20),\n        \"Bayview to Presidio\": timedelta(minutes=32),\n        \"Bayview to Union Square\": timedelta(minutes=18),\n        \"Bayview to The Castro\": timedelta(minutes=19),\n        \"Bayview to North Beach\": timedelta(minutes=22),\n        \"Bayview to Fisherman's Wharf\": timedelta(minutes=25),\n        \"Bayview to Marina District\": timedelta(minutes=27),\n        \"Chinatown to Embarcadero\": timedelta(minutes=5),\n        \"Chinatown to Bayview\": timedelta(minutes=20),\n        \"Chinatown to Alamo Square\": timedelta(minutes=17),\n        \"Chinatown to Nob Hill\": timedelta(minutes=9),\n        \"Chinatown to Presidio\": timedelta(minutes=19),\n        \"Chinatown to Union Square\": timedelta(minutes=7),\n        \"Chinatown to The Castro\": timedelta(minutes=22),\n        \"Chinatown to North Beach\": timedelta(minutes=3),\n        \"Chinatown to Fisherman's Wharf\": timedelta(minutes=8),\n        \"Chinatown to Marina District\": timedelta(minutes=12),\n        \"Alamo Square to Embarcadero\": timedelta(minutes=16),\n        \"Alamo Square to Bayview\": timedelta(minutes=16),\n        \"Alamo Square to Chinatown\": timedelta(minutes=15),\n        \"Alamo Square to Nob Hill\": timedelta(minutes=11),\n        \"Alamo Square to Presidio\": timedelta(minutes=17),\n        \"Alamo Square to Union Square\": timedelta(minutes=14),\n        \"Alamo Square to The Castro\": timedelta(minutes=8),\n        \"Alamo Square to North Beach\": timedelta(minutes=15),\n        \"Alamo Square to Fisherman's Wharf\": timedelta(minutes=19),\n        \"Alamo Square to Marina District\": timedelta(minutes=15),\n        \"Nob Hill to Embarcadero\": timedelta(minutes=9),\n        \"Nob Hill to Bayview\": timedelta(minutes=19),\n        \"Nob Hill to Chinatown\": timedelta(minutes=6),\n        \"Nob Hill to Alamo Square\": timedelta(minutes=11),\n        \"Nob Hill to Presidio\": timedelta(minutes=17),\n        \"Nob Hill to Union Square\": timedelta(minutes=7),\n        \"Nob Hill to The Castro\": timedelta(minutes=17),\n        \"Nob Hill to North Beach\": timedelta(minutes=8),\n        \"Nob Hill to Fisherman's Wharf\": timedelta(minutes=10),\n        \"Nob Hill to Marina District\": timedelta(minutes=11),\n        \"Presidio to Embarcadero\": timedelta(minutes=20),\n        \"Presidio to Bayview\": timedelta(minutes=31),\n        \"Presidio to Chinatown\": timedelta(minutes=21),\n        \"Presidio to Alamo Square\": timedelta(minutes=19),\n        \"Presidio to Nob Hill\": timedelta(minutes=18),\n        \"Presidio to Union Square\": timedelta(minutes=22),\n        \"Presidio to The Castro\": timedelta(minutes=21),\n        \"Presidio to North Beach\": timedelta(minutes=18),\n        \"Presidio to Fisherman's Wharf\": timedelta(minutes=19),\n        \"Presidio to Marina District\": timedelta(minutes=11),\n        \"Union Square to Embarcadero\": timedelta(minutes=11),\n        \"Union Square to Bayview\": timedelta(minutes=15),\n        \"Union Square to Chinatown\": timedelta(minutes=7),\n        \"Union Square to Alamo Square\": timedelta(minutes=15),\n        \"Union Square to Nob Hill\": timedelta(minutes=9),\n        \"Union Square to Presidio\": timedelta(minutes=24),\n        \"Union Square to The Castro\": timedelta(minutes=17),\n        \"Union Square to North Beach\": timedelta(minutes=10),\n        \"Union Square to Fisherman's Wharf\": timedelta(minutes=15),\n        \"Union Square to Marina District\": timedelta(minutes=18),\n        \"The Castro to Embarcadero\": timedelta(minutes=22),\n        \"The Castro to Bayview\": timedelta(minutes=19),\n        \"The Castro to Chinatown\": timedelta(minutes=22),\n        \"The Castro to Alamo Square\": timedelta(minutes=8),\n        \"The Castro to Nob Hill\": timedelta(minutes=16),\n        \"The Castro to Presidio\": timedelta(minutes=20),\n        \"The Castro to Union Square\": timedelta(minutes=19),\n        \"The Castro to North Beach\": timedelta(minutes=20),\n        \"The Castro to Fisherman's Wharf\": timedelta(minutes=24),\n        \"The Castro to Marina District\": timedelta(minutes=21),\n        \"North Beach to Embarcadero\": timedelta(minutes=6),\n        \"North Beach to Bayview\": timedelta(minutes=25),\n        \"North Beach to Chinatown\": timedelta(minutes=6),\n        \"North Beach to Alamo Square\": timedelta(minutes=16),\n        \"North Beach to Nob Hill\": timedelta(minutes=7),\n        \"North Beach to Presidio\": timedelta(minutes=17),\n        \"North Beach to Union Square\": timedelta(minutes=7),\n        \"North Beach to The Castro\": timedelta(minutes=23),\n        \"North Beach to Fisherman's Wharf\": timedelta(minutes=5),\n        \"North Beach to Marina District\": timedelta(minutes=9),\n        \"Fisherman's Wharf to Embarcadero\": timedelta(minutes=8),\n        \"Fisherman's Wharf to Bayview\": timedelta(minutes=26),\n        \"Fisherman's Wharf to Chinatown\": timedelta(minutes=12),\n        \"Fisherman's Wharf to Alamo Square\": timedelta(minutes=21),\n        \"Fisherman's Wharf to Nob Hill\": timedelta(minutes=11),\n        \"Fisherman's Wharf to Presidio\": timedelta(minutes=17),\n        \"Fisherman's Wharf to Union Square\": timedelta(minutes=13),\n        \"Fisherman's Wharf to The Castro\": timedelta(minutes=27),\n        \"Fisherman's Wharf to North Beach\": timedelta(minutes=6),\n        \"Fisherman's Wharf to Marina District\": timedelta(minutes=9),\n        \"Marina District to Embarcadero\": timedelta(minutes=14),\n        \"Marina District to Bayview\": timedelta(minutes=27),\n        \"Marina District to Chinatown\": timedelta(minutes=15),\n        \"Marina District to Alamo Square\": timedelta(minutes=15),\n        \"Marina District to Nob Hill\": timedelta(minutes=12),\n        \"Marina District to Presidio\": timedelta(minutes=10),\n        \"Marina District to Union Square\": timedelta(minutes=16),\n        \"Marina District to The Castro\": timedelta(minutes=22),\n        \"Marina District to North Beach\": timedelta(minutes=11),\n        \"Marina District to Fisherman's Wharf\": timedelta(minutes=10)\n    }\n\n    # Schedule\n    schedule = []\n    schedule.append({\"action\": \"start\", \"location\": \"Embarcadero\", \"time\": start_time.strftime(\"%I:%M%p\")})\n\n    # Meet Stephanie\n    stephanie_meeting_time = max(start_time, stephanie_available[0])\n    stephanie_meeting_location = \"Presidio\"\n    stephanie_meeting_duration = min(min_meeting_time_stephanie, (stephanie_available[1] - stephanie_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": \"Embarcadero\", \"duration\": travel_times[\"Embarcadero to Presidio\"].total_seconds() / 60, \"time\": stephanie_meeting_time.strftime(\"%I:%M%p\"), \"to\": stephanie_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": stephanie_meeting_location, \"duration\": stephanie_meeting_duration, \"time\": stephanie_meeting_time.strftime(\"%I:%M%p\")})\n    stephanie_meeting_end_time = stephanie_meeting_time + timedelta(minutes=stephanie_meeting_duration)\n\n    # Meet Jessica\n    jessica_meeting_time = max(stephanie_meeting_end_time + timedelta(minutes=30), jessica_available[0])\n    jessica_meeting_location = \"Nob Hill\"\n    jessica_meeting_duration = min(min_meeting_time_jessica, (jessica_available[1] - jessica_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": stephanie_meeting_location, \"duration\": travel_times[stephanie_meeting_location + \" to \" + jessica_meeting_location].total_seconds() / 60, \"time\": jessica_meeting_time.strftime(\"%I:%M%p\"), \"to\": jessica_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": jessica_meeting_location, \"duration\": jessica_meeting_duration, \"time\": jessica_meeting_time.strftime(\"%I:%M%p\")})\n    jessica_meeting_end_time = jessica_meeting_time + timedelta(minutes=jessica_meeting_duration)\n\n    # Meet Mary\n    mary_meeting_time = max(jessica_meeting_end_time + timedelta(minutes=30), mary_available[0])\n    mary_meeting_location = \"Union Square\"\n    mary_meeting_duration = min(min_meeting_time_mary, (mary_available[1] - mary_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": jessica_meeting_location, \"duration\": travel_times[jessica_meeting_location + \" to \" + mary_meeting_location].total_seconds() / 60, \"time\": mary_meeting_time.strftime(\"%I:%M%p\"), \"to\": mary_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": mary_meeting_location, \"duration\": mary_meeting_duration, \"time\": mary_meeting_time.strftime(\"%I:%M%p\")})\n    mary_meeting_end_time = mary_meeting_time + timedelta(minutes=mary_meeting_duration)\n\n    # Meet Charles\n    charles_meeting_time = max(mary_meeting_end_time + timedelta(minutes=30), charles_available[0])\n    charles_meeting_location = \"The Castro\"\n    charles_meeting_duration = min(min_meeting_time_charles, (charles_available[1] - charles_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": mary_meeting_location, \"duration\": travel_times[mary_meeting_location + \" to \" + charles_meeting_location].total_seconds() / 60, \"time\": charles_meeting_time.strftime(\"%I:%M%p\"), \"to\": charles_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": charles_meeting_location, \"duration\": charles_meeting_duration, \"time\": charles_meeting_time.strftime(\"%I:%M%p\")})\n    charles_meeting_end_time = charles_meeting_time + timedelta(minutes=charles_meeting_duration)\n\n    # Meet Nancy\n    nancy_meeting_time = max(charles_meeting_end_time + timedelta(minutes=30), nancy_available[0])\n    nancy_meeting_location = \"North Beach\"\n    nancy_meeting_duration = min(min_meeting_time_nancy, (nancy_available[1] - nancy_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": charles_meeting_location, \"duration\": travel_times[charles_meeting_location + \" to \" + nancy_meeting_location].total_seconds() / 60, \"time\": nancy_meeting_time.strftime(\"%I:%M%p\"), \"to\": nancy_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": nancy_meeting_location, \"duration\": nancy_meeting_duration, \"time\": nancy_meeting_time.strftime(\"%I:%M%p\")})\n    nancy_meeting_end_time = nancy_meeting_time + timedelta(minutes=nancy_meeting_duration)\n\n    # Meet Thomas\n    thomas_meeting_time = max(nancy_meeting_end_time + timedelta(minutes=30), thomas_available[0])\n    thomas_meeting_location = \"Fisherman's Wharf\"\n    thomas_meeting_duration = min(min_meeting_time_thomas, (thomas_available[1] - thomas_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": nancy_meeting_location, \"duration\": travel_times[nancy_meeting_location + \" to \" + thomas_meeting_location].total_seconds() / 60, \"time\": thomas_meeting_time.strftime(\"%I:%M%p\"), \"to\": thomas_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": thomas_meeting_location, \"duration\": thomas_meeting_duration, \"time\": thomas_meeting_time.strftime(\"%I:%M%p\")})\n    thomas_meeting_end_time = thomas_meeting_time + timedelta(minutes=thomas_meeting_duration)\n\n    # Meet Brian\n    brian_meeting_time = max(thomas_meeting_end_time + timedelta(minutes=30), brian_available[0])\n    brian_meeting_location = \"Marina District\"\n    brian_meeting_duration = min(min_meeting_time_brian, (brian_available[1] - brian_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": thomas_meeting_location, \"duration\": travel_times[thomas_meeting_location + \" to \" + brian_meeting_location].total_seconds() / 60, \"time\": brian_meeting_time.strftime(\"%I:%M%p\"), \"to\": brian_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": brian_meeting_location, \"duration\": brian_meeting_duration, \"time\": brian_meeting_time.strftime(\"%I:%M%p\")})\n    brian_meeting_end_time = brian_meeting_time + timedelta(minutes=brian_meeting_duration)\n\n    # Meet Matthew\n    matthew_meeting_time = max(brian_meeting_end_time + timedelta(minutes=30), matthew_available[0])\n    matthew_meeting_location = \"Bayview\"\n    matthew_meeting_duration = min(min_meeting_time_matthew, (matthew_available[1] - matthew_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": brian_meeting_location, \"duration\": travel_times[brian_meeting_location + \" to \" + matthew_meeting_location].total_seconds() / 60, \"time\": matthew_meeting_time.strftime(\"%I:%M%p\"), \"to\": matthew_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": matthew_meeting_location, \"duration\": matthew_meeting_duration, \"time\": matthew_meeting_time.strftime(\"%I:%M%p\")})\n    matthew_meeting_end_time = matthew_meeting_time + timedelta(minutes=matthew_meeting_duration)\n\n    # Meet Karen\n    karen_meeting_time = max(matthew_meeting_end_time + timedelta(minutes=30), karen_available[0])\n    karen_meeting_location = \"Chinatown\"\n    karen_meeting_duration = min(min_meeting_time_karen, (karen_available[1] - karen_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": matthew_meeting_location, \"duration\": travel_times[matthew_meeting_location + \" to \" + karen_meeting_location].total_seconds() / 60, \"time\": karen_meeting_time.strftime(\"%I:%M%p\"), \"to\": karen_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": karen_meeting_location, \"duration\": karen_meeting_duration, \"time\": karen_meeting_time.strftime(\"%I:%M%p\")})\n    karen_meeting_end_time = karen_meeting_time + timedelta(minutes=karen_meeting_duration)\n\n    # Meet Sarah\n    sarah_meeting_time = max(karen_meeting_end_time + timedelta(minutes=30), sarah_available[0])\n    sarah_meeting_location = \"Alamo Square\"\n    sarah_meeting_duration = min(min_meeting_time_sarah, (sarah_available[1] - sarah_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": karen_meeting_location, \"duration\": travel_times[karen_meeting_location + \" to \" + sarah_meeting_location].total_seconds() / 60, \"time\": sarah_meeting_time.strftime(\"%I:%M%p\"), \"to\": sarah_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": sarah_meeting_location, \"duration\": sarah_meeting_duration, \"time\": sarah_meeting_time.strftime(\"%I:%M%p\")})\n    sarah_meeting_end_time = sarah_meeting_time + timedelta(minutes=sarah_meeting_duration)\n\n    # Wait until end of meeting\n    wait_time = (datetime.strptime(\"10:00PM\", \"%I:%M%p\") - sarah_meeting_end_time).total_seconds() / 60\n    schedule.append({\"action\": \"wait\", \"location\": sarah_meeting_location, \"time\": sarah_meeting_end_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": sarah_meeting_location, \"duration\": travel_times[sarah_meeting_location + \" to Embarcadero\"].total_seconds() / 60, \"time\": sarah_meeting_end_time.strftime(\"%I:%M%p\"), \"to\": \"Embarcadero\"})\n\n    return json.dumps(schedule, indent=4)\n\nprint(\"SOLUTION:\")\nprint(calculate_schedule())\n```",
      "count": "meeting_planning_example_976"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Karen",
            "start_time": "9:30AM",
            "end_time": "11:00AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Barbara",
            "start_time": "11:17AM",
            "end_time": "12:47PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Matthew",
            "start_time": "12:52PM",
            "end_time": "1:37PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Andrew",
            "start_time": "1:52PM",
            "end_time": "3:37PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "David",
            "start_time": "3:54PM",
            "end_time": "5:54PM"
          },
          {
            "action": "meet",
            "location": "Bayview",
            "person": "Linda",
            "start_time": "6:15PM",
            "end_time": "7:00PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Mark",
            "start_time": "7:27PM",
            "end_time": "8:57PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_schedule():\n    # Travel distances (in minutes)\n    travel_distances = {\n        \"Russian Hill to Marina District\": 7,\n        \"Russian Hill to Financial District\": 11,\n        \"Russian Hill to Alamo Square\": 15,\n        \"Russian Hill to Golden Gate Park\": 21,\n        \"Russian Hill to The Castro\": 21,\n        \"Russian Hill to Bayview\": 23,\n        \"Russian Hill to Sunset District\": 23,\n        \"Russian Hill to Haight-Ashbury\": 17,\n        \"Russian Hill to Nob Hill\": 5,\n        \"Marina District to Russian Hill\": 8,\n        \"Marina District to Financial District\": 17,\n        \"Marina District to Alamo Square\": 15,\n        \"Marina District to Golden Gate Park\": 18,\n        \"Marina District to The Castro\": 22,\n        \"Marina District to Bayview\": 27,\n        \"Marina District to Sunset District\": 19,\n        \"Marina District to Haight-Ashbury\": 16,\n        \"Marina District to Nob Hill\": 12,\n        \"Financial District to Russian Hill\": 11,\n        \"Financial District to Marina District\": 15,\n        \"Financial District to Alamo Square\": 17,\n        \"Financial District to Golden Gate Park\": 23,\n        \"Financial District to The Castro\": 20,\n        \"Financial District to Bayview\": 19,\n        \"Financial District to Sunset District\": 30,\n        \"Financial District to Haight-Ashbury\": 19,\n        \"Financial District to Nob Hill\": 8,\n        \"Alamo Square to Russian Hill\": 13,\n        \"Alamo Square to Marina District\": 15,\n        \"Alamo Square to Financial District\": 17,\n        \"Alamo Square to Golden Gate Park\": 9,\n        \"Alamo Square to The Castro\": 8,\n        \"Alamo Square to Bayview\": 16,\n        \"Alamo Square to Sunset District\": 16,\n        \"Alamo Square to Haight-Ashbury\": 5,\n        \"Alamo Square to Nob Hill\": 11,\n        \"Golden Gate Park to Russian Hill\": 19,\n        \"Golden Gate Park to Marina District\": 16,\n        \"Golden Gate Park to Financial District\": 26,\n        \"Golden Gate Park to Alamo Square\": 9,\n        \"Golden Gate Park to The Castro\": 13,\n        \"Golden Gate Park to Bayview\": 23,\n        \"Golden Gate Park to Sunset District\": 10,\n        \"Golden Gate Park to Haight-Ashbury\": 7,\n        \"Golden Gate Park to Nob Hill\": 20,\n        \"The Castro to Russian Hill\": 18,\n        \"The Castro to Marina District\": 21,\n        \"The Castro to Financial District\": 21,\n        \"The Castro to Alamo Square\": 8,\n        \"The Castro to Golden Gate Park\": 11,\n        \"The Castro to Bayview\": 19,\n        \"The Castro to Sunset District\": 17,\n        \"The Castro to Haight-Ashbury\": 6,\n        \"The Castro to Nob Hill\": 16,\n        \"Bayview to Russian Hill\": 23,\n        \"Bayview to Marina District\": 27,\n        \"Bayview to Financial District\": 19,\n        \"Bayview to Alamo Square\": 16,\n        \"Bayview to Golden Gate Park\": 22,\n        \"Bayview to The Castro\": 19,\n        \"Bayview to Sunset District\": 23,\n        \"Bayview to Haight-Ashbury\": 19,\n        \"Bayview to Nob Hill\": 20,\n        \"Sunset District to Russian Hill\": 24,\n        \"Sunset District to Marina District\": 21,\n        \"Sunset District to Financial District\": 30,\n        \"Sunset District to Alamo Square\": 17,\n        \"Sunset District to Golden Gate Park\": 11,\n        \"Sunset District to The Castro\": 17,\n        \"Sunset District to Bayview\": 22,\n        \"Sunset District to Haight-Ashbury\": 15,\n        \"Sunset District to Nob Hill\": 27,\n        \"Haight-Ashbury to Russian Hill\": 17,\n        \"Haight-Ashbury to Marina District\": 17,\n        \"Haight-Ashbury to Financial District\": 21,\n        \"Haight-Ashbury to Alamo Square\": 5,\n        \"Haight-Ashbury to Golden Gate Park\": 7,\n        \"Haight-Ashbury to The Castro\": 6,\n        \"Haight-Ashbury to Bayview\": 18,\n        \"Haight-Ashbury to Sunset District\": 15,\n        \"Haight-Ashbury to Nob Hill\": 15,\n        \"Nob Hill to Russian Hill\": 5,\n        \"Nob Hill to Marina District\": 11,\n        \"Nob Hill to Financial District\": 9,\n        \"Nob Hill to Alamo Square\": 11,\n        \"Nob Hill to Golden Gate Park\": 17,\n        \"Nob Hill to The Castro\": 17,\n        \"Nob Hill to Bayview\": 19,\n        \"Nob Hill to Sunset District\": 24,\n        \"Nob Hill to Haight-Ashbury\": 13\n    }\n\n    # Constraints\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    mark_available = (datetime.strptime(\"6:45PM\", \"%I:%M%p\"), datetime.strptime(\"9:00PM\", \"%I:%M%p\"))\n    karen_available = (datetime.strptime(\"9:30AM\", \"%I:%M%p\"), datetime.strptime(\"12:45PM\", \"%I:%M%p\"))\n    barbara_available = (datetime.strptime(\"10:00AM\", \"%I:%M%p\"), datetime.strptime(\"7:30PM\", \"%I:%M%p\"))\n    nancy_available = (datetime.strptime(\"4:45PM\", \"%I:%M%p\"), datetime.strptime(\"8:00PM\", \"%I:%M%p\"))\n    david_available = (datetime.strptime(\"9:00AM\", \"%I:%M%p\"), datetime.strptime(\"6:00PM\", \"%I:%M%p\"))\n    linda_available = (datetime.strptime(\"6:15PM\", \"%I:%M%p\"), datetime.strptime(\"7:45PM\", \"%I:%M%p\"))\n    kevin_available = (datetime.strptime(\"10:00AM\", \"%I:%M%p\"), datetime.strptime(\"5:45PM\", \"%I:%M%p\"))\n    matthew_available = (datetime.strptime(\"10:15AM\", \"%I:%M%p\"), datetime.strptime(\"3:30PM\", \"%I:%M%p\"))\n    andrew_available = (datetime.strptime(\"11:45AM\", \"%I:%M%p\"), datetime.strptime(\"4:45PM\", \"%I:%M%p\"))\n    min_meeting_time_mark = 90\n    min_meeting_time_karen = 90\n    min_meeting_time_barbara = 90\n    min_meeting_time_nancy = 105\n    min_meeting_time_david = 120\n    min_meeting_time_linda = 45\n    min_meeting_time_kevin = 120\n    min_meeting_time_matthew = 45\n    min_meeting_time_andrew = 105\n\n    # Calculate travel times\n    travel_times = {\n        \"Russian Hill to Marina District\": timedelta(minutes=7),\n        \"Russian Hill to Financial District\": timedelta(minutes=11),\n        \"Russian Hill to Alamo Square\": timedelta(minutes=15),\n        \"Russian Hill to Golden Gate Park\": timedelta(minutes=21),\n        \"Russian Hill to The Castro\": timedelta(minutes=21),\n        \"Russian Hill to Bayview\": timedelta(minutes=23),\n        \"Russian Hill to Sunset District\": timedelta(minutes=23),\n        \"Russian Hill to Haight-Ashbury\": timedelta(minutes=17),\n        \"Russian Hill to Nob Hill\": timedelta(minutes=5),\n        \"Marina District to Russian Hill\": timedelta(minutes=8),\n        \"Marina District to Financial District\": timedelta(minutes=17),\n        \"Marina District to Alamo Square\": timedelta(minutes=15),\n        \"Marina District to Golden Gate Park\": timedelta(minutes=18),\n        \"Marina District to The Castro\": timedelta(minutes=22),\n        \"Marina District to Bayview\": timedelta(minutes=27),\n        \"Marina District to Sunset District\": timedelta(minutes=19),\n        \"Marina District to Haight-Ashbury\": timedelta(minutes=16),\n        \"Marina District to Nob Hill\": timedelta(minutes=12),\n        \"Financial District to Russian Hill\": timedelta(minutes=11),\n        \"Financial District to Marina District\": timedelta(minutes=15),\n        \"Financial District to Alamo Square\": timedelta(minutes=17),\n        \"Financial District to Golden Gate Park\": timedelta(minutes=23),\n        \"Financial District to The Castro\": timedelta(minutes=20),\n        \"Financial District to Bayview\": timedelta(minutes=19),\n        \"Financial District to Sunset District\": timedelta(minutes=30),\n        \"Financial District to Haight-Ashbury\": timedelta(minutes=19),\n        \"Financial District to Nob Hill\": timedelta(minutes=8),\n        \"Alamo Square to Russian Hill\": timedelta(minutes=13),\n        \"Alamo Square to Marina District\": timedelta(minutes=15),\n        \"Alamo Square to Financial District\": timedelta(minutes=17),\n        \"Alamo Square to Golden Gate Park\": timedelta(minutes=9),\n        \"Alamo Square to The Castro\": timedelta(minutes=8),\n        \"Alamo Square to Bayview\": timedelta(minutes=16),\n        \"Alamo Square to Sunset District\": timedelta(minutes=16),\n        \"Alamo Square to Haight-Ashbury\": timedelta(minutes=5),\n        \"Alamo Square to Nob Hill\": timedelta(minutes=11),\n        \"Golden Gate Park to Russian Hill\": timedelta(minutes=19),\n        \"Golden Gate Park to Marina District\": timedelta(minutes=16),\n        \"Golden Gate Park to Financial District\": timedelta(minutes=26),\n        \"Golden Gate Park to Alamo Square\": timedelta(minutes=9),\n        \"Golden Gate Park to The Castro\": timedelta(minutes=13),\n        \"Golden Gate Park to Bayview\": timedelta(minutes=23),\n        \"Golden Gate Park to Sunset District\": timedelta(minutes=10),\n        \"Golden Gate Park to Haight-Ashbury\": timedelta(minutes=7),\n        \"Golden Gate Park to Nob Hill\": timedelta(minutes=20),\n        \"The Castro to Russian Hill\": timedelta(minutes=18),\n        \"The Castro to Marina District\": timedelta(minutes=21),\n        \"The Castro to Financial District\": timedelta(minutes=21),\n        \"The Castro to Alamo Square\": timedelta(minutes=8),\n        \"The Castro to Golden Gate Park\": timedelta(minutes=11),\n        \"The Castro to Bayview\": timedelta(minutes=19),\n        \"The Castro to Sunset District\": timedelta(minutes=17),\n        \"The Castro to Haight-Ashbury\": timedelta(minutes=6),\n        \"The Castro to Nob Hill\": timedelta(minutes=16),\n        \"Bayview to Russian Hill\": timedelta(minutes=23),\n        \"Bayview to Marina District\": timedelta(minutes=27),\n        \"Bayview to Financial District\": timedelta(minutes=19),\n        \"Bayview to Alamo Square\": timedelta(minutes=16),\n        \"Bayview to Golden Gate Park\": timedelta(minutes=22),\n        \"Bayview to The Castro\": timedelta(minutes=19),\n        \"Bayview to Sunset District\": timedelta(minutes=23),\n        \"Bayview to Haight-Ashbury\": timedelta(minutes=19),\n        \"Bayview to Nob Hill\": timedelta(minutes=20),\n        \"Sunset District to Russian Hill\": timedelta(minutes=24),\n        \"Sunset District to Marina District\": timedelta(minutes=21),\n        \"Sunset District to Financial District\": timedelta(minutes=30),\n        \"Sunset District to Alamo Square\": timedelta(minutes=17),\n        \"Sunset District to Golden Gate Park\": timedelta(minutes=11),\n        \"Sunset District to The Castro\": timedelta(minutes=17),\n        \"Sunset District to Bayview\": timedelta(minutes=22),\n        \"Sunset District to Haight-Ashbury\": timedelta(minutes=15),\n        \"Sunset District to Nob Hill\": timedelta(minutes=27),\n        \"Haight-Ashbury to Russian Hill\": timedelta(minutes=17),\n        \"Haight-Ashbury to Marina District\": timedelta(minutes=17),\n        \"Haight-Ashbury to Financial District\": timedelta(minutes=21),\n        \"Haight-Ashbury to Alamo Square\": timedelta(minutes=5),\n        \"Haight-Ashbury to Golden Gate Park\": timedelta(minutes=7),\n        \"Haight-Ashbury to The Castro\": timedelta(minutes=6),\n        \"Haight-Ashbury to Bayview\": timedelta(minutes=18),\n        \"Haight-Ashbury to Sunset District\": timedelta(minutes=15),\n        \"Haight-Ashbury to Nob Hill\": timedelta(minutes=15),\n        \"Nob Hill to Russian Hill\": timedelta(minutes=5),\n        \"Nob Hill to Marina District\": timedelta(minutes=11),\n        \"Nob Hill to Financial District\": timedelta(minutes=9),\n        \"Nob Hill to Alamo Square\": timedelta(minutes=11),\n        \"Nob Hill to Golden Gate Park\": timedelta(minutes=17),\n        \"Nob Hill to The Castro\": timedelta(minutes=17),\n        \"Nob Hill to Bayview\": timedelta(minutes=19),\n        \"Nob Hill to Sunset District\": timedelta(minutes=24),\n        \"Nob Hill to Haight-Ashbury\": timedelta(minutes=13)\n    }\n\n    # Schedule\n    schedule = []\n    schedule.append({\"action\": \"start\", \"location\": \"Russian Hill\", \"time\": start_time.strftime(\"%I:%M%p\")})\n\n    # Meet Karen\n    karen_meeting_time = max(start_time, karen_available[0])\n    karen_meeting_location = \"Financial District\"\n    karen_meeting_duration = min(min_meeting_time_karen, (karen_available[1] - karen_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": \"Russian Hill\", \"duration\": travel_times[\"Russian Hill to Financial District\"].total_seconds() / 60, \"time\": karen_meeting_time.strftime(\"%I:%M%p\"), \"to\": karen_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": karen_meeting_location, \"duration\": karen_meeting_duration, \"time\": karen_meeting_time.strftime(\"%I:%M%p\")})\n    karen_meeting_end_time = karen_meeting_time + timedelta(minutes=karen_meeting_duration)\n\n    # Meet Barbara\n    barbara_meeting_time = max(karen_meeting_end_time + timedelta(minutes=30), barbara_available[0])\n    barbara_meeting_location = \"Alamo Square\"\n    barbara_meeting_duration = min(min_meeting_time_barbara, (barbara_available[1] - barbara_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": karen_meeting_location, \"duration\": travel_times[karen_meeting_location + \" to \" + barbara_meeting_location].total_seconds() / 60, \"time\": barbara_meeting_time.strftime(\"%I:%M%p\"), \"to\": barbara_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": barbara_meeting_location, \"duration\": barbara_meeting_duration, \"time\": barbara_meeting_time.strftime(\"%I:%M%p\")})\n    barbara_meeting_end_time = barbara_meeting_time + timedelta(minutes=barbara_meeting_duration)\n\n    # Meet David\n    david_meeting_time = max(barbara_meeting_end_time + timedelta(minutes=30), david_available[0])\n    david_meeting_location = \"The Castro\"\n    david_meeting_duration = min(min_meeting_time_david, (david_available[1] - david_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": barbara_meeting_location, \"duration\": travel_times[barbara_meeting_location + \" to \" + david_meeting_location].total_seconds() / 60, \"time\": david_meeting_time.strftime(\"%I:%M%p\"), \"to\": david_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": david_meeting_location, \"duration\": david_meeting_duration, \"time\": david_meeting_time.strftime(\"%I:%M%p\")})\n    david_meeting_end_time = david_meeting_time + timedelta(minutes=david_meeting_duration)\n\n    # Meet Linda\n    linda_meeting_time = max(david_meeting_end_time + timedelta(minutes=30), linda_available[0])\n    linda_meeting_location = \"Bayview\"\n    linda_meeting_duration = min(min_meeting_time_linda, (linda_available[1] - linda_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": david_meeting_location, \"duration\": travel_times[david_meeting_location + \" to \" + linda_meeting_location].total_seconds() / 60, \"time\": linda_meeting_time.strftime(\"%I:%M%p\"), \"to\": linda_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": linda_meeting_location, \"duration\": linda_meeting_duration, \"time\": linda_meeting_time.strftime(\"%I:%M%p\")})\n    linda_meeting_end_time = linda_meeting_time + timedelta(minutes=linda_meeting_duration)\n\n    # Meet Kevin\n    kevin_meeting_time = max(linda_meeting_end_time + timedelta(minutes=30), kevin_available[0])\n    kevin_meeting_location = \"Sunset District\"\n    kevin_meeting_duration = min(min_meeting_time_kevin, (kevin_available[1] - kevin_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": linda_meeting_location, \"duration\": travel_times[linda_meeting_location + \" to \" + kevin_meeting_location].total_seconds() / 60, \"time\": kevin_meeting_time.strftime(\"%I:%M%p\"), \"to\": kevin_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": kevin_meeting_location, \"duration\": kevin_meeting_duration, \"time\": kevin_meeting_time.strftime(\"%I:%M%p\")})\n    kevin_meeting_end_time = kevin_meeting_time + timedelta(minutes=kevin_meeting_duration)\n\n    # Meet Matthew\n    matthew_meeting_time = max(kevin_meeting_end_time + timedelta(minutes=30), matthew_available[0])\n    matthew_meeting_location = \"Haight-Ashbury\"\n    matthew_meeting_duration = min(min_meeting_time_matthew, (matthew_available[1] - matthew_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": kevin_meeting_location, \"duration\": travel_times[kevin_meeting_location + \" to \" + matthew_meeting_location].total_seconds() / 60, \"time\": matthew_meeting_time.strftime(\"%I:%M%p\"), \"to\": matthew_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": matthew_meeting_location, \"duration\": matthew_meeting_duration, \"time\": matthew_meeting_time.strftime(\"%I:%M%p\")})\n    matthew_meeting_end_time = matthew_meeting_time + timedelta(minutes=matthew_meeting_duration)\n\n    # Meet Andrew\n    andrew_meeting_time = max(matthew_meeting_end_time + timedelta(minutes=30), andrew_available[0])\n    andrew_meeting_location = \"Nob Hill\"\n    andrew_meeting_duration = min(min_meeting_time_andrew, (andrew_available[1] - andrew_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": matthew_meeting_location, \"duration\": travel_times[matthew_meeting_location + \" to \" + andrew_meeting_location].total_seconds() / 60, \"time\": andrew_meeting_time.strftime(\"%I:%M%p\"), \"to\": andrew_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": andrew_meeting_location, \"duration\": andrew_meeting_duration, \"time\": andrew_meeting_time.strftime(\"%I:%M%p\")})\n    andrew_meeting_end_time = andrew_meeting_time + timedelta(minutes=andrew_meeting_duration)\n\n    # Meet Mark\n    mark_meeting_time = max(andrew_meeting_end_time + timedelta(minutes=30), mark_available[0])\n    mark_meeting_location = \"Marina District\"\n    mark_meeting_duration = min(min_meeting_time_mark, (mark_available[1] - mark_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": andrew_meeting_location, \"duration\": travel_times[andrew_meeting_location + \" to \" + mark_meeting_location].total_seconds() / 60, \"time\": mark_meeting_time.strftime(\"%I:%M%p\"), \"to\": mark_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": mark_meeting_location, \"duration\": mark_meeting_duration, \"time\": mark_meeting_time.strftime(\"%I:%M%p\")})\n    mark_meeting_end_time = mark_meeting_time + timedelta(minutes=mark_meeting_duration)\n\n    # Meet Nancy\n    nancy_meeting_time = max(mark_meeting_end_time + timedelta(minutes=30), nancy_available[0])\n    nancy_meeting_location = \"Golden Gate Park\"\n    nancy_meeting_duration = min(min_meeting_time_nancy, (nancy_available[1] - nancy_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": mark_meeting_location, \"duration\": travel_times[mark_meeting_location + \" to \" + nancy_meeting_location].total_seconds() / 60, \"time\": nancy_meeting_time.strftime(\"%I:%M%p\"), \"to\": nancy_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": nancy_meeting_location, \"duration\": nancy_meeting_duration, \"time\": nancy_meeting_time.strftime(\"%I:%M%p\")})\n    nancy_meeting_end_time = nancy_meeting_time + timedelta(minutes=nancy_meeting_duration)\n\n    # Wait until end of meeting\n    wait_time = (datetime.strptime(\"10:00PM\", \"%I:%M%p\") - nancy_meeting_end_time).total_seconds() / 60\n    schedule.append({\"action\": \"wait\", \"location\": nancy_meeting_location, \"time\": nancy_meeting_end_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": nancy_meeting_location, \"duration\": travel_times[nancy_meeting_location + \" to Russian Hill\"].total_seconds() / 60, \"time\": nancy_meeting_end_time.strftime(\"%I:%M%p\"), \"to\": \"Russian Hill\"})\n\n    return json.dumps(schedule, indent=4)\n\nprint(\"SOLUTION:\")\nprint(calculate_schedule())\n```",
      "count": "meeting_planning_example_885"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "David",
            "start_time": "9:23AM",
            "end_time": "9:38AM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "William",
            "start_time": "9:54AM",
            "end_time": "10:54AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Kimberly",
            "start_time": "11:13AM",
            "end_time": "12:58PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Mary",
            "start_time": "2:45PM",
            "end_time": "3:30PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Patricia",
            "start_time": "3:42PM",
            "end_time": "5:42PM"
          },
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Charles",
            "start_time": "5:56PM",
            "end_time": "6:11PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Ronald",
            "start_time": "6:30PM",
            "end_time": "7:00PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Kenneth",
            "start_time": "9:15PM",
            "end_time": "9:30PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_schedule():\n    # Travel distances (in minutes)\n    travel_distances = {\n        \"Russian Hill to Sunset District\": 23,\n        \"Russian Hill to Union Square\": 10,\n        \"Russian Hill to Nob Hill\": 5,\n        \"Russian Hill to Marina District\": 7,\n        \"Russian Hill to Richmond District\": 14,\n        \"Russian Hill to Financial District\": 11,\n        \"Russian Hill to Embarcadero\": 8,\n        \"Russian Hill to The Castro\": 21,\n        \"Russian Hill to Alamo Square\": 15,\n        \"Russian Hill to Presidio\": 14,\n        \"Sunset District to Russian Hill\": 24,\n        \"Sunset District to Union Square\": 30,\n        \"Sunset District to Nob Hill\": 27,\n        \"Sunset District to Marina District\": 21,\n        \"Sunset District to Richmond District\": 12,\n        \"Sunset District to Financial District\": 30,\n        \"Sunset District to Embarcadero\": 30,\n        \"Sunset District to The Castro\": 17,\n        \"Sunset District to Alamo Square\": 17,\n        \"Sunset District to Presidio\": 16,\n        \"Union Square to Russian Hill\": 13,\n        \"Union Square to Sunset District\": 27,\n        \"Union Square to Nob Hill\": 9,\n        \"Union Square to Marina District\": 18,\n        \"Union Square to Richmond District\": 20,\n        \"Union Square to Financial District\": 9,\n        \"Union Square to Embarcadero\": 11,\n        \"Union Square to The Castro\": 17,\n        \"Union Square to Alamo Square\": 15,\n        \"Union Square to Presidio\": 24,\n        \"Nob Hill to Russian Hill\": 5,\n        \"Nob Hill to Sunset District\": 24,\n        \"Nob Hill to Union Square\": 7,\n        \"Nob Hill to Marina District\": 11,\n        \"Nob Hill to Richmond District\": 14,\n        \"Nob Hill to Financial District\": 9,\n        \"Nob Hill to Embarcadero\": 9,\n        \"Nob Hill to The Castro\": 17,\n        \"Nob Hill to Alamo Square\": 11,\n        \"Nob Hill to Presidio\": 17,\n        \"Marina District to Russian Hill\": 8,\n        \"Marina District to Sunset District\": 19,\n        \"Marina District to Union Square\": 16,\n        \"Marina District to Nob Hill\": 12,\n        \"Marina District to Richmond District\": 11,\n        \"Marina District to Financial District\": 17,\n        \"Marina District to Embarcadero\": 14,\n        \"Marina District to The Castro\": 22,\n        \"Marina District to Alamo Square\": 15,\n        \"Marina District to Presidio\": 10,\n        \"Richmond District to Russian Hill\": 13,\n        \"Richmond District to Sunset District\": 11,\n        \"Richmond District to Union Square\": 21,\n        \"Richmond District to Nob Hill\": 17,\n        \"Richmond District to Marina District\": 9,\n        \"Richmond District to Financial District\": 22,\n        \"Richmond District to Embarcadero\": 19,\n        \"Richmond District to The Castro\": 16,\n        \"Richmond District to Alamo Square\": 13,\n        \"Richmond District to Presidio\": 7,\n        \"Financial District to Russian Hill\": 11,\n        \"Financial District to Sunset District\": 30,\n        \"Financial District to Union Square\": 9,\n        \"Financial District to Nob Hill\": 8,\n        \"Financial District to Marina District\": 15,\n        \"Financial District to Richmond District\": 21,\n        \"Financial District to Embarcadero\": 5,\n        \"Financial District to The Castro\": 20,\n        \"Financial District to Alamo Square\": 17,\n        \"Financial District to Presidio\": 22,\n        \"Embarcadero to Russian Hill\": 8,\n        \"Embarcadero to Sunset District\": 30,\n        \"Embarcadero to Union Square\": 10,\n        \"Embarcadero to Nob Hill\": 10,\n        \"Embarcadero to Marina District\": 12,\n        \"Embarcadero to Richmond District\": 21,\n        \"Embarcadero to Financial District\": 5,\n        \"Embarcadero to The Castro\": 25,\n        \"Embarcadero to Alamo Square\": 19,\n        \"Embarcadero to Presidio\": 20,\n        \"The Castro to Russian Hill\": 18,\n        \"The Castro to Sunset District\": 17,\n        \"The Castro to Union Square\": 19,\n        \"The Castro to Nob Hill\": 16,\n        \"The Castro to Marina District\": 21,\n        \"The Castro to Richmond District\": 16,\n        \"The Castro to Financial District\": 21,\n        \"The Castro to Embarcadero\": 22,\n        \"The Castro to Alamo Square\": 8,\n        \"The Castro to Presidio\": 20,\n        \"Alamo Square to Russian Hill\": 13,\n        \"Alamo Square to Sunset District\": 16,\n        \"Alamo Square to Union Square\": 14,\n        \"Alamo Square to Nob Hill\": 11,\n        \"Alamo Square to Marina District\": 15,\n        \"Alamo Square to Richmond District\": 11,\n        \"Alamo Square to Financial District\": 17,\n        \"Alamo Square to Embarcadero\": 16,\n        \"Alamo Square to The Castro\": 8,\n        \"Alamo Square to Presidio\": 17,\n        \"Presidio to Russian Hill\": 14,\n        \"Presidio to Sunset District\": 15,\n        \"Presidio to Union Square\": 22,\n        \"Presidio to Nob Hill\": 18,\n        \"Presidio to Marina District\": 11,\n        \"Presidio to Richmond District\": 7,\n        \"Presidio to Financial District\": 23,\n        \"Presidio to Embarcadero\": 20,\n        \"Presidio to The Castro\": 21\n    }\n\n    # Constraints\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    david_available = (datetime.strptime(\"9:15AM\", \"%I:%M%p\"), datetime.strptime(\"10:00PM\", \"%I:%M%p\"))\n    kenneth_available = (datetime.strptime(\"9:15PM\", \"%I:%M%p\"), datetime.strptime(\"9:45PM\", \"%I:%M%p\"))\n    patricia_available = (datetime.strptime(\"3:00PM\", \"%I:%M%p\"), datetime.strptime(\"7:15PM\", \"%I:%M%p\"))\n    mary_available = (datetime.strptime(\"2:45PM\", \"%I:%M%p\"), datetime.strptime(\"4:45PM\", \"%I:%M%p\"))\n    charles_available = (datetime.strptime(\"5:15PM\", \"%I:%M%p\"), datetime.strptime(\"9:00PM\", \"%I:%M%p\"))\n    joshua_available = (datetime.strptime(\"2:30PM\", \"%I:%M%p\"), datetime.strptime(\"5:15PM\", \"%I:%M%p\"))\n    ronald_available = (datetime.strptime(\"6:15PM\", \"%I:%M%p\"), datetime.strptime(\"8:45PM\", \"%I:%M%p\"))\n    george_available = (datetime.strptime(\"2:15PM\", \"%I:%M%p\"), datetime.strptime(\"7:00PM\", \"%I:%M%p\"))\n    kimberly_available = (datetime.strptime(\"9:00AM\", \"%I:%M%p\"), datetime.strptime(\"2:30PM\", \"%I:%M%p\"))\n    william_available = (datetime.strptime(\"7:00AM\", \"%I:%M%p\"), datetime.strptime(\"12:45PM\", \"%I:%M%p\"))\n    min_meeting_time_david = 15\n    min_meeting_time_kenneth = 15\n    min_meeting_time_patricia = 120\n    min_meeting_time_mary = 45\n    min_meeting_time_charles = 15\n    min_meeting_time_joshua = 90\n    min_meeting_time_ronald = 30\n    min_meeting_time_george = 105\n    min_meeting_time_kimberly = 105\n    min_meeting_time_william = 60\n\n    # Calculate travel times\n    travel_times = {\n        \"Russian Hill to Sunset District\": timedelta(minutes=23),\n        \"Russian Hill to Union Square\": timedelta(minutes=10),\n        \"Russian Hill to Nob Hill\": timedelta(minutes=5),\n        \"Russian Hill to Marina District\": timedelta(minutes=7),\n        \"Russian Hill to Richmond District\": timedelta(minutes=14),\n        \"Russian Hill to Financial District\": timedelta(minutes=11),\n        \"Russian Hill to Embarcadero\": timedelta(minutes=8),\n        \"Russian Hill to The Castro\": timedelta(minutes=21),\n        \"Russian Hill to Alamo Square\": timedelta(minutes=15),\n        \"Russian Hill to Presidio\": timedelta(minutes=14),\n        \"Sunset District to Russian Hill\": timedelta(minutes=24),\n        \"Sunset District to Union Square\": timedelta(minutes=30),\n        \"Sunset District to Nob Hill\": timedelta(minutes=27),\n        \"Sunset District to Marina District\": timedelta(minutes=21),\n        \"Sunset District to Richmond District\": timedelta(minutes=12),\n        \"Sunset District to Financial District\": timedelta(minutes=30),\n        \"Sunset District to Embarcadero\": timedelta(minutes=30),\n        \"Sunset District to The Castro\": timedelta(minutes=17),\n        \"Sunset District to Alamo Square\": timedelta(minutes=17),\n        \"Sunset District to Presidio\": timedelta(minutes=16),\n        \"Union Square to Russian Hill\": timedelta(minutes=13),\n        \"Union Square to Sunset District\": timedelta(minutes=27),\n        \"Union Square to Nob Hill\": timedelta(minutes=9),\n        \"Union Square to Marina District\": timedelta(minutes=18),\n        \"Union Square to Richmond District\": timedelta(minutes=20),\n        \"Union Square to Financial District\": timedelta(minutes=9),\n        \"Union Square to Embarcadero\": timedelta(minutes=11),\n        \"Union Square to The Castro\": timedelta(minutes=17),\n        \"Union Square to Alamo Square\": timedelta(minutes=15),\n        \"Union Square to Presidio\": timedelta(minutes=24),\n        \"Nob Hill to Russian Hill\": timedelta(minutes=5),\n        \"Nob Hill to Sunset District\": timedelta(minutes=24),\n        \"Nob Hill to Union Square\": timedelta(minutes=7),\n        \"Nob Hill to Marina District\": timedelta(minutes=11),\n        \"Nob Hill to Richmond District\": timedelta(minutes=14),\n        \"Nob Hill to Financial District\": timedelta(minutes=9),\n        \"Nob Hill to Embarcadero\": timedelta(minutes=9),\n        \"Nob Hill to The Castro\": timedelta(minutes=17),\n        \"Nob Hill to Alamo Square\": timedelta(minutes=11),\n        \"Nob Hill to Presidio\": timedelta(minutes=17),\n        \"Marina District to Russian Hill\": timedelta(minutes=8),\n        \"Marina District to Sunset District\": timedelta(minutes=19),\n        \"Marina District to Union Square\": timedelta(minutes=16),\n        \"Marina District to Nob Hill\": timedelta(minutes=12),\n        \"Marina District to Richmond District\": timedelta(minutes=11),\n        \"Marina District to Financial District\": timedelta(minutes=17),\n        \"Marina District to Embarcadero\": timedelta(minutes=14),\n        \"Marina District to The Castro\": timedelta(minutes=22),\n        \"Marina District to Alamo Square\": timedelta(minutes=15),\n        \"Marina District to Presidio\": timedelta(minutes=10),\n        \"Richmond District to Russian Hill\": timedelta(minutes=13),\n        \"Richmond District to Sunset District\": timedelta(minutes=11),\n        \"Richmond District to Union Square\": timedelta(minutes=21),\n        \"Richmond District to Nob Hill\": timedelta(minutes=17),\n        \"Richmond District to Marina District\": timedelta(minutes=9),\n        \"Richmond District to Financial District\": timedelta(minutes=22),\n        \"Richmond District to Embarcadero\": timedelta(minutes=19),\n        \"Richmond District to The Castro\": timedelta(minutes=16),\n        \"Richmond District to Alamo Square\": timedelta(minutes=13),\n        \"Richmond District to Presidio\": timedelta(minutes=7),\n        \"Financial District to Russian Hill\": timedelta(minutes=11),\n        \"Financial District to Sunset District\": timedelta(minutes=30),\n        \"Financial District to Union Square\": timedelta(minutes=9),\n        \"Financial District to Nob Hill\": timedelta(minutes=8),\n        \"Financial District to Marina District\": timedelta(minutes=15),\n        \"Financial District to Richmond District\": timedelta(minutes=21),\n        \"Financial District to Embarcadero\": timedelta(minutes=5),\n        \"Financial District to The Castro\": timedelta(minutes=20),\n        \"Financial District to Alamo Square\": timedelta(minutes=17),\n        \"Financial District to Presidio\": timedelta(minutes=22),\n        \"Embarcadero to Russian Hill\": timedelta(minutes=8),\n        \"Embarcadero to Sunset District\": timedelta(minutes=30),\n        \"Embarcadero to Union Square\": timedelta(minutes=10),\n        \"Embarcadero to Nob Hill\": timedelta(minutes=10),\n        \"Embarcadero to Marina District\": timedelta(minutes=12),\n        \"Embarcadero to Richmond District\": timedelta(minutes=21),\n        \"Embarcadero to Financial District\": timedelta(minutes=5),\n        \"Embarcadero to The Castro\": timedelta(minutes=25),\n        \"Embarcadero to Alamo Square\": timedelta(minutes=19),\n        \"Embarcadero to Presidio\": timedelta(minutes=20),\n        \"The Castro to Russian Hill\": timedelta(minutes=18),\n        \"The Castro to Sunset District\": timedelta(minutes=17),\n        \"The Castro to Union Square\": timedelta(minutes=19),\n        \"The Castro to Nob Hill\": timedelta(minutes=16),\n        \"The Castro to Marina District\": timedelta(minutes=21),\n        \"The Castro to Richmond District\": timedelta(minutes=16),\n        \"The Castro to Financial District\": timedelta(minutes=21),\n        \"The Castro to Embarcadero\": timedelta(minutes=22),\n        \"The Castro to Alamo Square\": timedelta(minutes=8),\n        \"The Castro to Presidio\": timedelta(minutes=20),\n        \"Alamo Square to Russian Hill\": timedelta(minutes=13),\n        \"Alamo Square to Sunset District\": timedelta(minutes=16),\n        \"Alamo Square to Union Square\": timedelta(minutes=14),\n        \"Alamo Square to Nob Hill\": timedelta(minutes=11),\n        \"Alamo Square to Marina District\": timedelta(minutes=15),\n        \"Alamo Square to Richmond District\": timedelta(minutes=11),\n        \"Alamo Square to Financial District\": timedelta(minutes=17),\n        \"Alamo Square to Embarcadero\": timedelta(minutes=16),\n        \"Alamo Square to The Castro\": timedelta(minutes=8),\n        \"Alamo Square to Presidio\": timedelta(minutes=17),\n        \"Presidio to Russian Hill\": timedelta(minutes=14),\n        \"Presidio to Sunset District\": timedelta(minutes=15),\n        \"Presidio to Union Square\": timedelta(minutes=22),\n        \"Presidio to Nob Hill\": timedelta(minutes=18),\n        \"Presidio to Marina District\": timedelta(minutes=11),\n        \"Presidio to Richmond District\": timedelta(minutes=7),\n        \"Presidio to Financial District\": timedelta(minutes=23),\n        \"Presidio to Embarcadero\": timedelta(minutes=20),\n        \"Presidio to The Castro\": timedelta(minutes=21)\n    }\n\n    # Schedule\n    schedule = []\n    schedule.append({\"action\": \"start\", \"location\": \"Russian Hill\", \"time\": start_time.strftime(\"%I:%M%p\")})\n\n    # Meet David\n    david_meeting_time = max(start_time, david_available[0])\n    david_meeting_location = \"Sunset District\"\n    david_meeting_duration = min(min_meeting_time_david, (david_available[1] - david_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": \"Russian Hill\", \"duration\": travel_times[\"Russian Hill to Sunset District\"].total_seconds() / 60, \"time\": david_meeting_time.strftime(\"%I:%M%p\"), \"to\": david_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": david_meeting_location, \"duration\": david_meeting_duration, \"time\": david_meeting_time.strftime(\"%I:%M%p\")})\n    david_meeting_end_time = david_meeting_time + timedelta(minutes=david_meeting_duration)\n\n    # Meet Kenneth\n    kenneth_meeting_time = max(david_meeting_end_time + timedelta(minutes=30), kenneth_available[0])\n    kenneth_meeting_location = \"Union Square\"\n    kenneth_meeting_duration = min(min_meeting_time_kenneth, (kenneth_available[1] - kenneth_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": david_meeting_location, \"duration\": travel_times[david_meeting_location + \" to \" + kenneth_meeting_location].total_seconds() / 60, \"time\": kenneth_meeting_time.strftime(\"%I:%M%p\"), \"to\": kenneth_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": kenneth_meeting_location, \"duration\": kenneth_meeting_duration, \"time\": kenneth_meeting_time.strftime(\"%I:%M%p\")})\n    kenneth_meeting_end_time = kenneth_meeting_time + timedelta(minutes=kenneth_meeting_duration)\n\n    # Meet Patricia\n    patricia_meeting_time = max(kenneth_meeting_end_time + timedelta(minutes=30), patricia_available[0])\n    patricia_meeting_location = \"Nob Hill\"\n    patricia_meeting_duration = min(min_meeting_time_patricia, (patricia_available[1] - patricia_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": kenneth_meeting_location, \"duration\": travel_times[kenneth_meeting_location + \" to \" + patricia_meeting_location].total_seconds() / 60, \"time\": patricia_meeting_time.strftime(\"%I:%M%p\"), \"to\": patricia_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": patricia_meeting_location, \"duration\": patricia_meeting_duration, \"time\": patricia_meeting_time.strftime(\"%I:%M%p\")})\n    patricia_meeting_end_time = patricia_meeting_time + timedelta(minutes=patricia_meeting_duration)\n\n    # Meet Mary\n    mary_meeting_time = max(patricia_meeting_end_time + timedelta(minutes=30), mary_available[0])\n    mary_meeting_location = \"Marina District\"\n    mary_meeting_duration = min(min_meeting_time_mary, (mary_available[1] - mary_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": patricia_meeting_location, \"duration\": travel_times[patricia_meeting_location + \" to \" + mary_meeting_location].total_seconds() / 60, \"time\": mary_meeting_time.strftime(\"%I:%M%p\"), \"to\": mary_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": mary_meeting_location, \"duration\": mary_meeting_duration, \"time\": mary_meeting_time.strftime(\"%I:%M%p\")})\n    mary_meeting_end_time = mary_meeting_time + timedelta(minutes=mary_meeting_duration)\n\n    # Meet Charles\n    charles_meeting_time = max(mary_meeting_end_time + timedelta(minutes=30), charles_available[0])\n    charles_meeting_location = \"Richmond District\"\n    charles_meeting_duration = min(min_meeting_time_charles, (charles_available[1] - charles_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": mary_meeting_location, \"duration\": travel_times[mary_meeting_location + \" to \" + charles_meeting_location].total_seconds() / 60, \"time\": charles_meeting_time.strftime(\"%I:%M%p\"), \"to\": charles_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": charles_meeting_location, \"duration\": charles_meeting_duration, \"time\": charles_meeting_time.strftime(\"%I:%M%p\")})\n    charles_meeting_end_time = charles_meeting_time + timedelta(minutes=charles_meeting_duration)\n\n    # Meet Joshua\n    joshua_meeting_time = max(charles_meeting_end_time + timedelta(minutes=30), joshua_available[0])\n    joshua_meeting_location = \"Financial District\"\n    joshua_meeting_duration = min(min_meeting_time_joshua, (joshua_available[1] - joshua_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": charles_meeting_location, \"duration\": travel_times[charles_meeting_location + \" to \" + joshua_meeting_location].total_seconds() / 60, \"time\": joshua_meeting_time.strftime(\"%I:%M%p\"), \"to\": joshua_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": joshua_meeting_location, \"duration\": joshua_meeting_duration, \"time\": joshua_meeting_time.strftime(\"%I:%M%p\")})\n    joshua_meeting_end_time = joshua_meeting_time + timedelta(minutes=joshua_meeting_duration)\n\n    # Meet Ronald\n    ronald_meeting_time = max(joshua_meeting_end_time + timedelta(minutes=30), ronald_available[0])\n    ronald_meeting_location = \"Embarcadero\"\n    ronald_meeting_duration = min(min_meeting_time_ronald, (ronald_available[1] - ronald_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": joshua_meeting_location, \"duration\": travel_times[joshua_meeting_location + \" to \" + ronald_meeting_location].total_seconds() / 60, \"time\": ronald_meeting_time.strftime(\"%I:%M%p\"), \"to\": ronald_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": ronald_meeting_location, \"duration\": ronald_meeting_duration, \"time\": ronald_meeting_time.strftime(\"%I:%M%p\")})\n    ronald_meeting_end_time = ronald_meeting_time + timedelta(minutes=ronald_meeting_duration)\n\n    # Meet George\n    george_meeting_time = max(ronald_meeting_end_time + timedelta(minutes=30), george_available[0])\n    george_meeting_location = \"The Castro\"\n    george_meeting_duration = min(min_meeting_time_george, (george_available[1] - george_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": ronald_meeting_location, \"duration\": travel_times[ronald_meeting_location + \" to \" + george_meeting_location].total_seconds() / 60, \"time\": george_meeting_time.strftime(\"%I:%M%p\"), \"to\": george_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": george_meeting_location, \"duration\": george_meeting_duration, \"time\": george_meeting_time.strftime(\"%I:%M%p\")})\n    george_meeting_end_time = george_meeting_time + timedelta(minutes=george_meeting_duration)\n\n    # Meet Kimberly\n    kimberly_meeting_time = max(george_meeting_end_time + timedelta(minutes=30), kimberly_available[0])\n    kimberly_meeting_location = \"Alamo Square\"\n    kimberly_meeting_duration = min(min_meeting_time_kimberly, (kimberly_available[1] - kimberly_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": george_meeting_location, \"duration\": travel_times[george_meeting_location + \" to \" + kimberly_meeting_location].total_seconds() / 60, \"time\": kimberly_meeting_time.strftime(\"%I:%M%p\"), \"to\": kimberly_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": kimberly_meeting_location, \"duration\": kimberly_meeting_duration, \"time\": kimberly_meeting_time.strftime(\"%I:%M%p\")})\n    kimberly_meeting_end_time = kimberly_meeting_time + timedelta(minutes=kimberly_meeting_duration)\n\n    # Meet William\n    william_meeting_time = max(kimberly_meeting_end_time + timedelta(minutes=30), william_available[0])\n    william_meeting_location = \"Presidio\"\n    william_meeting_duration = min(min_meeting_time_william, (william_available[1] - william_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": kimberly_meeting_location, \"duration\": travel_times[kimberly_meeting_location + \" to \" + william_meeting_location].total_seconds() / 60, \"time\": william_meeting_time.strftime(\"%I:%M%p\"), \"to\": william_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": william_meeting_location, \"duration\": william_meeting_duration, \"time\": william_meeting_time.strftime(\"%I:%M%p\")})\n    william_meeting_end_time = william_meeting_time + timedelta(minutes=william_meeting_duration)\n\n    # Wait until end of meeting\n    wait_time = (datetime.strptime(\"10:00PM\", \"%I:%M%p\") - william_meeting_end_time).total_seconds() / 60\n    schedule.append({\"action\": \"wait\", \"location\": william_meeting_location, \"time\": william_meeting_end_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": william_meeting_location, \"duration\": travel_times[william_meeting_location + \" to Russian Hill\"].total_seconds() / 60, \"time\": william_meeting_end_time.strftime(\"%I:%M%p\"), \"to\": \"Russian Hill\"})\n\n    return json.dumps(schedule, indent=4)\n\nprint(\"SOLUTION:\")\nprint(calculate_schedule())\n```",
      "count": "meeting_planning_example_937"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Golden Gate Park",
            "person": "Andrew",
            "start_time": "11:45AM",
            "end_time": "1:00PM"
          },
          {
            "action": "meet",
            "location": "The Castro",
            "person": "Robert",
            "start_time": "1:13PM",
            "end_time": "1:43PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Sarah",
            "start_time": "4:15PM",
            "end_time": "4:30PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Nancy",
            "start_time": "5:30PM",
            "end_time": "6:30PM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Rebecca",
            "start_time": "6:51PM",
            "end_time": "8:21PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_schedule():\n    # Travel distances (in minutes)\n    travel_distances = {\n        \"Union Square to Golden Gate Park\": 22,\n        \"Union Square to Pacific Heights\": 15,\n        \"Union Square to Presidio\": 24,\n        \"Union Square to Chinatown\": 7,\n        \"Union Square to The Castro\": 19,\n        \"Golden Gate Park to Union Square\": 22,\n        \"Golden Gate Park to Pacific Heights\": 16,\n        \"Golden Gate Park to Presidio\": 11,\n        \"Golden Gate Park to Chinatown\": 23,\n        \"Golden Gate Park to The Castro\": 13,\n        \"Pacific Heights to Union Square\": 12,\n        \"Pacific Heights to Golden Gate Park\": 15,\n        \"Pacific Heights to Presidio\": 11,\n        \"Pacific Heights to Chinatown\": 11,\n        \"Pacific Heights to The Castro\": 16,\n        \"Presidio to Union Square\": 22,\n        \"Presidio to Golden Gate Park\": 12,\n        \"Presidio to Pacific Heights\": 11,\n        \"Presidio to Chinatown\": 21,\n        \"Presidio to The Castro\": 21,\n        \"Chinatown to Union Square\": 7,\n        \"Chinatown to Golden Gate Park\": 23,\n        \"Chinatown to Pacific Heights\": 10,\n        \"Chinatown to Presidio\": 19,\n        \"Chinatown to The Castro\": 22,\n        \"The Castro to Union Square\": 19,\n        \"The Castro to Golden Gate Park\": 11,\n        \"The Castro to Pacific Heights\": 16,\n        \"The Castro to Presidio\": 20,\n        \"The Castro to Chinatown\": 20\n    }\n\n    # Constraints\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    andrew_available = (datetime.strptime(\"11:45AM\", \"%I:%M%p\"), datetime.strptime(\"2:30PM\", \"%I:%M%p\"))\n    sarah_available = (datetime.strptime(\"4:15PM\", \"%I:%M%p\"), datetime.strptime(\"6:45PM\", \"%I:%M%p\"))\n    nancy_available = (datetime.strptime(\"5:30PM\", \"%I:%M%p\"), datetime.strptime(\"7:15PM\", \"%I:%M%p\"))\n    rebecca_available = (datetime.strptime(\"9:45AM\", \"%I:%M%p\"), datetime.strptime(\"9:30PM\", \"%I:%M%p\"))\n    robert_available = (datetime.strptime(\"8:30AM\", \"%I:%M%p\"), datetime.strptime(\"2:15PM\", \"%I:%M%p\"))\n    min_meeting_time_andrew = 75\n    min_meeting_time_sarah = 15\n    min_meeting_time_nancy = 60\n    min_meeting_time_rebecca = 90\n    min_meeting_time_robert = 30\n\n    # Calculate travel times\n    travel_times = {\n        \"Union Square to Golden Gate Park\": timedelta(minutes=22),\n        \"Union Square to Pacific Heights\": timedelta(minutes=15),\n        \"Union Square to Presidio\": timedelta(minutes=24),\n        \"Union Square to Chinatown\": timedelta(minutes=7),\n        \"Union Square to The Castro\": timedelta(minutes=19),\n        \"Golden Gate Park to Union Square\": timedelta(minutes=22),\n        \"Golden Gate Park to Pacific Heights\": timedelta(minutes=16),\n        \"Golden Gate Park to Presidio\": timedelta(minutes=11),\n        \"Golden Gate Park to Chinatown\": timedelta(minutes=23),\n        \"Golden Gate Park to The Castro\": timedelta(minutes=13),\n        \"Pacific Heights to Union Square\": timedelta(minutes=12),\n        \"Pacific Heights to Golden Gate Park\": timedelta(minutes=15),\n        \"Pacific Heights to Presidio\": timedelta(minutes=11),\n        \"Pacific Heights to Chinatown\": timedelta(minutes=11),\n        \"Pacific Heights to The Castro\": timedelta(minutes=16),\n        \"Presidio to Union Square\": timedelta(minutes=22),\n        \"Presidio to Golden Gate Park\": timedelta(minutes=12),\n        \"Presidio to Pacific Heights\": timedelta(minutes=11),\n        \"Presidio to Chinatown\": timedelta(minutes=21),\n        \"Presidio to The Castro\": timedelta(minutes=21),\n        \"Chinatown to Union Square\": timedelta(minutes=7),\n        \"Chinatown to Golden Gate Park\": timedelta(minutes=23),\n        \"Chinatown to Pacific Heights\": timedelta(minutes=10),\n        \"Chinatown to Presidio\": timedelta(minutes=19),\n        \"Chinatown to The Castro\": timedelta(minutes=22),\n        \"The Castro to Union Square\": timedelta(minutes=19),\n        \"The Castro to Golden Gate Park\": timedelta(minutes=11),\n        \"The Castro to Pacific Heights\": timedelta(minutes=16),\n        \"The Castro to Presidio\": timedelta(minutes=20),\n        \"The Castro to Chinatown\": timedelta(minutes=20)\n    }\n\n    # Schedule\n    schedule = []\n    schedule.append({\"action\": \"start\", \"location\": \"Union Square\", \"time\": start_time.strftime(\"%I:%M%p\")})\n\n    # Meet Andrew\n    andrew_meeting_time = max(start_time, andrew_available[0])\n    andrew_meeting_location = \"Golden Gate Park\"\n    andrew_meeting_duration = min(min_meeting_time_andrew, (andrew_available[1] - andrew_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": \"Union Square\", \"duration\": travel_times[\"Union Square to Golden Gate Park\"].total_seconds() / 60, \"time\": andrew_meeting_time.strftime(\"%I:%M%p\"), \"to\": andrew_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": andrew_meeting_location, \"duration\": andrew_meeting_duration, \"time\": andrew_meeting_time.strftime(\"%I:%M%p\")})\n    andrew_meeting_end_time = andrew_meeting_time + timedelta(minutes=andrew_meeting_duration)\n\n    # Meet Sarah\n    sarah_meeting_time = max(andrew_meeting_end_time + timedelta(minutes=30), sarah_available[0])\n    sarah_meeting_location = \"Pacific Heights\"\n    sarah_meeting_duration = min(min_meeting_time_sarah, (sarah_available[1] - sarah_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": andrew_meeting_location, \"duration\": travel_times[andrew_meeting_location + \" to \" + sarah_meeting_location].total_seconds() / 60, \"time\": sarah_meeting_time.strftime(\"%I:%M%p\"), \"to\": sarah_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": sarah_meeting_location, \"duration\": sarah_meeting_duration, \"time\": sarah_meeting_time.strftime(\"%I:%M%p\")})\n    sarah_meeting_end_time = sarah_meeting_time + timedelta(minutes=sarah_meeting_duration)\n\n    # Meet Nancy\n    nancy_meeting_time = max(sarah_meeting_end_time + timedelta(minutes=30), nancy_available[0])\n    nancy_meeting_location = \"Presidio\"\n    nancy_meeting_duration = min(min_meeting_time_nancy, (nancy_available[1] - nancy_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": sarah_meeting_location, \"duration\": travel_times[sarah_meeting_location + \" to \" + nancy_meeting_location].total_seconds() / 60, \"time\": nancy_meeting_time.strftime(\"%I:%M%p\"), \"to\": nancy_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": nancy_meeting_location, \"duration\": nancy_meeting_duration, \"time\": nancy_meeting_time.strftime(\"%I:%M%p\")})\n    nancy_meeting_end_time = nancy_meeting_time + timedelta(minutes=nancy_meeting_duration)\n\n    # Meet Rebecca\n    rebecca_meeting_time = max(nancy_meeting_end_time + timedelta(minutes=30), rebecca_available[0])\n    rebecca_meeting_location = \"Chinatown\"\n    rebecca_meeting_duration = min(min_meeting_time_rebecca, (rebecca_available[1] - rebecca_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": nancy_meeting_location, \"duration\": travel_times[nancy_meeting_location + \" to \" + rebecca_meeting_location].total_seconds() / 60, \"time\": rebecca_meeting_time.strftime(\"%I:%M%p\"), \"to\": rebecca_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": rebecca_meeting_location, \"duration\": rebecca_meeting_duration, \"time\": rebecca_meeting_time.strftime(\"%I:%M%p\")})\n    rebecca_meeting_end_time = rebecca_meeting_time + timedelta(minutes=rebecca_meeting_duration)\n\n    # Meet Robert\n    robert_meeting_time = max(rebecca_meeting_end_time + timedelta(minutes=30), robert_available[0])\n    robert_meeting_location = \"The Castro\"\n    robert_meeting_duration = min(min_meeting_time_robert, (robert_available[1] - robert_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": rebecca_meeting_location, \"duration\": travel_times[rebecca_meeting_location + \" to \" + robert_meeting_location].total_seconds() / 60, \"time\": robert_meeting_time.strftime(\"%I:%M%p\"), \"to\": robert_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": robert_meeting_location, \"duration\": robert_meeting_duration, \"time\": robert_meeting_time.strftime(\"%I:%M%p\")})\n    robert_meeting_end_time = robert_meeting_time + timedelta(minutes=robert_meeting_duration)\n\n    # Wait until end of meeting\n    wait_time = (datetime.strptime(\"10:00PM\", \"%I:%M%p\") - robert_meeting_end_time).total_seconds() / 60\n    schedule.append({\"action\": \"wait\", \"location\": robert_meeting_location, \"time\": robert_meeting_end_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": robert_meeting_location, \"duration\": travel_times[robert_meeting_location + \" to Union Square\"].total_seconds() / 60, \"time\": robert_meeting_end_time.strftime(\"%I:%M%p\"), \"to\": \"Union Square\"})\n\n    return json.dumps(schedule, indent=4)\n\nprint(\"SOLUTION:\")\nprint(calculate_schedule())\n```",
      "count": "meeting_planning_example_403"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "David",
            "start_time": "4:00PM",
            "end_time": "5:45PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_schedule():\n    # Travel distances (in minutes)\n    travel_distances = {\n        \"Golden Gate Park to Chinatown\": 23,\n        \"Chinatown to Golden Gate Park\": 23\n    }\n\n    # Constraints\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    david_available = (datetime.strptime(\"4:00PM\", \"%I:%M%p\"), datetime.strptime(\"9:45PM\", \"%I:%M%p\"))\n    min_meeting_time_david = 105\n\n    # Calculate travel times\n    travel_times = {\n        \"Golden Gate Park to Chinatown\": timedelta(minutes=23),\n        \"Chinatown to Golden Gate Park\": timedelta(minutes=23)\n    }\n\n    # Schedule\n    schedule = []\n    schedule.append({\"action\": \"start\", \"location\": \"Golden Gate Park\", \"time\": start_time.strftime(\"%I:%M%p\")})\n\n    # Meet David\n    david_meeting_time = max(start_time, david_available[0])\n    david_meeting_location = \"Chinatown\"\n    david_meeting_duration = min(min_meeting_time_david, (david_available[1] - david_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_times[\"Golden Gate Park to Chinatown\"].total_seconds() / 60, \"time\": david_meeting_time.strftime(\"%I:%M%p\"), \"to\": david_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": david_meeting_location, \"duration\": david_meeting_duration, \"time\": david_meeting_time.strftime(\"%I:%M%p\")})\n    david_meeting_end_time = david_meeting_time + timedelta(minutes=david_meeting_duration)\n\n    # Wait until end of meeting\n    wait_time = (datetime.strptime(\"10:00PM\", \"%I:%M%p\") - david_meeting_end_time).total_seconds() / 60\n    schedule.append({\"action\": \"wait\", \"location\": david_meeting_location, \"time\": david_meeting_end_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": david_meeting_location, \"duration\": travel_times[\"Chinatown to Golden Gate Park\"].total_seconds() / 60, \"time\": david_meeting_end_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n\n    return json.dumps(schedule, indent=4)\n\nprint(\"SOLUTION:\")\nprint(calculate_schedule())\n```",
      "count": "meeting_planning_example_25"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Richard",
            "start_time": "9:17AM",
            "end_time": "11:17AM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_schedule():\n    # Travel distances (in minutes)\n    travel_distances = {\n        \"Bayview to Union Square\": 17,\n        \"Bayview to Presidio\": 31,\n        \"Union Square to Bayview\": 15,\n        \"Union Square to Presidio\": 24,\n        \"Presidio to Bayview\": 31,\n        \"Presidio to Union Square\": 22\n    }\n\n    # Constraints\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    richard_available = (datetime.strptime(\"8:45AM\", \"%I:%M%p\"), datetime.strptime(\"1:00PM\", \"%I:%M%p\"))\n    charles_available = (datetime.strptime(\"9:45AM\", \"%I:%M%p\"), datetime.strptime(\"1:00PM\", \"%I:%M%p\"))\n    min_meeting_time_richard = 120\n    min_meeting_time_charles = 120\n\n    # Calculate travel times\n    travel_times = {\n        \"Bayview to Union Square\": timedelta(minutes=17),\n        \"Bayview to Presidio\": timedelta(minutes=31),\n        \"Union Square to Bayview\": timedelta(minutes=15),\n        \"Union Square to Presidio\": timedelta(minutes=24),\n        \"Presidio to Bayview\": timedelta(minutes=31),\n        \"Presidio to Union Square\": timedelta(minutes=22)\n    }\n\n    # Schedule\n    schedule = []\n    schedule.append({\"action\": \"start\", \"location\": \"Bayview\", \"time\": start_time.strftime(\"%I:%M%p\")})\n\n    # Meet Richard\n    richard_meeting_time = max(start_time, richard_available[0])\n    richard_meeting_location = \"Union Square\"\n    richard_meeting_duration = min(min_meeting_time_richard, (richard_available[1] - richard_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_times[\"Bayview to Union Square\"].total_seconds() / 60, \"time\": richard_meeting_time.strftime(\"%I:%M%p\"), \"to\": richard_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": richard_meeting_location, \"duration\": richard_meeting_duration, \"time\": richard_meeting_time.strftime(\"%I:%M%p\")})\n    richard_meeting_end_time = richard_meeting_time + timedelta(minutes=richard_meeting_duration)\n\n    # Meet Charles\n    charles_meeting_time = max(richard_meeting_end_time + timedelta(minutes=30), charles_available[0])\n    charles_meeting_location = \"Presidio\"\n    charles_meeting_duration = min(min_meeting_time_charles, (charles_available[1] - charles_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": richard_meeting_location, \"duration\": travel_times[richard_meeting_location + \" to \" + charles_meeting_location].total_seconds() / 60, \"time\": charles_meeting_time.strftime(\"%I:%M%p\"), \"to\": charles_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": charles_meeting_location, \"duration\": charles_meeting_duration, \"time\": charles_meeting_time.strftime(\"%I:%M%p\")})\n    charles_meeting_end_time = charles_meeting_time + timedelta(minutes=charles_meeting_duration)\n\n    # Wait until end of meeting\n    wait_time = (datetime.strptime(\"1:00PM\", \"%I:%M%p\") - charles_meeting_end_time).total_seconds() / 60\n    schedule.append({\"action\": \"wait\", \"location\": charles_meeting_location, \"time\": charles_meeting_end_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": charles_meeting_location, \"duration\": travel_times[charles_meeting_location + \" to Bayview\"].total_seconds() / 60, \"time\": charles_meeting_end_time.strftime(\"%I:%M%p\"), \"to\": \"Bayview\"})\n\n    return json.dumps(schedule, indent=4)\n\nprint(\"SOLUTION:\")\nprint(calculate_schedule())\n```",
      "count": "meeting_planning_example_118"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Matthew",
            "start_time": "9:16AM",
            "end_time": "9:31AM"
          },
          {
            "action": "meet",
            "location": "Sunset District",
            "person": "Patricia",
            "start_time": "5:00PM",
            "end_time": "5:45PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Joseph",
            "start_time": "6:15PM",
            "end_time": "6:45PM"
          },
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Sarah",
            "start_time": "7:04PM",
            "end_time": "8:49PM"
          },
          {
            "action": "meet",
            "location": "Union Square",
            "person": "Robert",
            "start_time": "9:06PM",
            "end_time": "9:21PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_schedule():\n    # Travel distances (in minutes)\n    travel_distances = {\n        \"Golden Gate Park to Haight-Ashbury\": 7,\n        \"Golden Gate Park to Sunset District\": 10,\n        \"Golden Gate Park to Marina District\": 16,\n        \"Golden Gate Park to Financial District\": 26,\n        \"Golden Gate Park to Union Square\": 22,\n        \"Haight-Ashbury to Golden Gate Park\": 7,\n        \"Haight-Ashbury to Sunset District\": 15,\n        \"Haight-Ashbury to Marina District\": 17,\n        \"Haight-Ashbury to Financial District\": 21,\n        \"Haight-Ashbury to Union Square\": 17,\n        \"Sunset District to Golden Gate Park\": 11,\n        \"Sunset District to Haight-Ashbury\": 15,\n        \"Sunset District to Marina District\": 21,\n        \"Sunset District to Financial District\": 30,\n        \"Sunset District to Union Square\": 30,\n        \"Marina District to Golden Gate Park\": 18,\n        \"Marina District to Haight-Ashbury\": 16,\n        \"Marina District to Sunset District\": 19,\n        \"Marina District to Financial District\": 17,\n        \"Marina District to Union Square\": 16,\n        \"Financial District to Golden Gate Park\": 23,\n        \"Financial District to Haight-Ashbury\": 19,\n        \"Financial District to Sunset District\": 31,\n        \"Financial District to Marina District\": 15,\n        \"Financial District to Union Square\": 9,\n        \"Union Square to Golden Gate Park\": 22,\n        \"Union Square to Haight-Ashbury\": 18,\n        \"Union Square to Sunset District\": 26,\n        \"Union Square to Marina District\": 18,\n        \"Union Square to Financial District\": 9\n    }\n\n    # Constraints\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    sarah_available = (datetime.strptime(\"5:00PM\", \"%I:%M%p\"), datetime.strptime(\"9:30PM\", \"%I:%M%p\"))\n    patricia_available = (datetime.strptime(\"5:00PM\", \"%I:%M%p\"), datetime.strptime(\"7:45PM\", \"%I:%M%p\"))\n    matthew_available = (datetime.strptime(\"9:15AM\", \"%I:%M%p\"), datetime.strptime(\"12:00PM\", \"%I:%M%p\"))\n    joseph_available = (datetime.strptime(\"2:15PM\", \"%I:%M%p\"), datetime.strptime(\"6:45PM\", \"%I:%M%p\"))\n    robert_available = (datetime.strptime(\"10:15AM\", \"%I:%M%p\"), datetime.strptime(\"9:45PM\", \"%I:%M%p\"))\n    min_meeting_time_sarah = 105\n    min_meeting_time_patricia = 45\n    min_meeting_time_matthew = 15\n    min_meeting_time_joseph = 30\n    min_meeting_time_robert = 15\n\n    # Calculate travel times\n    travel_times = {\n        \"Golden Gate Park to Haight-Ashbury\": timedelta(minutes=7),\n        \"Golden Gate Park to Sunset District\": timedelta(minutes=10),\n        \"Golden Gate Park to Marina District\": timedelta(minutes=16),\n        \"Golden Gate Park to Financial District\": timedelta(minutes=26),\n        \"Golden Gate Park to Union Square\": timedelta(minutes=22),\n        \"Haight-Ashbury to Golden Gate Park\": timedelta(minutes=7),\n        \"Haight-Ashbury to Sunset District\": timedelta(minutes=15),\n        \"Haight-Ashbury to Marina District\": timedelta(minutes=17),\n        \"Haight-Ashbury to Financial District\": timedelta(minutes=21),\n        \"Haight-Ashbury to Union Square\": timedelta(minutes=17),\n        \"Sunset District to Golden Gate Park\": timedelta(minutes=11),\n        \"Sunset District to Haight-Ashbury\": timedelta(minutes=15),\n        \"Sunset District to Marina District\": timedelta(minutes=21),\n        \"Sunset District to Financial District\": timedelta(minutes=30),\n        \"Sunset District to Union Square\": timedelta(minutes=30),\n        \"Marina District to Golden Gate Park\": timedelta(minutes=18),\n        \"Marina District to Haight-Ashbury\": timedelta(minutes=16),\n        \"Marina District to Sunset District\": timedelta(minutes=19),\n        \"Marina District to Financial District\": timedelta(minutes=17),\n        \"Marina District to Union Square\": timedelta(minutes=16),\n        \"Financial District to Golden Gate Park\": timedelta(minutes=23),\n        \"Financial District to Haight-Ashbury\": timedelta(minutes=19),\n        \"Financial District to Sunset District\": timedelta(minutes=31),\n        \"Financial District to Marina District\": timedelta(minutes=15),\n        \"Financial District to Union Square\": timedelta(minutes=9),\n        \"Union Square to Golden Gate Park\": timedelta(minutes=22),\n        \"Union Square to Haight-Ashbury\": timedelta(minutes=18),\n        \"Union Square to Sunset District\": timedelta(minutes=26),\n        \"Union Square to Marina District\": timedelta(minutes=18),\n        \"Union Square to Financial District\": timedelta(minutes=9)\n    }\n\n    # Schedule\n    schedule = []\n    schedule.append({\"action\": \"start\", \"location\": \"Golden Gate Park\", \"time\": start_time.strftime(\"%I:%M%p\")})\n\n    # Meet Matthew\n    matthew_meeting_time = max(start_time, matthew_available[0])\n    matthew_meeting_location = \"Marina District\"\n    matthew_meeting_duration = min(min_meeting_time_matthew, (matthew_available[1] - matthew_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": \"Golden Gate Park\", \"duration\": travel_times[\"Golden Gate Park to Marina District\"].total_seconds() / 60, \"time\": matthew_meeting_time.strftime(\"%I:%M%p\"), \"to\": matthew_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": matthew_meeting_location, \"duration\": matthew_meeting_duration, \"time\": matthew_meeting_time.strftime(\"%I:%M%p\")})\n    matthew_meeting_end_time = matthew_meeting_time + timedelta(minutes=matthew_meeting_duration)\n\n    # Meet Robert\n    robert_meeting_time = max(matthew_meeting_end_time + timedelta(minutes=30), robert_available[0])\n    robert_meeting_location = \"Union Square\"\n    robert_meeting_duration = min(min_meeting_time_robert, (robert_available[1] - robert_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": matthew_meeting_location, \"duration\": travel_times[matthew_meeting_location + \" to \" + robert_meeting_location].total_seconds() / 60, \"time\": robert_meeting_time.strftime(\"%I:%M%p\"), \"to\": robert_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": robert_meeting_location, \"duration\": robert_meeting_duration, \"time\": robert_meeting_time.strftime(\"%I:%M%p\")})\n    robert_meeting_end_time = robert_meeting_time + timedelta(minutes=robert_meeting_duration)\n\n    # Meet Joseph\n    joseph_meeting_time = max(robert_meeting_end_time + timedelta(minutes=30), joseph_available[0])\n    joseph_meeting_location = \"Financial District\"\n    joseph_meeting_duration = min(min_meeting_time_joseph, (joseph_available[1] - joseph_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": robert_meeting_location, \"duration\": travel_times[robert_meeting_location + \" to \" + joseph_meeting_location].total_seconds() / 60, \"time\": joseph_meeting_time.strftime(\"%I:%M%p\"), \"to\": joseph_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": joseph_meeting_location, \"duration\": joseph_meeting_duration, \"time\": joseph_meeting_time.strftime(\"%I:%M%p\")})\n    joseph_meeting_end_time = joseph_meeting_time + timedelta(minutes=joseph_meeting_duration)\n\n    # Meet Sarah\n    sarah_meeting_time = max(joseph_meeting_end_time + timedelta(minutes=30), sarah_available[0])\n    sarah_meeting_location = \"Haight-Ashbury\"\n    sarah_meeting_duration = min(min_meeting_time_sarah, (sarah_available[1] - sarah_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": joseph_meeting_location, \"duration\": travel_times[joseph_meeting_location + \" to \" + sarah_meeting_location].total_seconds() / 60, \"time\": sarah_meeting_time.strftime(\"%I:%M%p\"), \"to\": sarah_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": sarah_meeting_location, \"duration\": sarah_meeting_duration, \"time\": sarah_meeting_time.strftime(\"%I:%M%p\")})\n    sarah_meeting_end_time = sarah_meeting_time + timedelta(minutes=sarah_meeting_duration)\n\n    # Meet Patricia\n    patricia_meeting_time = max(sarah_meeting_end_time + timedelta(minutes=30), patricia_available[0])\n    patricia_meeting_location = \"Sunset District\"\n    patricia_meeting_duration = min(min_meeting_time_patricia, (patricia_available[1] - patricia_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": sarah_meeting_location, \"duration\": travel_times[sarah_meeting_location + \" to \" + patricia_meeting_location].total_seconds() / 60, \"time\": patricia_meeting_time.strftime(\"%I:%M%p\"), \"to\": patricia_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": patricia_meeting_location, \"duration\": patricia_meeting_duration, \"time\": patricia_meeting_time.strftime(\"%I:%M%p\")})\n    patricia_meeting_end_time = patricia_meeting_time + timedelta(minutes=patricia_meeting_duration)\n\n    # Wait until end of meeting\n    wait_time = (datetime.strptime(\"10:00PM\", \"%I:%M%p\") - patricia_meeting_end_time).total_seconds() / 60\n    schedule.append({\"action\": \"wait\", \"location\": patricia_meeting_location, \"time\": patricia_meeting_end_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": patricia_meeting_location, \"duration\": travel_times[patricia_meeting_location + \" to Golden Gate Park\"].total_seconds() / 60, \"time\": patricia_meeting_end_time.strftime(\"%I:%M%p\"), \"to\": \"Golden Gate Park\"})\n\n    return json.dumps(schedule, indent=4)\n\nprint(\"SOLUTION:\")\nprint(calculate_schedule())\n```",
      "count": "meeting_planning_example_402"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Joseph",
            "start_time": "9:23AM",
            "end_time": "10:23AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Nancy",
            "start_time": "11:00AM",
            "end_time": "12:30PM"
          },
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Jeffrey",
            "start_time": "12:47PM",
            "end_time": "1:32PM"
          },
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Jason",
            "start_time": "4:45PM",
            "end_time": "5:00PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_schedule():\n    # Travel distances (in minutes)\n    travel_distances = {\n        \"Bayview to Russian Hill\": 23,\n        \"Bayview to Alamo Square\": 16,\n        \"Bayview to North Beach\": 21,\n        \"Bayview to Financial District\": 19,\n        \"Russian Hill to Bayview\": 23,\n        \"Russian Hill to Alamo Square\": 15,\n        \"Russian Hill to North Beach\": 5,\n        \"Russian Hill to Financial District\": 11,\n        \"Alamo Square to Bayview\": 16,\n        \"Alamo Square to Russian Hill\": 13,\n        \"Alamo Square to North Beach\": 15,\n        \"Alamo Square to Financial District\": 17,\n        \"North Beach to Bayview\": 22,\n        \"North Beach to Russian Hill\": 4,\n        \"North Beach to Alamo Square\": 16,\n        \"North Beach to Financial District\": 8,\n        \"Financial District to Bayview\": 19,\n        \"Financial District to Russian Hill\": 10,\n        \"Financial District to Alamo Square\": 17,\n        \"Financial District to North Beach\": 7\n    }\n\n    # Constraints\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    joseph_available = (datetime.strptime(\"8:30AM\", \"%I:%M%p\"), datetime.strptime(\"7:15PM\", \"%I:%M%p\"))\n    nancy_available = (datetime.strptime(\"11:00AM\", \"%I:%M%p\"), datetime.strptime(\"4:00PM\", \"%I:%M%p\"))\n    jason_available = (datetime.strptime(\"4:45PM\", \"%I:%M%p\"), datetime.strptime(\"9:45PM\", \"%I:%M%p\"))\n    jeffrey_available = (datetime.strptime(\"10:30AM\", \"%I:%M%p\"), datetime.strptime(\"3:45PM\", \"%I:%M%p\"))\n    min_meeting_time_joseph = 60\n    min_meeting_time_nancy = 90\n    min_meeting_time_jason = 15\n    min_meeting_time_jeffrey = 45\n\n    # Calculate travel times\n    travel_times = {\n        \"Bayview to Russian Hill\": timedelta(minutes=23),\n        \"Bayview to Alamo Square\": timedelta(minutes=16),\n        \"Bayview to North Beach\": timedelta(minutes=21),\n        \"Bayview to Financial District\": timedelta(minutes=19),\n        \"Russian Hill to Bayview\": timedelta(minutes=23),\n        \"Russian Hill to Alamo Square\": timedelta(minutes=15),\n        \"Russian Hill to North Beach\": timedelta(minutes=5),\n        \"Russian Hill to Financial District\": timedelta(minutes=11),\n        \"Alamo Square to Bayview\": timedelta(minutes=16),\n        \"Alamo Square to Russian Hill\": timedelta(minutes=13),\n        \"Alamo Square to North Beach\": timedelta(minutes=15),\n        \"Alamo Square to Financial District\": timedelta(minutes=17),\n        \"North Beach to Bayview\": timedelta(minutes=22),\n        \"North Beach to Russian Hill\": timedelta(minutes=4),\n        \"North Beach to Alamo Square\": timedelta(minutes=16),\n        \"North Beach to Financial District\": timedelta(minutes=8),\n        \"Financial District to Bayview\": timedelta(minutes=19),\n        \"Financial District to Russian Hill\": timedelta(minutes=10),\n        \"Financial District to Alamo Square\": timedelta(minutes=17),\n        \"Financial District to North Beach\": timedelta(minutes=7)\n    }\n\n    # Schedule\n    schedule = []\n    schedule.append({\"action\": \"start\", \"location\": \"Bayview\", \"time\": start_time.strftime(\"%I:%M%p\")})\n\n    # Meet Joseph\n    joseph_meeting_time = max(start_time, joseph_available[0])\n    joseph_meeting_location = \"Russian Hill\"\n    joseph_meeting_duration = min(min_meeting_time_joseph, (joseph_available[1] - joseph_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": \"Bayview\", \"duration\": travel_times[\"Bayview to Russian Hill\"].total_seconds() / 60, \"time\": joseph_meeting_time.strftime(\"%I:%M%p\"), \"to\": joseph_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": joseph_meeting_location, \"duration\": joseph_meeting_duration, \"time\": joseph_meeting_time.strftime(\"%I:%M%p\")})\n    joseph_meeting_end_time = joseph_meeting_time + timedelta(minutes=joseph_meeting_duration)\n\n    # Meet Nancy\n    nancy_meeting_time = max(joseph_meeting_end_time + timedelta(minutes=30), nancy_available[0])\n    nancy_meeting_location = \"Alamo Square\"\n    nancy_meeting_duration = min(min_meeting_time_nancy, (nancy_available[1] - nancy_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": joseph_meeting_location, \"duration\": travel_times[joseph_meeting_location + \" to \" + nancy_meeting_location].total_seconds() / 60, \"time\": nancy_meeting_time.strftime(\"%I:%M%p\"), \"to\": nancy_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": nancy_meeting_location, \"duration\": nancy_meeting_duration, \"time\": nancy_meeting_time.strftime(\"%I:%M%p\")})\n    nancy_meeting_end_time = nancy_meeting_time + timedelta(minutes=nancy_meeting_duration)\n\n    # Meet Jeffrey\n    jeffrey_meeting_time = max(nancy_meeting_end_time + timedelta(minutes=30), jeffrey_available[0])\n    jeffrey_meeting_location = \"Financial District\"\n    jeffrey_meeting_duration = min(min_meeting_time_jeffrey, (jeffrey_available[1] - jeffrey_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": nancy_meeting_location, \"duration\": travel_times[nancy_meeting_location + \" to \" + jeffrey_meeting_location].total_seconds() / 60, \"time\": jeffrey_meeting_time.strftime(\"%I:%M%p\"), \"to\": jeffrey_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": jeffrey_meeting_location, \"duration\": jeffrey_meeting_duration, \"time\": jeffrey_meeting_time.strftime(\"%I:%M%p\")})\n    jeffrey_meeting_end_time = jeffrey_meeting_time + timedelta(minutes=jeffrey_meeting_duration)\n\n    # Meet Jason\n    jason_meeting_time = max(jeffrey_meeting_end_time + timedelta(minutes=30), jason_available[0])\n    jason_meeting_location = \"North Beach\"\n    jason_meeting_duration = min(min_meeting_time_jason, (jason_available[1] - jason_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": jeffrey_meeting_location, \"duration\": travel_times[jeffrey_meeting_location + \" to \" + jason_meeting_location].total_seconds() / 60, \"time\": jason_meeting_time.strftime(\"%I:%M%p\"), \"to\": jason_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": jason_meeting_location, \"duration\": jason_meeting_duration, \"time\": jason_meeting_time.strftime(\"%I:%M%p\")})\n    jason_meeting_end_time = jason_meeting_time + timedelta(minutes=jason_meeting_duration)\n\n    # Wait until end of meeting\n    wait_time = (datetime.strptime(\"10:00PM\", \"%I:%M%p\") - jason_meeting_end_time).total_seconds() / 60\n    schedule.append({\"action\": \"wait\", \"location\": jason_meeting_location, \"time\": jason_meeting_end_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": jason_meeting_location, \"duration\": travel_times[jason_meeting_location + \" to Bayview\"].total_seconds() / 60, \"time\": jason_meeting_end_time.strftime(\"%I:%M%p\"), \"to\": \"Bayview\"})\n\n    return json.dumps(schedule, indent=4)\n\nprint(\"SOLUTION:\")\nprint(calculate_schedule())\n```",
      "count": "meeting_planning_example_368"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Carol",
            "start_time": "11:30AM",
            "end_time": "12:30PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Jessica",
            "start_time": "3:30PM",
            "end_time": "4:15PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_schedule():\n    # Travel distances (in minutes)\n    travel_distances = {\n        \"Richmond District to Pacific Heights\": 10,\n        \"Richmond District to Marina District\": 9,\n        \"Pacific Heights to Richmond District\": 12,\n        \"Pacific Heights to Marina District\": 6,\n        \"Marina District to Richmond District\": 11,\n        \"Marina District to Pacific Heights\": 7\n    }\n\n    # Constraints\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    jessica_available = (datetime.strptime(\"3:30PM\", \"%I:%M%p\"), datetime.strptime(\"4:45PM\", \"%I:%M%p\"))\n    carol_available = (datetime.strptime(\"11:30AM\", \"%I:%M%p\"), datetime.strptime(\"3:00PM\", \"%I:%M%p\"))\n    min_meeting_time_jessica = 45\n    min_meeting_time_carol = 60\n\n    # Calculate travel times\n    travel_times = {\n        \"Richmond District to Pacific Heights\": timedelta(minutes=10),\n        \"Richmond District to Marina District\": timedelta(minutes=9),\n        \"Pacific Heights to Richmond District\": timedelta(minutes=12),\n        \"Pacific Heights to Marina District\": timedelta(minutes=6),\n        \"Marina District to Richmond District\": timedelta(minutes=11),\n        \"Marina District to Pacific Heights\": timedelta(minutes=7)\n    }\n\n    # Schedule\n    schedule = []\n    schedule.append({\"action\": \"start\", \"location\": \"Richmond District\", \"time\": start_time.strftime(\"%I:%M%p\")})\n\n    # Meet Carol\n    carol_meeting_time = max(start_time, carol_available[0])\n    carol_meeting_location = \"Marina District\"\n    carol_meeting_duration = min(min_meeting_time_carol, (carol_available[1] - carol_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": \"Richmond District\", \"duration\": travel_times[\"Richmond District to Marina District\"].total_seconds() / 60, \"time\": carol_meeting_time.strftime(\"%I:%M%p\"), \"to\": carol_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": carol_meeting_location, \"duration\": carol_meeting_duration, \"time\": carol_meeting_time.strftime(\"%I:%M%p\")})\n    carol_meeting_end_time = carol_meeting_time + timedelta(minutes=carol_meeting_duration)\n\n    # Meet Jessica\n    jessica_meeting_time = max(carol_meeting_end_time + timedelta(minutes=30), jessica_available[0])\n    jessica_meeting_location = \"Pacific Heights\"\n    jessica_meeting_duration = min(min_meeting_time_jessica, (jessica_available[1] - jessica_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": carol_meeting_location, \"duration\": travel_times[carol_meeting_location + \" to \" + jessica_meeting_location].total_seconds() / 60, \"time\": jessica_meeting_time.strftime(\"%I:%M%p\"), \"to\": jessica_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": jessica_meeting_location, \"duration\": jessica_meeting_duration, \"time\": jessica_meeting_time.strftime(\"%I:%M%p\")})\n    jessica_meeting_end_time = jessica_meeting_time + timedelta(minutes=jessica_meeting_duration)\n\n    # Wait until end of meeting\n    wait_time = (datetime.strptime(\"5:00PM\", \"%I:%M%p\") - jessica_meeting_end_time).total_seconds() / 60\n    schedule.append({\"action\": \"wait\", \"location\": jessica_meeting_location, \"time\": jessica_meeting_end_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": jessica_meeting_location, \"duration\": travel_times[jessica_meeting_location + \" to Richmond District\"].total_seconds() / 60, \"time\": jessica_meeting_end_time.strftime(\"%I:%M%p\"), \"to\": \"Richmond District\"})\n\n    return json.dumps(schedule, indent=4)\n\nprint(\"SOLUTION:\")\nprint(calculate_schedule())\n```",
      "count": "meeting_planning_example_115"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Robert",
            "start_time": "11:15AM",
            "end_time": "1:15PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_schedule():\n    # Travel distances (in minutes)\n    travel_distances = {\n        \"Nob Hill to Presidio\": 17,\n        \"Presidio to Nob Hill\": 18\n    }\n\n    # Constraints\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    robert_available = (datetime.strptime(\"11:15AM\", \"%I:%M%p\"), datetime.strptime(\"5:45PM\", \"%I:%M%p\"))\n    min_meeting_time_robert = 120\n\n    # Calculate travel times\n    travel_times = {\n        \"Nob Hill to Presidio\": timedelta(minutes=17),\n        \"Presidio to Nob Hill\": timedelta(minutes=18)\n    }\n\n    # Schedule\n    schedule = []\n    schedule.append({\"action\": \"start\", \"location\": \"Nob Hill\", \"time\": start_time.strftime(\"%I:%M%p\")})\n\n    # Meet Robert\n    robert_meeting_time = max(start_time, robert_available[0])\n    robert_meeting_location = \"Presidio\"\n    robert_meeting_duration = min(min_meeting_time_robert, (robert_available[1] - robert_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": \"Nob Hill\", \"duration\": travel_times[\"Nob Hill to Presidio\"].total_seconds() / 60, \"time\": robert_meeting_time.strftime(\"%I:%M%p\"), \"to\": robert_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": robert_meeting_location, \"duration\": robert_meeting_duration, \"time\": robert_meeting_time.strftime(\"%I:%M%p\")})\n    robert_meeting_end_time = robert_meeting_time + timedelta(minutes=robert_meeting_duration)\n\n    # Wait until end of meeting\n    wait_time = (datetime.strptime(\"6:00PM\", \"%I:%M%p\") - robert_meeting_end_time).total_seconds() / 60\n    schedule.append({\"action\": \"wait\", \"location\": robert_meeting_location, \"time\": robert_meeting_end_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": robert_meeting_location, \"duration\": travel_times[robert_meeting_location + \" to Nob Hill\"].total_seconds() / 60, \"time\": robert_meeting_end_time.strftime(\"%I:%M%p\"), \"to\": \"Nob Hill\"})\n\n    return json.dumps(schedule, indent=4)\n\nprint(\"SOLUTION:\")\nprint(calculate_schedule())\n```",
      "count": "meeting_planning_example_66"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Financial District",
            "person": "Stephanie",
            "start_time": "9:05AM",
            "end_time": "10:35AM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "John",
            "start_time": "10:52AM",
            "end_time": "11:22AM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_schedule():\n    # Travel distances (in minutes)\n    travel_distances = {\n        \"Embarcadero to Financial District\": 5,\n        \"Embarcadero to Alamo Square\": 19,\n        \"Financial District to Embarcadero\": 4,\n        \"Financial District to Alamo Square\": 17,\n        \"Alamo Square to Embarcadero\": 17,\n        \"Alamo Square to Financial District\": 17\n    }\n\n    # Constraints\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    stephanie_available = (datetime.strptime(\"8:15AM\", \"%I:%M%p\"), datetime.strptime(\"11:30AM\", \"%I:%M%p\"))\n    john_available = (datetime.strptime(\"10:15AM\", \"%I:%M%p\"), datetime.strptime(\"8:45PM\", \"%I:%M%p\"))\n    min_meeting_time_stephanie = 90\n    min_meeting_time_john = 30\n\n    # Calculate travel times\n    travel_times = {\n        \"Embarcadero to Financial District\": timedelta(minutes=5),\n        \"Embarcadero to Alamo Square\": timedelta(minutes=19),\n        \"Financial District to Embarcadero\": timedelta(minutes=4),\n        \"Financial District to Alamo Square\": timedelta(minutes=17),\n        \"Alamo Square to Embarcadero\": timedelta(minutes=17),\n        \"Alamo Square to Financial District\": timedelta(minutes=17)\n    }\n\n    # Schedule\n    schedule = []\n    schedule.append({\"action\": \"start\", \"location\": \"Embarcadero\", \"time\": start_time.strftime(\"%I:%M%p\")})\n\n    # Meet Stephanie\n    stephanie_meeting_time = max(start_time, stephanie_available[0])\n    stephanie_meeting_location = \"Financial District\"\n    stephanie_meeting_duration = min(min_meeting_time_stephanie, (stephanie_available[1] - stephanie_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": \"Embarcadero\", \"duration\": travel_times[\"Embarcadero to Financial District\"].total_seconds() / 60, \"time\": stephanie_meeting_time.strftime(\"%I:%M%p\"), \"to\": stephanie_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": stephanie_meeting_location, \"duration\": stephanie_meeting_duration, \"time\": stephanie_meeting_time.strftime(\"%I:%M%p\")})\n    stephanie_meeting_end_time = stephanie_meeting_time + timedelta(minutes=stephanie_meeting_duration)\n\n    # Meet John\n    john_meeting_time = max(stephanie_meeting_end_time + timedelta(minutes=30), john_available[0])\n    john_meeting_location = \"Alamo Square\"\n    john_meeting_duration = min(min_meeting_time_john, (john_available[1] - john_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": stephanie_meeting_location, \"duration\": travel_times[stephanie_meeting_location + \" to \" + john_meeting_location].total_seconds() / 60, \"time\": john_meeting_time.strftime(\"%I:%M%p\"), \"to\": john_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": john_meeting_location, \"duration\": john_meeting_duration, \"time\": john_meeting_time.strftime(\"%I:%M%p\")})\n    john_meeting_end_time = john_meeting_time + timedelta(minutes=john_meeting_duration)\n\n    # Wait until end of meeting\n    wait_time = (datetime.strptime(\"10:00PM\", \"%I:%M%p\") - john_meeting_end_time).total_seconds() / 60\n    schedule.append({\"action\": \"wait\", \"location\": john_meeting_location, \"time\": john_meeting_end_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": john_meeting_location, \"duration\": travel_times[john_meeting_location + \" to Embarcadero\"].total_seconds() / 60, \"time\": john_meeting_end_time.strftime(\"%I:%M%p\"), \"to\": \"Embarcadero\"})\n\n    return json.dumps(schedule, indent=4)\n\nprint(\"SOLUTION:\")\nprint(calculate_schedule())\n```",
      "count": "meeting_planning_example_125"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Jason",
            "start_time": "10:00AM",
            "end_time": "11:30AM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Kenneth",
            "start_time": "3:30PM",
            "end_time": "4:15PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_schedule():\n    # Travel distances (in minutes)\n    travel_distances = {\n        \"Pacific Heights to Presidio\": 11,\n        \"Pacific Heights to Marina District\": 6,\n        \"Presidio to Pacific Heights\": 11,\n        \"Presidio to Marina District\": 10,\n        \"Marina District to Pacific Heights\": 7,\n        \"Marina District to Presidio\": 10\n    }\n\n    # Constraints\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    jason_available = (datetime.strptime(\"10:00AM\", \"%I:%M%p\"), datetime.strptime(\"4:15PM\", \"%I:%M%p\"))\n    kenneth_available = (datetime.strptime(\"3:30PM\", \"%I:%M%p\"), datetime.strptime(\"4:45PM\", \"%I:%M%p\"))\n    min_meeting_time_jason = 90\n    min_meeting_time_kenneth = 45\n\n    # Calculate travel times\n    travel_times = {\n        \"Pacific Heights to Presidio\": timedelta(minutes=11),\n        \"Pacific Heights to Marina District\": timedelta(minutes=6),\n        \"Presidio to Pacific Heights\": timedelta(minutes=11),\n        \"Presidio to Marina District\": timedelta(minutes=10),\n        \"Marina District to Pacific Heights\": timedelta(minutes=7),\n        \"Marina District to Presidio\": timedelta(minutes=10)\n    }\n\n    # Schedule\n    schedule = []\n    schedule.append({\"action\": \"start\", \"location\": \"Pacific Heights\", \"time\": start_time.strftime(\"%I:%M%p\")})\n\n    # Meet Jason\n    jason_meeting_time = max(start_time, jason_available[0])\n    jason_meeting_location = \"Presidio\"\n    jason_meeting_duration = min(min_meeting_time_jason, (jason_available[1] - jason_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": \"Pacific Heights\", \"duration\": travel_times[\"Pacific Heights to Presidio\"].total_seconds() / 60, \"time\": jason_meeting_time.strftime(\"%I:%M%p\"), \"to\": jason_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": jason_meeting_location, \"duration\": jason_meeting_duration, \"time\": jason_meeting_time.strftime(\"%I:%M%p\")})\n    jason_meeting_end_time = jason_meeting_time + timedelta(minutes=jason_meeting_duration)\n\n    # Meet Kenneth\n    kenneth_meeting_time = max(jason_meeting_end_time + timedelta(minutes=30), kenneth_available[0])\n    kenneth_meeting_location = \"Marina District\"\n    kenneth_meeting_duration = min(min_meeting_time_kenneth, (kenneth_available[1] - kenneth_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": jason_meeting_location, \"duration\": travel_times[jason_meeting_location + \" to \" + kenneth_meeting_location].total_seconds() / 60, \"time\": kenneth_meeting_time.strftime(\"%I:%M%p\"), \"to\": kenneth_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": kenneth_meeting_location, \"duration\": kenneth_meeting_duration, \"time\": kenneth_meeting_time.strftime(\"%I:%M%p\")})\n    kenneth_meeting_end_time = kenneth_meeting_time + timedelta(minutes=kenneth_meeting_duration)\n\n    # Wait until end of meeting\n    wait_time = (datetime.strptime(\"6:00PM\", \"%I:%M%p\") - kenneth_meeting_end_time).total_seconds() / 60\n    schedule.append({\"action\": \"wait\", \"location\": kenneth_meeting_location, \"time\": kenneth_meeting_end_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": kenneth_meeting_location, \"duration\": travel_times[kenneth_meeting_location + \" to Pacific Heights\"].total_seconds() / 60, \"time\": kenneth_meeting_end_time.strftime(\"%I:%M%p\"), \"to\": \"Pacific Heights\"})\n\n    return json.dumps(schedule, indent=4)\n\nprint(\"SOLUTION:\")\nprint(calculate_schedule())\n```",
      "count": "meeting_planning_example_131"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Richmond District",
            "person": "Jeffrey",
            "start_time": "12:00PM",
            "end_time": "12:45PM"
          },
          {
            "action": "meet",
            "location": "Presidio",
            "person": "Charles",
            "start_time": "1:15PM",
            "end_time": "3:00PM"
          },
          {
            "action": "meet",
            "location": "Nob Hill",
            "person": "Robert",
            "start_time": "3:18PM",
            "end_time": "4:48PM"
          },
          {
            "action": "meet",
            "location": "Marina District",
            "person": "Kimberly",
            "start_time": "5:00PM",
            "end_time": "6:15PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Karen",
            "start_time": "6:29PM",
            "end_time": "7:29PM"
          },
          {
            "action": "meet",
            "location": "Mission District",
            "person": "Brian",
            "start_time": "7:49PM",
            "end_time": "8:49PM"
          },
          {
            "action": "meet",
            "location": "Alamo Square",
            "person": "Joshua",
            "start_time": "9:00PM",
            "end_time": "10:00PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_schedule():\n    # Travel distances (in minutes)\n    travel_distances = {\n        \"Sunset District to Presidio\": 16,\n        \"Sunset District to Nob Hill\": 27,\n        \"Sunset District to Pacific Heights\": 21,\n        \"Sunset District to Mission District\": 25,\n        \"Sunset District to Marina District\": 21,\n        \"Sunset District to North Beach\": 28,\n        \"Sunset District to Russian Hill\": 24,\n        \"Sunset District to Richmond District\": 12,\n        \"Sunset District to Embarcadero\": 30,\n        \"Sunset District to Alamo Square\": 17,\n        \"Presidio to Sunset District\": 15,\n        \"Presidio to Nob Hill\": 18,\n        \"Presidio to Pacific Heights\": 11,\n        \"Presidio to Mission District\": 26,\n        \"Presidio to Marina District\": 11,\n        \"Presidio to North Beach\": 18,\n        \"Presidio to Russian Hill\": 14,\n        \"Presidio to Richmond District\": 7,\n        \"Presidio to Embarcadero\": 20,\n        \"Presidio to Alamo Square\": 19,\n        \"Nob Hill to Sunset District\": 24,\n        \"Nob Hill to Presidio\": 17,\n        \"Nob Hill to Pacific Heights\": 8,\n        \"Nob Hill to Mission District\": 13,\n        \"Nob Hill to Marina District\": 11,\n        \"Nob Hill to North Beach\": 8,\n        \"Nob Hill to Russian Hill\": 5,\n        \"Nob Hill to Richmond District\": 14,\n        \"Nob Hill to Embarcadero\": 9,\n        \"Nob Hill to Alamo Square\": 11,\n        \"Pacific Heights to Sunset District\": 21,\n        \"Pacific Heights to Presidio\": 11,\n        \"Pacific Heights to Nob Hill\": 8,\n        \"Pacific Heights to Mission District\": 15,\n        \"Pacific Heights to Marina District\": 6,\n        \"Pacific Heights to North Beach\": 9,\n        \"Pacific Heights to Russian Hill\": 7,\n        \"Pacific Heights to Richmond District\": 12,\n        \"Pacific Heights to Embarcadero\": 10,\n        \"Pacific Heights to Alamo Square\": 10,\n        \"Mission District to Sunset District\": 24,\n        \"Mission District to Presidio\": 25,\n        \"Mission District to Nob Hill\": 12,\n        \"Mission District to Pacific Heights\": 16,\n        \"Mission District to Marina District\": 19,\n        \"Mission District to North Beach\": 17,\n        \"Mission District to Russian Hill\": 15,\n        \"Mission District to Richmond District\": 20,\n        \"Mission District to Embarcadero\": 19,\n        \"Mission District to Alamo Square\": 11,\n        \"Marina District to Sunset District\": 19,\n        \"Marina District to Presidio\": 10,\n        \"Marina District to Nob Hill\": 12,\n        \"Marina District to Pacific Heights\": 7,\n        \"Marina District to Mission District\": 20,\n        \"Marina District to North Beach\": 11,\n        \"Marina District to Russian Hill\": 8,\n        \"Marina District to Richmond District\": 11,\n        \"Marina District to Embarcadero\": 14,\n        \"Marina District to Alamo Square\": 15,\n        \"North Beach to Sunset District\": 27,\n        \"North Beach to Presidio\": 17,\n        \"North Beach to Nob Hill\": 7,\n        \"North Beach to Pacific Heights\": 8,\n        \"North Beach to Mission District\": 18,\n        \"North Beach to Marina District\": 9,\n        \"North Beach to Russian Hill\": 4,\n        \"North Beach to Richmond District\": 18,\n        \"North Beach to Embarcadero\": 6,\n        \"North Beach to Alamo Square\": 16,\n        \"Russian Hill to Sunset District\": 23,\n        \"Russian Hill to Presidio\": 14,\n        \"Russian Hill to Nob Hill\": 5,\n        \"Russian Hill to Pacific Heights\": 7,\n        \"Russian Hill to Mission District\": 16,\n        \"Russian Hill to Marina District\": 7,\n        \"Russian Hill to North Beach\": 5,\n        \"Russian Hill to Richmond District\": 14,\n        \"Russian Hill to Embarcadero\": 8,\n        \"Russian Hill to Alamo Square\": 15,\n        \"Richmond District to Sunset District\": 11,\n        \"Richmond District to Presidio\": 7,\n        \"Richmond District to Nob Hill\": 17,\n        \"Richmond District to Pacific Heights\": 10,\n        \"Richmond District to Mission District\": 20,\n        \"Richmond District to Marina District\": 9,\n        \"Richmond District to North Beach\": 17,\n        \"Richmond District to Russian Hill\": 13,\n        \"Richmond District to Embarcadero\": 19,\n        \"Richmond District to Alamo Square\": 13,\n        \"Embarcadero to Sunset District\": 30,\n        \"Embarcadero to Presidio\": 20,\n        \"Embarcadero to Nob Hill\": 10,\n        \"Embarcadero to Pacific Heights\": 11,\n        \"Embarcadero to Mission District\": 20,\n        \"Embarcadero to Marina District\": 12,\n        \"Embarcadero to North Beach\": 5,\n        \"Embarcadero to Russian Hill\": 8,\n        \"Embarcadero to Richmond District\": 21,\n        \"Embarcadero to Alamo Square\": 19,\n        \"Alamo Square to Sunset District\": 16,\n        \"Alamo Square to Presidio\": 17,\n        \"Alamo Square to Nob Hill\": 11,\n        \"Alamo Square to Pacific Heights\": 10,\n        \"Alamo Square to Mission District\": 10,\n        \"Alamo Square to Marina District\": 15,\n        \"Alamo Square to North Beach\": 15,\n        \"Alamo Square to Russian Hill\": 13,\n        \"Alamo Square to Richmond District\": 11,\n        \"Alamo Square to Embarcadero\": 16\n    }\n\n    # Constraints\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    charles_available = (datetime.strptime(\"1:15PM\", \"%I:%M%p\"), datetime.strptime(\"3:00PM\", \"%I:%M%p\"))\n    robert_available = (datetime.strptime(\"1:15PM\", \"%I:%M%p\"), datetime.strptime(\"5:30PM\", \"%I:%M%p\"))\n    nancy_available = (datetime.strptime(\"2:45PM\", \"%I:%M%p\"), datetime.strptime(\"10:00PM\", \"%I:%M%p\"))\n    brian_available = (datetime.strptime(\"3:30PM\", \"%I:%M%p\"), datetime.strptime(\"10:00PM\", \"%I:%M%p\"))\n    kimberly_available = (datetime.strptime(\"5:00PM\", \"%I:%M%p\"), datetime.strptime(\"7:45PM\", \"%I:%M%p\"))\n    david_available = (datetime.strptime(\"2:45PM\", \"%I:%M%p\"), datetime.strptime(\"4:30PM\", \"%I:%M%p\"))\n    william_available = (datetime.strptime(\"12:30PM\", \"%I:%M%p\"), datetime.strptime(\"7:15PM\", \"%I:%M%p\"))\n    jeffrey_available = (datetime.strptime(\"12:00PM\", \"%I:%M%p\"), datetime.strptime(\"7:15PM\", \"%I:%M%p\"))\n    karen_available = (datetime.strptime(\"2:15PM\", \"%I:%M%p\"), datetime.strptime(\"8:45PM\", \"%I:%M%p\"))\n    joshua_available = (datetime.strptime(\"6:45PM\", \"%I:%M%p\"), datetime.strptime(\"10:00PM\", \"%I:%M%p\"))\n    min_meeting_time_charles = 105\n    min_meeting_time_robert = 90\n    min_meeting_time_nancy = 105\n    min_meeting_time_brian = 60\n    min_meeting_time_kimberly = 75\n    min_meeting_time_david = 75\n    min_meeting_time_william = 120\n    min_meeting_time_jeffrey = 45\n    min_meeting_time_karen = 60\n    min_meeting_time_joshua = 60\n\n    # Calculate travel times\n    travel_times = {\n        \"Sunset District to Presidio\": timedelta(minutes=16),\n        \"Sunset District to Nob Hill\": timedelta(minutes=27),\n        \"Sunset District to Pacific Heights\": timedelta(minutes=21),\n        \"Sunset District to Mission District\": timedelta(minutes=25),\n        \"Sunset District to Marina District\": timedelta(minutes=21),\n        \"Sunset District to North Beach\": timedelta(minutes=28),\n        \"Sunset District to Russian Hill\": timedelta(minutes=24),\n        \"Sunset District to Richmond District\": timedelta(minutes=12),\n        \"Sunset District to Embarcadero\": timedelta(minutes=30),\n        \"Sunset District to Alamo Square\": timedelta(minutes=17),\n        \"Presidio to Sunset District\": timedelta(minutes=15),\n        \"Presidio to Nob Hill\": timedelta(minutes=18),\n        \"Presidio to Pacific Heights\": timedelta(minutes=11),\n        \"Presidio to Mission District\": timedelta(minutes=26),\n        \"Presidio to Marina District\": timedelta(minutes=11),\n        \"Presidio to North Beach\": timedelta(minutes=18),\n        \"Presidio to Russian Hill\": timedelta(minutes=14),\n        \"Presidio to Richmond District\": timedelta(minutes=7),\n        \"Presidio to Embarcadero\": timedelta(minutes=20),\n        \"Presidio to Alamo Square\": timedelta(minutes=19),\n        \"Nob Hill to Sunset District\": timedelta(minutes=24),\n        \"Nob Hill to Presidio\": timedelta(minutes=17),\n        \"Nob Hill to Pacific Heights\": timedelta(minutes=8),\n        \"Nob Hill to Mission District\": timedelta(minutes=13),\n        \"Nob Hill to Marina District\": timedelta(minutes=11),\n        \"Nob Hill to North Beach\": timedelta(minutes=8),\n        \"Nob Hill to Russian Hill\": timedelta(minutes=5),\n        \"Nob Hill to Richmond District\": timedelta(minutes=14),\n        \"Nob Hill to Embarcadero\": timedelta(minutes=9),\n        \"Nob Hill to Alamo Square\": timedelta(minutes=11),\n        \"Pacific Heights to Sunset District\": timedelta(minutes=21),\n        \"Pacific Heights to Presidio\": timedelta(minutes=11),\n        \"Pacific Heights to Nob Hill\": timedelta(minutes=8),\n        \"Pacific Heights to Mission District\": timedelta(minutes=15),\n        \"Pacific Heights to Marina District\": timedelta(minutes=6),\n        \"Pacific Heights to North Beach\": timedelta(minutes=9),\n        \"Pacific Heights to Russian Hill\": timedelta(minutes=7),\n        \"Pacific Heights to Richmond District\": timedelta(minutes=12),\n        \"Pacific Heights to Embarcadero\": timedelta(minutes=10),\n        \"Pacific Heights to Alamo Square\": timedelta(minutes=10),\n        \"Mission District to Sunset District\": timedelta(minutes=24),\n        \"Mission District to Presidio\": timedelta(minutes=25),\n        \"Mission District to Nob Hill\": timedelta(minutes=12),\n        \"Mission District to Pacific Heights\": timedelta(minutes=16),\n        \"Mission District to Marina District\": timedelta(minutes=19),\n        \"Mission District to North Beach\": timedelta(minutes=17),\n        \"Mission District to Russian Hill\": timedelta(minutes=15),\n        \"Mission District to Richmond District\": timedelta(minutes=20),\n        \"Mission District to Embarcadero\": timedelta(minutes=19),\n        \"Mission District to Alamo Square\": timedelta(minutes=11),\n        \"Marina District to Sunset District\": timedelta(minutes=19),\n        \"Marina District to Presidio\": timedelta(minutes=10),\n        \"Marina District to Nob Hill\": timedelta(minutes=12),\n        \"Marina District to Pacific Heights\": timedelta(minutes=7),\n        \"Marina District to Mission District\": timedelta(minutes=20),\n        \"Marina District to North Beach\": timedelta(minutes=11),\n        \"Marina District to Russian Hill\": timedelta(minutes=8),\n        \"Marina District to Richmond District\": timedelta(minutes=11),\n        \"Marina District to Embarcadero\": timedelta(minutes=14),\n        \"Marina District to Alamo Square\": timedelta(minutes=15),\n        \"North Beach to Sunset District\": timedelta(minutes=27),\n        \"North Beach to Presidio\": timedelta(minutes=17),\n        \"North Beach to Nob Hill\": timedelta(minutes=7),\n        \"North Beach to Pacific Heights\": timedelta(minutes=8),\n        \"North Beach to Mission District\": timedelta(minutes=18),\n        \"North Beach to Marina District\": timedelta(minutes=9),\n        \"North Beach to Russian Hill\": timedelta(minutes=4),\n        \"North Beach to Richmond District\": timedelta(minutes=18),\n        \"North Beach to Embarcadero\": timedelta(minutes=6),\n        \"North Beach to Alamo Square\": timedelta(minutes=16),\n        \"Russian Hill to Sunset District\": timedelta(minutes=23),\n        \"Russian Hill to Presidio\": timedelta(minutes=14),\n        \"Russian Hill to Nob Hill\": timedelta(minutes=5),\n        \"Russian Hill to Pacific Heights\": timedelta(minutes=7),\n        \"Russian Hill to Mission District\": timedelta(minutes=16),\n        \"Russian Hill to Marina District\": timedelta(minutes=7),\n        \"Russian Hill to North Beach\": timedelta(minutes=5),\n        \"Russian Hill to Richmond District\": timedelta(minutes=14),\n        \"Russian Hill to Embarcadero\": timedelta(minutes=8),\n        \"Russian Hill to Alamo Square\": timedelta(minutes=15),\n        \"Richmond District to Sunset District\": timedelta(minutes=11),\n        \"Richmond District to Presidio\": timedelta(minutes=7),\n        \"Richmond District to Nob Hill\": timedelta(minutes=17),\n        \"Richmond District to Pacific Heights\": timedelta(minutes=10),\n        \"Richmond District to Mission District\": timedelta(minutes=20),\n        \"Richmond District to Marina District\": timedelta(minutes=9),\n        \"Richmond District to North Beach\": timedelta(minutes=17),\n        \"Richmond District to Russian Hill\": timedelta(minutes=13),\n        \"Richmond District to Embarcadero\": timedelta(minutes=19),\n        \"Richmond District to Alamo Square\": timedelta(minutes=13),\n        \"Embarcadero to Sunset District\": timedelta(minutes=30),\n        \"Embarcadero to Presidio\": timedelta(minutes=20),\n        \"Embarcadero to Nob Hill\": timedelta(minutes=10),\n        \"Embarcadero to Pacific Heights\": timedelta(minutes=11),\n        \"Embarcadero to Mission District\": timedelta(minutes=20),\n        \"Embarcadero to Marina District\": timedelta(minutes=12),\n        \"Embarcadero to North Beach\": timedelta(minutes=5),\n        \"Embarcadero to Russian Hill\": timedelta(minutes=8),\n        \"Embarcadero to Richmond District\": timedelta(minutes=21),\n        \"Embarcadero to Alamo Square\": timedelta(minutes=19),\n        \"Alamo Square to Sunset District\": timedelta(minutes=16),\n        \"Alamo Square to Presidio\": timedelta(minutes=17),\n        \"Alamo Square to Nob Hill\": timedelta(minutes=11),\n        \"Alamo Square to Pacific Heights\": timedelta(minutes=10),\n        \"Alamo Square to Mission District\": timedelta(minutes=10),\n        \"Alamo Square to Marina District\": timedelta(minutes=15),\n        \"Alamo Square to North Beach\": timedelta(minutes=15),\n        \"Alamo Square to Russian Hill\": timedelta(minutes=13),\n        \"Alamo Square to Richmond District\": timedelta(minutes=11),\n        \"Alamo Square to Embarcadero\": timedelta(minutes=16)\n    }\n\n    # Schedule\n    schedule = []\n    schedule.append({\"action\": \"start\", \"location\": \"Sunset District\", \"time\": start_time.strftime(\"%I:%M%p\")})\n\n    # Meet Charles\n    charles_meeting_time = max(start_time, charles_available[0])\n    charles_meeting_location = \"Presidio\"\n    charles_meeting_duration = min(min_meeting_time_charles, (charles_available[1] - charles_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": \"Sunset District\", \"duration\": travel_times[\"Sunset District to Presidio\"].total_seconds() / 60, \"time\": charles_meeting_time.strftime(\"%I:%M%p\"), \"to\": charles_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": charles_meeting_location, \"duration\": charles_meeting_duration, \"time\": charles_meeting_time.strftime(\"%I:%M%p\")})\n    charles_meeting_end_time = charles_meeting_time + timedelta(minutes=charles_meeting_duration)\n\n    # Meet Robert\n    robert_meeting_time = max(charles_meeting_end_time + timedelta(minutes=30), robert_available[0])\n    robert_meeting_location = \"Nob Hill\"\n    robert_meeting_duration = min(min_meeting_time_robert, (robert_available[1] - robert_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": charles_meeting_location, \"duration\": travel_times[charles_meeting_location + \" to \" + robert_meeting_location].total_seconds() / 60, \"time\": robert_meeting_time.strftime(\"%I:%M%p\"), \"to\": robert_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": robert_meeting_location, \"duration\": robert_meeting_duration, \"time\": robert_meeting_time.strftime(\"%I:%M%p\")})\n    robert_meeting_end_time = robert_meeting_time + timedelta(minutes=robert_meeting_duration)\n\n    # Meet Nancy\n    nancy_meeting_time = max(robert_meeting_end_time + timedelta(minutes=30), nancy_available[0])\n    nancy_meeting_location = \"Pacific Heights\"\n    nancy_meeting_duration = min(min_meeting_time_nancy, (nancy_available[1] - nancy_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": robert_meeting_location, \"duration\": travel_times[robert_meeting_location + \" to \" + nancy_meeting_location].total_seconds() / 60, \"time\": nancy_meeting_time.strftime(\"%I:%M%p\"), \"to\": nancy_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": nancy_meeting_location, \"duration\": nancy_meeting_duration, \"time\": nancy_meeting_time.strftime(\"%I:%M%p\")})\n    nancy_meeting_end_time = nancy_meeting_time + timedelta(minutes=nancy_meeting_duration)\n\n    # Meet Brian\n    brian_meeting_time = max(nancy_meeting_end_time + timedelta(minutes=30), brian_available[0])\n    brian_meeting_location = \"Mission District\"\n    brian_meeting_duration = min(min_meeting_time_brian, (brian_available[1] - brian_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": nancy_meeting_location, \"duration\": travel_times[nancy_meeting_location + \" to \" + brian_meeting_location].total_seconds() / 60, \"time\": brian_meeting_time.strftime(\"%I:%M%p\"), \"to\": brian_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": brian_meeting_location, \"duration\": brian_meeting_duration, \"time\": brian_meeting_time.strftime(\"%I:%M%p\")})\n    brian_meeting_end_time = brian_meeting_time + timedelta(minutes=brian_meeting_duration)\n\n    # Meet Kimberly\n    kimberly_meeting_time = max(brian_meeting_end_time + timedelta(minutes=30), kimberly_available[0])\n    kimberly_meeting_location = \"Marina District\"\n    kimberly_meeting_duration = min(min_meeting_time_kimberly, (kimberly_available[1] - kimberly_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": brian_meeting_location, \"duration\": travel_times[brian_meeting_location + \" to \" + kimberly_meeting_location].total_seconds() / 60, \"time\": kimberly_meeting_time.strftime(\"%I:%M%p\"), \"to\": kimberly_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": kimberly_meeting_location, \"duration\": kimberly_meeting_duration, \"time\": kimberly_meeting_time.strftime(\"%I:%M%p\")})\n    kimberly_meeting_end_time = kimberly_meeting_time + timedelta(minutes=kimberly_meeting_duration)\n\n    # Meet David\n    david_meeting_time = max(kimberly_meeting_end_time + timedelta(minutes=30), david_available[0])\n    david_meeting_location = \"North Beach\"\n    david_meeting_duration = min(min_meeting_time_david, (david_available[1] - david_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": kimberly_meeting_location, \"duration\": travel_times[kimberly_meeting_location + \" to \" + david_meeting_location].total_seconds() / 60, \"time\": david_meeting_time.strftime(\"%I:%M%p\"), \"to\": david_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": david_meeting_location, \"duration\": david_meeting_duration, \"time\": david_meeting_time.strftime(\"%I:%M%p\")})\n    david_meeting_end_time = david_meeting_time + timedelta(minutes=david_meeting_duration)\n\n    # Meet William\n    william_meeting_time = max(david_meeting_end_time + timedelta(minutes=30), william_available[0])\n    william_meeting_location = \"Russian Hill\"\n    william_meeting_duration = min(min_meeting_time_william, (william_available[1] - william_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": david_meeting_location, \"duration\": travel_times[david_meeting_location + \" to \" + william_meeting_location].total_seconds() / 60, \"time\": william_meeting_time.strftime(\"%I:%M%p\"), \"to\": william_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": william_meeting_location, \"duration\": william_meeting_duration, \"time\": william_meeting_time.strftime(\"%I:%M%p\")})\n    william_meeting_end_time = william_meeting_time + timedelta(minutes=william_meeting_duration)\n\n    # Meet Jeffrey\n    jeffrey_meeting_time = max(william_meeting_end_time + timedelta(minutes=30), jeffrey_available[0])\n    jeffrey_meeting_location = \"Richmond District\"\n    jeffrey_meeting_duration = min(min_meeting_time_jeffrey, (jeffrey_available[1] - jeffrey_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": william_meeting_location, \"duration\": travel_times[william_meeting_location + \" to \" + jeffrey_meeting_location].total_seconds() / 60, \"time\": jeffrey_meeting_time.strftime(\"%I:%M%p\"), \"to\": jeffrey_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": jeffrey_meeting_location, \"duration\": jeffrey_meeting_duration, \"time\": jeffrey_meeting_time.strftime(\"%I:%M%p\")})\n    jeffrey_meeting_end_time = jeffrey_meeting_time + timedelta(minutes=jeffrey_meeting_duration)\n\n    # Meet Karen\n    karen_meeting_time = max(jeffrey_meeting_end_time + timedelta(minutes=30), karen_available[0])\n    karen_meeting_location = \"Embarcadero\"\n    karen_meeting_duration = min(min_meeting_time_karen, (karen_available[1] - karen_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": jeffrey_meeting_location, \"duration\": travel_times[jeffrey_meeting_location + \" to \" + karen_meeting_location].total_seconds() / 60, \"time\": karen_meeting_time.strftime(\"%I:%M%p\"), \"to\": karen_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": karen_meeting_location, \"duration\": karen_meeting_duration, \"time\": karen_meeting_time.strftime(\"%I:%M%p\")})\n    karen_meeting_end_time = karen_meeting_time + timedelta(minutes=karen_meeting_duration)\n\n    # Meet Joshua\n    joshua_meeting_time = max(karen_meeting_end_time + timedelta(minutes=30), joshua_available[0])\n    joshua_meeting_location = \"Alamo Square\"\n    joshua_meeting_duration = min(min_meeting_time_joshua, (joshua_available[1] - joshua_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": karen_meeting_location, \"duration\": travel_times[karen_meeting_location + \" to \" + joshua_meeting_location].total_seconds() / 60, \"time\": joshua_meeting_time.strftime(\"%I:%M%p\"), \"to\": joshua_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": joshua_meeting_location, \"duration\": joshua_meeting_duration, \"time\": joshua_meeting_time.strftime(\"%I:%M%p\")})\n    joshua_meeting_end_time = joshua_meeting_time + timedelta(minutes=joshua_meeting_duration)\n\n    # Wait until end of meeting\n    wait_time = (datetime.strptime(\"11:00PM\", \"%I:%M%p\") - joshua_meeting_end_time).total_seconds() / 60\n    schedule.append({\"action\": \"wait\", \"location\": joshua_meeting_location, \"time\": joshua_meeting_end_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": joshua_meeting_location, \"duration\": travel_times[joshua_meeting_location + \" to Sunset District\"].total_seconds() / 60, \"time\": joshua_meeting_end_time.strftime(\"%I:%M%p\"), \"to\": \"Sunset District\"})\n\n    return json.dumps(schedule, indent=4)\n\nprint(\"SOLUTION:\")\nprint(calculate_schedule())\n```",
      "count": "meeting_planning_example_974"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "Haight-Ashbury",
            "person": "Rebecca",
            "start_time": "2:45PM",
            "end_time": "3:45PM"
          },
          {
            "action": "meet",
            "location": "Pacific Heights",
            "person": "Mark",
            "start_time": "3:57PM",
            "end_time": "4:42PM"
          },
          {
            "action": "meet",
            "location": "Embarcadero",
            "person": "Richard",
            "start_time": "4:52PM",
            "end_time": "6:22PM"
          },
          {
            "action": "meet",
            "location": "Fisherman's Wharf",
            "person": "Margaret",
            "start_time": "6:28PM",
            "end_time": "6:43PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Matthew",
            "start_time": "6:50PM",
            "end_time": "8:20PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_schedule():\n    # Travel distances (in minutes)\n    travel_distances = {\n        \"Chinatown to Embarcadero\": 5,\n        \"Chinatown to Pacific Heights\": 10,\n        \"Chinatown to Russian Hill\": 7,\n        \"Chinatown to Haight-Ashbury\": 19,\n        \"Chinatown to Golden Gate Park\": 23,\n        \"Chinatown to Fisherman's Wharf\": 8,\n        \"Chinatown to Sunset District\": 29,\n        \"Chinatown to The Castro\": 22,\n        \"Embarcadero to Chinatown\": 7,\n        \"Embarcadero to Pacific Heights\": 11,\n        \"Embarcadero to Russian Hill\": 8,\n        \"Embarcadero to Haight-Ashbury\": 21,\n        \"Embarcadero to Golden Gate Park\": 25,\n        \"Embarcadero to Fisherman's Wharf\": 6,\n        \"Embarcadero to Sunset District\": 30,\n        \"Embarcadero to The Castro\": 25,\n        \"Pacific Heights to Chinatown\": 11,\n        \"Pacific Heights to Embarcadero\": 10,\n        \"Pacific Heights to Russian Hill\": 7,\n        \"Pacific Heights to Haight-Ashbury\": 11,\n        \"Pacific Heights to Golden Gate Park\": 15,\n        \"Pacific Heights to Fisherman's Wharf\": 13,\n        \"Pacific Heights to Sunset District\": 21,\n        \"Pacific Heights to The Castro\": 16,\n        \"Russian Hill to Chinatown\": 9,\n        \"Russian Hill to Embarcadero\": 8,\n        \"Russian Hill to Pacific Heights\": 7,\n        \"Russian Hill to Haight-Ashbury\": 17,\n        \"Russian Hill to Golden Gate Park\": 21,\n        \"Russian Hill to Fisherman's Wharf\": 7,\n        \"Russian Hill to Sunset District\": 23,\n        \"Russian Hill to The Castro\": 21,\n        \"Haight-Ashbury to Chinatown\": 19,\n        \"Haight-Ashbury to Embarcadero\": 20,\n        \"Haight-Ashbury to Pacific Heights\": 12,\n        \"Haight-Ashbury to Russian Hill\": 17,\n        \"Haight-Ashbury to Golden Gate Park\": 7,\n        \"Haight-Ashbury to Fisherman's Wharf\": 23,\n        \"Haight-Ashbury to Sunset District\": 15,\n        \"Haight-Ashbury to The Castro\": 6,\n        \"Golden Gate Park to Chinatown\": 23,\n        \"Golden Gate Park to Embarcadero\": 25,\n        \"Golden Gate Park to Pacific Heights\": 16,\n        \"Golden Gate Park to Russian Hill\": 19,\n        \"Golden Gate Park to Haight-Ashbury\": 7,\n        \"Golden Gate Park to Fisherman's Wharf\": 24,\n        \"Golden Gate Park to Sunset District\": 10,\n        \"Golden Gate Park to The Castro\": 13,\n        \"Fisherman's Wharf to Chinatown\": 12,\n        \"Fisherman's Wharf to Embarcadero\": 8,\n        \"Fisherman's Wharf to Pacific Heights\": 12,\n        \"Fisherman's Wharf to Russian Hill\": 7,\n        \"Fisherman's Wharf to Haight-Ashbury\": 22,\n        \"Fisherman's Wharf to Golden Gate Park\": 25,\n        \"Fisherman's Wharf to Sunset District\": 27,\n        \"Fisherman's Wharf to The Castro\": 27,\n        \"Sunset District to Chinatown\": 30,\n        \"Sunset District to Embarcadero\": 30,\n        \"Sunset District to Pacific Heights\": 21,\n        \"Sunset District to Russian Hill\": 24,\n        \"Sunset District to Haight-Ashbury\": 15,\n        \"Sunset District to Golden Gate Park\": 11,\n        \"Sunset District to Fisherman's Wharf\": 29,\n        \"Sunset District to The Castro\": 17,\n        \"The Castro to Chinatown\": 22,\n        \"The Castro to Embarcadero\": 22,\n        \"The Castro to Pacific Heights\": 16,\n        \"The Castro to Russian Hill\": 18,\n        \"The Castro to Haight-Ashbury\": 6,\n        \"The Castro to Golden Gate Park\": 11,\n        \"The Castro to Fisherman's Wharf\": 24,\n        \"The Castro to Sunset District\": 17\n    }\n\n    # Constraints\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    richard_available = (datetime.strptime(\"3:15PM\", \"%I:%M%p\"), datetime.strptime(\"6:45PM\", \"%I:%M%p\"))\n    mark_available = (datetime.strptime(\"3:00PM\", \"%I:%M%p\"), datetime.strptime(\"5:00PM\", \"%I:%M%p\"))\n    matthew_available = (datetime.strptime(\"5:30PM\", \"%I:%M%p\"), datetime.strptime(\"9:00PM\", \"%I:%M%p\"))\n    rebecca_available = (datetime.strptime(\"2:45PM\", \"%I:%M%p\"), datetime.strptime(\"6:00PM\", \"%I:%M%p\"))\n    melissa_available = (datetime.strptime(\"1:45PM\", \"%I:%M%p\"), datetime.strptime(\"5:30PM\", \"%I:%M%p\"))\n    margaret_available = (datetime.strptime(\"2:45PM\", \"%I:%M%p\"), datetime.strptime(\"8:15PM\", \"%I:%M%p\"))\n    emily_available = (datetime.strptime(\"3:45PM\", \"%I:%M%p\"), datetime.strptime(\"5:00PM\", \"%I:%M%p\"))\n    george_available = (datetime.strptime(\"2:00PM\", \"%I:%M%p\"), datetime.strptime(\"4:15PM\", \"%I:%M%p\"))\n    min_meeting_time_richard = 90\n    min_meeting_time_mark = 45\n    min_meeting_time_matthew = 90\n    min_meeting_time_rebecca = 60\n    min_meeting_time_melissa = 90\n    min_meeting_time_margaret = 15\n    min_meeting_time_emily = 45\n    min_meeting_time_george = 75\n\n    # Calculate travel times\n    travel_times = {\n        \"Chinatown to Embarcadero\": timedelta(minutes=5),\n        \"Chinatown to Pacific Heights\": timedelta(minutes=10),\n        \"Chinatown to Russian Hill\": timedelta(minutes=7),\n        \"Chinatown to Haight-Ashbury\": timedelta(minutes=19),\n        \"Chinatown to Golden Gate Park\": timedelta(minutes=23),\n        \"Chinatown to Fisherman's Wharf\": timedelta(minutes=8),\n        \"Chinatown to Sunset District\": timedelta(minutes=29),\n        \"Chinatown to The Castro\": timedelta(minutes=22),\n        \"Embarcadero to Chinatown\": timedelta(minutes=7),\n        \"Embarcadero to Pacific Heights\": timedelta(minutes=11),\n        \"Embarcadero to Russian Hill\": timedelta(minutes=8),\n        \"Embarcadero to Haight-Ashbury\": timedelta(minutes=21),\n        \"Embarcadero to Golden Gate Park\": timedelta(minutes=25),\n        \"Embarcadero to Fisherman's Wharf\": timedelta(minutes=6),\n        \"Embarcadero to Sunset District\": timedelta(minutes=30),\n        \"Embarcadero to The Castro\": timedelta(minutes=25),\n        \"Pacific Heights to Chinatown\": timedelta(minutes=11),\n        \"Pacific Heights to Embarcadero\": timedelta(minutes=10),\n        \"Pacific Heights to Russian Hill\": timedelta(minutes=7),\n        \"Pacific Heights to Haight-Ashbury\": timedelta(minutes=11),\n        \"Pacific Heights to Golden Gate Park\": timedelta(minutes=15),\n        \"Pacific Heights to Fisherman's Wharf\": timedelta(minutes=13),\n        \"Pacific Heights to Sunset District\": timedelta(minutes=21),\n        \"Pacific Heights to The Castro\": timedelta(minutes=16),\n        \"Russian Hill to Chinatown\": timedelta(minutes=9),\n        \"Russian Hill to Embarcadero\": timedelta(minutes=8),\n        \"Russian Hill to Pacific Heights\": timedelta(minutes=7),\n        \"Russian Hill to Haight-Ashbury\": timedelta(minutes=17),\n        \"Russian Hill to Golden Gate Park\": timedelta(minutes=21),\n        \"Russian Hill to Fisherman's Wharf\": timedelta(minutes=7),\n        \"Russian Hill to Sunset District\": timedelta(minutes=23),\n        \"Russian Hill to The Castro\": timedelta(minutes=21),\n        \"Haight-Ashbury to Chinatown\": timedelta(minutes=19),\n        \"Haight-Ashbury to Embarcadero\": timedelta(minutes=20),\n        \"Haight-Ashbury to Pacific Heights\": timedelta(minutes=12),\n        \"Haight-Ashbury to Russian Hill\": timedelta(minutes=17),\n        \"Haight-Ashbury to Golden Gate Park\": timedelta(minutes=7),\n        \"Haight-Ashbury to Fisherman's Wharf\": timedelta(minutes=23),\n        \"Haight-Ashbury to Sunset District\": timedelta(minutes=15),\n        \"Haight-Ashbury to The Castro\": timedelta(minutes=6),\n        \"Golden Gate Park to Chinatown\": timedelta(minutes=23),\n        \"Golden Gate Park to Embarcadero\": timedelta(minutes=25),\n        \"Golden Gate Park to Pacific Heights\": timedelta(minutes=16),\n        \"Golden Gate Park to Russian Hill\": timedelta(minutes=19),\n        \"Golden Gate Park to Haight-Ashbury\": timedelta(minutes=7),\n        \"Golden Gate Park to Fisherman's Wharf\": timedelta(minutes=24),\n        \"Golden Gate Park to Sunset District\": timedelta(minutes=10),\n        \"Golden Gate Park to The Castro\": timedelta(minutes=13),\n        \"Fisherman's Wharf to Chinatown\": timedelta(minutes=12),\n        \"Fisherman's Wharf to Embarcadero\": timedelta(minutes=8),\n        \"Fisherman's Wharf to Pacific Heights\": timedelta(minutes=12),\n        \"Fisherman's Wharf to Russian Hill\": timedelta(minutes=7),\n        \"Fisherman's Wharf to Haight-Ashbury\": timedelta(minutes=22),\n        \"Fisherman's Wharf to Golden Gate Park\": timedelta(minutes=25),\n        \"Fisherman's Wharf to Sunset District\": timedelta(minutes=27),\n        \"Fisherman's Wharf to The Castro\": timedelta(minutes=27),\n        \"Sunset District to Chinatown\": timedelta(minutes=30),\n        \"Sunset District to Embarcadero\": timedelta(minutes=30),\n        \"Sunset District to Pacific Heights\": timedelta(minutes=21),\n        \"Sunset District to Russian Hill\": timedelta(minutes=24),\n        \"Sunset District to Haight-Ashbury\": timedelta(minutes=15),\n        \"Sunset District to Golden Gate Park\": timedelta(minutes=11),\n        \"Sunset District to Fisherman's Wharf\": timedelta(minutes=29),\n        \"Sunset District to The Castro\": timedelta(minutes=17),\n        \"The Castro to Chinatown\": timedelta(minutes=22),\n        \"The Castro to Embarcadero\": timedelta(minutes=22),\n        \"The Castro to Pacific Heights\": timedelta(minutes=16),\n        \"The Castro to Russian Hill\": timedelta(minutes=18),\n        \"The Castro to Haight-Ashbury\": timedelta(minutes=6),\n        \"The Castro to Golden Gate Park\": timedelta(minutes=11),\n        \"The Castro to Fisherman's Wharf\": timedelta(minutes=24),\n        \"The Castro to Sunset District\": timedelta(minutes=17)\n    }\n\n    # Schedule\n    schedule = []\n    schedule.append({\"action\": \"start\", \"location\": \"Chinatown\", \"time\": start_time.strftime(\"%I:%M%p\")})\n\n    # Meet Richard\n    richard_meeting_time = max(start_time, richard_available[0])\n    richard_meeting_location = \"Embarcadero\"\n    richard_meeting_duration = min(min_meeting_time_richard, (richard_available[1] - richard_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": \"Chinatown\", \"duration\": travel_times[\"Chinatown to Embarcadero\"].total_seconds() / 60, \"time\": richard_meeting_time.strftime(\"%I:%M%p\"), \"to\": richard_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": richard_meeting_location, \"duration\": richard_meeting_duration, \"time\": richard_meeting_time.strftime(\"%I:%M%p\")})\n    richard_meeting_end_time = richard_meeting_time + timedelta(minutes=richard_meeting_duration)\n\n    # Meet Mark\n    mark_meeting_time = max(richard_meeting_end_time + timedelta(minutes=30), mark_available[0])\n    mark_meeting_location = \"Pacific Heights\"\n    mark_meeting_duration = min(min_meeting_time_mark, (mark_available[1] - mark_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": richard_meeting_location, \"duration\": travel_times[richard_meeting_location + \" to \" + mark_meeting_location].total_seconds() / 60, \"time\": mark_meeting_time.strftime(\"%I:%M%p\"), \"to\": mark_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": mark_meeting_location, \"duration\": mark_meeting_duration, \"time\": mark_meeting_time.strftime(\"%I:%M%p\")})\n    mark_meeting_end_time = mark_meeting_time + timedelta(minutes=mark_meeting_duration)\n\n    # Meet Matthew\n    matthew_meeting_time = max(mark_meeting_end_time + timedelta(minutes=30), matthew_available[0])\n    matthew_meeting_location = \"Russian Hill\"\n    matthew_meeting_duration = min(min_meeting_time_matthew, (matthew_available[1] - matthew_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": mark_meeting_location, \"duration\": travel_times[mark_meeting_location + \" to \" + matthew_meeting_location].total_seconds() / 60, \"time\": matthew_meeting_time.strftime(\"%I:%M%p\"), \"to\": matthew_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": matthew_meeting_location, \"duration\": matthew_meeting_duration, \"time\": matthew_meeting_time.strftime(\"%I:%M%p\")})\n    matthew_meeting_end_time = matthew_meeting_time + timedelta(minutes=matthew_meeting_duration)\n\n    # Meet Rebecca\n    rebecca_meeting_time = max(matthew_meeting_end_time + timedelta(minutes=30), rebecca_available[0])\n    rebecca_meeting_location = \"Haight-Ashbury\"\n    rebecca_meeting_duration = min(min_meeting_time_rebecca, (rebecca_available[1] - rebecca_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": matthew_meeting_location, \"duration\": travel_times[matthew_meeting_location + \" to \" + rebecca_meeting_location].total_seconds() / 60, \"time\": rebecca_meeting_time.strftime(\"%I:%M%p\"), \"to\": rebecca_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": rebecca_meeting_location, \"duration\": rebecca_meeting_duration, \"time\": rebecca_meeting_time.strftime(\"%I:%M%p\")})\n    rebecca_meeting_end_time = rebecca_meeting_time + timedelta(minutes=rebecca_meeting_duration)\n\n    # Meet Melissa\n    melissa_meeting_time = max(rebecca_meeting_end_time + timedelta(minutes=30), melissa_available[0])\n    melissa_meeting_location = \"Golden Gate Park\"\n    melissa_meeting_duration = min(min_meeting_time_melissa, (melissa_available[1] - melissa_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": rebecca_meeting_location, \"duration\": travel_times[rebecca_meeting_location + \" to \" + melissa_meeting_location].total_seconds() / 60, \"time\": melissa_meeting_time.strftime(\"%I:%M%p\"), \"to\": melissa_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": melissa_meeting_location, \"duration\": melissa_meeting_duration, \"time\": melissa_meeting_time.strftime(\"%I:%M%p\")})\n    melissa_meeting_end_time = melissa_meeting_time + timedelta(minutes=melissa_meeting_duration)\n\n    # Meet Margaret\n    margaret_meeting_time = max(melissa_meeting_end_time + timedelta(minutes=30), margaret_available[0])\n    margaret_meeting_location = \"Fisherman's Wharf\"\n    margaret_meeting_duration = min(min_meeting_time_margaret, (margaret_available[1] - margaret_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": melissa_meeting_location, \"duration\": travel_times[melissa_meeting_location + \" to \" + margaret_meeting_location].total_seconds() / 60, \"time\": margaret_meeting_time.strftime(\"%I:%M%p\"), \"to\": margaret_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": margaret_meeting_location, \"duration\": margaret_meeting_duration, \"time\": margaret_meeting_time.strftime(\"%I:%M%p\")})\n    margaret_meeting_end_time = margaret_meeting_time + timedelta(minutes=margaret_meeting_duration)\n\n    # Meet Emily\n    emily_meeting_time = max(margaret_meeting_end_time + timedelta(minutes=30), emily_available[0])\n    emily_meeting_location = \"Sunset District\"\n    emily_meeting_duration = min(min_meeting_time_emily, (emily_available[1] - emily_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": margaret_meeting_location, \"duration\": travel_times[margaret_meeting_location + \" to \" + emily_meeting_location].total_seconds() / 60, \"time\": emily_meeting_time.strftime(\"%I:%M%p\"), \"to\": emily_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": emily_meeting_location, \"duration\": emily_meeting_duration, \"time\": emily_meeting_time.strftime(\"%I:%M%p\")})\n    emily_meeting_end_time = emily_meeting_time + timedelta(minutes=emily_meeting_duration)\n\n    # Meet George\n    george_meeting_time = max(emily_meeting_end_time + timedelta(minutes=30), george_available[0])\n    george_meeting_location = \"The Castro\"\n    george_meeting_duration = min(min_meeting_time_george, (george_available[1] - george_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": emily_meeting_location, \"duration\": travel_times[emily_meeting_location + \" to \" + george_meeting_location].total_seconds() / 60, \"time\": george_meeting_time.strftime(\"%I:%M%p\"), \"to\": george_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": george_meeting_location, \"duration\": george_meeting_duration, \"time\": george_meeting_time.strftime(\"%I:%M%p\")})\n    george_meeting_end_time = george_meeting_time + timedelta(minutes=george_meeting_duration)\n\n    # Wait until end of meeting\n    wait_time = (datetime.strptime(\"11:00PM\", \"%I:%M%p\") - george_meeting_end_time).total_seconds() / 60\n    schedule.append({\"action\": \"wait\", \"location\": george_meeting_location, \"time\": george_meeting_end_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": george_meeting_location, \"duration\": travel_times[george_meeting_location + \" to Chinatown\"].total_seconds() / 60, \"time\": george_meeting_end_time.strftime(\"%I:%M%p\"), \"to\": \"Chinatown\"})\n\n    return json.dumps(schedule, indent=4)\n\nprint(\"SOLUTION:\")\nprint(calculate_schedule())\n```",
      "count": "meeting_planning_example_763"
    },
    {
      "final_program_time": {
        "itinerary": "None"
      },
      "expected_time": {
        "itinerary": [
          {
            "action": "meet",
            "location": "North Beach",
            "person": "Melissa",
            "start_time": "9:29AM",
            "end_time": "11:14AM"
          },
          {
            "action": "meet",
            "location": "Chinatown",
            "person": "Anthony",
            "start_time": "1:15PM",
            "end_time": "2:15PM"
          },
          {
            "action": "meet",
            "location": "Russian Hill",
            "person": "Rebecca",
            "start_time": "7:30PM",
            "end_time": "9:15PM"
          }
        ]
      },
      "has_error": false,
      "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_schedule():\n    # Travel distances (in minutes)\n    travel_distances = {\n        \"Sunset District to Chinatown\": 30,\n        \"Sunset District to Russian Hill\": 24,\n        \"Sunset District to North Beach\": 29,\n        \"Chinatown to Sunset District\": 29,\n        \"Chinatown to Russian Hill\": 7,\n        \"Chinatown to North Beach\": 3,\n        \"Russian Hill to Sunset District\": 23,\n        \"Russian Hill to Chinatown\": 9,\n        \"Russian Hill to North Beach\": 5,\n        \"North Beach to Sunset District\": 27,\n        \"North Beach to Chinatown\": 6,\n        \"North Beach to Russian Hill\": 4\n    }\n\n    # Constraints\n    start_time = datetime.strptime(\"9:00AM\", \"%I:%M%p\")\n    anthony_available = (datetime.strptime(\"1:15PM\", \"%I:%M%p\"), datetime.strptime(\"2:30PM\", \"%I:%M%p\"))\n    rebecca_available = (datetime.strptime(\"7:30PM\", \"%I:%M%p\"), datetime.strptime(\"9:15PM\", \"%I:%M%p\"))\n    melissa_available = (datetime.strptime(\"8:15AM\", \"%I:%M%p\"), datetime.strptime(\"1:30PM\", \"%I:%M%p\"))\n    min_meeting_time_anthony = 60\n    min_meeting_time_rebecca = 105\n    min_meeting_time_melissa = 105\n\n    # Calculate travel times\n    travel_times = {\n        \"Sunset District to Chinatown\": timedelta(minutes=30),\n        \"Sunset District to Russian Hill\": timedelta(minutes=24),\n        \"Sunset District to North Beach\": timedelta(minutes=29),\n        \"Chinatown to Sunset District\": timedelta(minutes=29),\n        \"Chinatown to Russian Hill\": timedelta(minutes=7),\n        \"Chinatown to North Beach\": timedelta(minutes=3),\n        \"Russian Hill to Sunset District\": timedelta(minutes=23),\n        \"Russian Hill to Chinatown\": timedelta(minutes=9),\n        \"Russian Hill to North Beach\": timedelta(minutes=5),\n        \"North Beach to Sunset District\": timedelta(minutes=27),\n        \"North Beach to Chinatown\": timedelta(minutes=6),\n        \"North Beach to Russian Hill\": timedelta(minutes=4)\n    }\n\n    # Schedule\n    schedule = []\n    schedule.append({\"action\": \"start\", \"location\": \"Sunset District\", \"time\": start_time.strftime(\"%I:%M%p\")})\n\n    # Meet Melissa\n    melissa_meeting_time = max(start_time, melissa_available[0])\n    melissa_meeting_location = \"North Beach\"\n    melissa_meeting_duration = min(min_meeting_time_melissa, (melissa_available[1] - melissa_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": \"Sunset District\", \"duration\": travel_times[\"Sunset District to North Beach\"].total_seconds() / 60, \"time\": melissa_meeting_time.strftime(\"%I:%M%p\"), \"to\": melissa_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": melissa_meeting_location, \"duration\": melissa_meeting_duration, \"time\": melissa_meeting_time.strftime(\"%I:%M%p\")})\n    melissa_meeting_end_time = melissa_meeting_time + timedelta(minutes=melissa_meeting_duration)\n\n    # Meet Anthony\n    anthony_meeting_time = max(melissa_meeting_end_time + timedelta(minutes=30), anthony_available[0])\n    anthony_meeting_location = \"Chinatown\"\n    anthony_meeting_duration = min(min_meeting_time_anthony, (anthony_available[1] - anthony_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": melissa_meeting_location, \"duration\": travel_times[melissa_meeting_location + \" to \" + anthony_meeting_location].total_seconds() / 60, \"time\": anthony_meeting_time.strftime(\"%I:%M%p\"), \"to\": anthony_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": anthony_meeting_location, \"duration\": anthony_meeting_duration, \"time\": anthony_meeting_time.strftime(\"%I:%M%p\")})\n    anthony_meeting_end_time = anthony_meeting_time + timedelta(minutes=anthony_meeting_duration)\n\n    # Meet Rebecca\n    rebecca_meeting_time = max(anthony_meeting_end_time + timedelta(minutes=30), rebecca_available[0])\n    rebecca_meeting_location = \"Russian Hill\"\n    rebecca_meeting_duration = min(min_meeting_time_rebecca, (rebecca_available[1] - rebecca_meeting_time).total_seconds() / 60)\n    schedule.append({\"action\": \"travel\", \"location\": anthony_meeting_location, \"duration\": travel_times[anthony_meeting_location + \" to \" + rebecca_meeting_location].total_seconds() / 60, \"time\": rebecca_meeting_time.strftime(\"%I:%M%p\"), \"to\": rebecca_meeting_location})\n    schedule.append({\"action\": \"meet\", \"location\": rebecca_meeting_location, \"duration\": rebecca_meeting_duration, \"time\": rebecca_meeting_time.strftime(\"%I:%M%p\")})\n    rebecca_meeting_end_time = rebecca_meeting_time + timedelta(minutes=rebecca_meeting_duration)\n\n    # Wait until end of meeting\n    wait_time = (datetime.strptime(\"10:00PM\", \"%I:%M%p\") - rebecca_meeting_end_time).total_seconds() / 60\n    schedule.append({\"action\": \"wait\", \"location\": rebecca_meeting_location, \"time\": rebecca_meeting_end_time.strftime(\"%I:%M%p\")})\n    schedule.append({\"action\": \"travel\", \"location\": rebecca_meeting_location, \"duration\": travel_times[rebecca_meeting_location + \" to Sunset District\"].total_seconds() / 60, \"time\": rebecca_meeting_end_time.strftime(\"%I:%M%p\"), \"to\": \"Sunset District\"})\n\n    return json.dumps(schedule, indent=4)\n\nprint(\"SOLUTION:\")\nprint(calculate_schedule())\n```",
      "count": "meeting_planning_example_209"
    }
  ]
}