{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Richmond District",
                        "person": "Daniel",
                        "start_time": "17:45",
                        "end_time": "19:00"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Richmond District",
                        "person": "Daniel",
                        "start_time": "19:00",
                        "end_time": "20:15"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Define the meeting constraints and travel distances\narrive_time_russian_hill = datetime.strptime(\"09:00\", \"%H:%M\")\ntravel_time_russian_to_richmond = 14  # in minutes\ntravel_time_richmond_to_russian = 13  # in minutes\ndaniel_avail_start = datetime.strptime(\"19:00\", \"%H:%M\")\ndaniel_avail_end = datetime.strptime(\"20:15\", \"%H:%M\")\nmeeting_duration = timedelta(minutes=75)\n\n# Calculate the optimal meeting schedule\nitinerary = []\ncurrent_time = arrive_time_russian_hill\n\n# Meeting with Daniel at Richmond District\n# Calculate the time we need to leave Russian Hill to meet Daniel\nlatest_departure_from_richmond = daniel_avail_end - meeting_duration\n\n# Determine the latest time we can leave Russian Hill\nif latest_departure_from_richmond < arrive_time_russian_hill:\n    # If current time is already past the latest departure, we cannot meet Daniel\n    print(json.dumps({\"itinerary\": []}))\n    exit()\n\n# Ensure we have time to meet Daniel\ncurrent_time = latest_departure_from_richmond - timedelta(minutes=travel_time_russian_to_richmond)\n\n# Schedule meeting with Daniel\nmeet_start_time = latest_departure_from_richmond - meeting_duration\nmeet_end_time = latest_departure_from_richmond\n\nitinerary.append({\n    \"action\": \"meet\",\n    \"location\": \"Richmond District\",\n    \"person\": \"Daniel\",\n    \"start_time\": meet_start_time.strftime(\"%H:%M\"),\n    \"end_time\": meet_end_time.strftime(\"%H:%M\")\n})\n\n# Return JSON output\noutput = {\n    \"itinerary\": itinerary\n}\n\nprint(json.dumps(output, indent=2))\n```",
            "count": "meeting_planning_example_91"
        }
    ]
}