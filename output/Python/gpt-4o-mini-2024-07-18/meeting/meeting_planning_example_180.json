{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "James",
                        "start_time": "12:27",
                        "end_time": "13:42"
                    },
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Robert",
                        "start_time": "13:49",
                        "end_time": "14:19"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "James",
                        "start_time": "12:45",
                        "end_time": "14:00"
                    },
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Robert",
                        "start_time": "14:07",
                        "end_time": "14:37"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel times in minutes\ntravel_times = {\n    (\"North Beach\", \"Mission District\"): 18,\n    (\"North Beach\", \"The Castro\"): 22,\n    (\"Mission District\", \"North Beach\"): 17,\n    (\"Mission District\", \"The Castro\"): 7,\n    (\"The Castro\", \"North Beach\"): 20,\n    (\"The Castro\", \"Mission District\"): 7,\n}\n\n# Meeting times and constraints\narrival_time = datetime.strptime(\"9:00\", \"%H:%M\")\njames_start = datetime.strptime(\"12:45\", \"%H:%M\")\njames_end = datetime.strptime(\"14:00\", \"%H:%M\")\njames_meeting_duration = timedelta(minutes=75)\n\nrobert_start = datetime.strptime(\"12:45\", \"%H:%M\")\nrobert_end = datetime.strptime(\"15:15\", \"%H:%M\")\nrobert_meeting_duration = timedelta(minutes=30)\n\ndef optimal_schedule():\n    itinerary = []\n    \n    # Time when we can start meeting since we will arrive at North Beach at 9:00\n    current_time = arrival_time\n    \n    # Meet James first\n    # Need to leave North Beach by 12:27 (12:45 - 18 minutes travel time)\n    time_to_meet_james = james_start - timedelta(minutes=travel_times[(\"North Beach\", \"Mission District\")])\n    \n    if current_time < time_to_meet_james:\n        # Schedule to meet James from 12:27 to 13:42\n        james_meeting_start = time_to_meet_james\n        james_meeting_end = james_meeting_start + james_meeting_duration\n        \n        if james_meeting_end <= james_end:\n            itinerary.append({\n                \"action\": \"meet\",\n                \"location\": \"Mission District\",\n                \"person\": \"James\",\n                \"start_time\": james_meeting_start.strftime(\"%H:%M\"),\n                \"end_time\": james_meeting_end.strftime(\"%H:%M\"),\n            })\n            current_time = james_meeting_end + timedelta(minutes=travel_times[(\"Mission District\", \"The Castro\")])\n    \n    # Now we will meet Robert at The Castro\n    # We must arrive by 15:15 - 22 minutes (travel from The Castro to North Beach)\n    time_to_meet_robert = robert_end - timedelta(minutes=travel_times[(\"The Castro\", \"North Beach\")])\n    \n    if current_time < robert_start:\n        # Wait until Robert is available at 12:45\n        current_time = robert_start\n        \n    # Schedule to meet Robert for the minimum duration possible\n    robert_meeting_start = current_time\n    robert_meeting_end = robert_meeting_start + robert_meeting_duration\n    \n    if robert_meeting_end <= robert_end:\n        itinerary.append({\n            \"action\": \"meet\",\n            \"location\": \"The Castro\",\n            \"person\": \"Robert\",\n            \"start_time\": robert_meeting_start.strftime(\"%H:%M\"),\n            \"end_time\": robert_meeting_end.strftime(\"%H:%M\"),\n        })\n    \n    result = {\n        \"itinerary\": itinerary\n    }\n    \n    return json.dumps(result, indent=4)\n\n# Run the program\nif __name__ == \"__main__\":\n    print(optimal_schedule())\n```",
            "count": "meeting_planning_example_180"
        }
    ]
}