{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Haight-Ashbury",
                        "person": "Joshua",
                        "start_time": "9:00",
                        "end_time": "9:36"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Stephanie",
                        "start_time": "9:57",
                        "end_time": "10:33"
                    },
                    {
                        "action": "meet",
                        "location": "Financial District",
                        "person": "Lisa",
                        "start_time": "10:39",
                        "end_time": "10:59"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Melissa",
                        "start_time": "11:04",
                        "end_time": "13:12"
                    },
                    {
                        "action": "meet",
                        "location": "Richmond District",
                        "person": "Sarah",
                        "start_time": "13:20",
                        "end_time": "15:26"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Daniel",
                        "start_time": "15:47",
                        "end_time": "16:58"
                    },
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Andrew",
                        "start_time": "17:09",
                        "end_time": "19:04"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Financial District",
                        "person": "Lisa",
                        "start_time": "10:45",
                        "end_time": "11:00"
                    },
                    {
                        "action": "meet",
                        "location": "Haight-Ashbury",
                        "person": "Joshua",
                        "start_time": "11:19",
                        "end_time": "11:34"
                    },
                    {
                        "action": "meet",
                        "location": "Presidio",
                        "person": "Joseph",
                        "start_time": "11:49",
                        "end_time": "12:34"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Betty",
                        "start_time": "12:45",
                        "end_time": "13:45"
                    },
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "John",
                        "start_time": "14:07",
                        "end_time": "14:52"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Stephanie",
                        "start_time": "15:30",
                        "end_time": "16:00"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Melissa",
                        "start_time": "17:00",
                        "end_time": "19:00"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Daniel",
                        "start_time": "19:07",
                        "end_time": "20:07"
                    },
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Andrew",
                        "start_time": "20:15",
                        "end_time": "22:00"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_times = {\n    (\"Embarcadero\", \"Fisherman's Wharf\"): 6,\n    (\"Embarcadero\", \"Financial District\"): 5,\n    (\"Embarcadero\", \"Russian Hill\"): 8,\n    (\"Embarcadero\", \"Marina District\"): 12,\n    (\"Embarcadero\", \"Richmond District\"): 21,\n    (\"Embarcadero\", \"Pacific Heights\"): 11,\n    (\"Embarcadero\", \"Haight-Ashbury\"): 21,\n    (\"Embarcadero\", \"Presidio\"): 20,\n    (\"Embarcadero\", \"Nob Hill\"): 10,\n    (\"Embarcadero\", \"The Castro\"): 25,\n    (\"Fisherman's Wharf\", \"Embarcadero\"): 8,\n    (\"Fisherman's Wharf\", \"Financial District\"): 11,\n    (\"Fisherman's Wharf\", \"Russian Hill\"): 7,\n    (\"Fisherman's Wharf\", \"Marina District\"): 9,\n    (\"Fisherman's Wharf\", \"Richmond District\"): 18,\n    (\"Fisherman's Wharf\", \"Pacific Heights\"): 12,\n    (\"Fisherman's Wharf\", \"Haight-Ashbury\"): 22,\n    (\"Fisherman's Wharf\", \"Presidio\"): 17,\n    (\"Fisherman's Wharf\", \"Nob Hill\"): 11,\n    (\"Fisherman's Wharf\", \"The Castro\"): 27,\n    # Additional travel times ...\n    # Add all other locations as specified in the problem\n}\n\n# Meeting constraints\nmeetings = {\n    \"Stephanie\": {\"location\": \"Fisherman's Wharf\", \"available_from\": \"15:30\", \"available_to\": \"22:00\", \"duration\": 30},\n    \"Lisa\": {\"location\": \"Financial District\", \"available_from\": \"10:45\", \"available_to\": \"17:15\", \"duration\": 15},\n    \"Melissa\": {\"location\": \"Russian Hill\", \"available_from\": \"17:00\", \"available_to\": \"21:45\", \"duration\": 120},\n    \"Betty\": {\"location\": \"Marina District\", \"available_from\": \"10:45\", \"available_to\": \"14:15\", \"duration\": 60},\n    \"Sarah\": {\"location\": \"Richmond District\", \"available_from\": \"16:15\", \"available_to\": \"19:30\", \"duration\": 105},\n    \"Daniel\": {\"location\": \"Pacific Heights\", \"available_from\": \"18:30\", \"available_to\": \"21:45\", \"duration\": 60},\n    \"Joshua\": {\"location\": \"Haight-Ashbury\", \"available_from\": \"09:00\", \"available_to\": \"15:30\", \"duration\": 15},\n    \"Joseph\": {\"location\": \"Presidio\", \"available_from\": \"07:00\", \"available_to\": \"13:00\", \"duration\": 45},\n    \"Andrew\": {\"location\": \"Nob Hill\", \"available_from\": \"19:45\", \"available_to\": \"22:00\", \"duration\": 105},\n    \"John\": {\"location\": \"The Castro\", \"available_from\": \"13:15\", \"available_to\": \"19:45\", \"duration\": 45},\n}\n\nstart_time = datetime.strptime(\"09:00\", \"%H:%M\")\n\ndef schedule_meetings(start_time):\n    itinerary = []\n    current_time = start_time\n    visited_locations = set()\n\n    # Function to convert string time to datetime object\n    def convert_time(time_str):\n        return datetime.strptime(time_str, \"%H:%M\")\n\n    for person, details in meetings.items():\n        available_from = convert_time(details[\"available_from\"])\n        available_to = convert_time(details[\"available_to\"])\n        duration = details[\"duration\"]\n\n        location = details[\"location\"]\n        travel_time = travel_times.get((\"Embarcadero\", location)) or travel_times.get((location, \"Embarcadero\"))\n\n        # Meet Joshua first before he leaves\n        if person == \"Joshua\":\n            if current_time + timedelta(minutes=travel_time) <= available_to:\n                end_time = current_time + timedelta(minutes=travel_time + duration)\n                if end_time <= available_to:\n                    itinerary.append({\n                        \"action\": \"meet\",\n                        \"location\": location,\n                        \"person\": person,\n                        \"start_time\": current_time.strftime(\"%H:%M\"),\n                        \"end_time\": end_time.strftime(\"%H:%M\"),\n                    })\n                    current_time = end_time + timedelta(minutes=travel_time)  # Move back to Embarcadero\n                    visited_locations.add(location)\n\n    # Schedule other meetings\n    for person, details in meetings.items():\n        if person in visited_locations:\n            continue  # Skip already visited locations\n        available_from = convert_time(details[\"available_from\"])\n        available_to = convert_time(details[\"available_to\"])\n        duration = details[\"duration\"]\n\n        travel_time = travel_times.get((\"Embarcadero\", details[\"location\"])) or travel_times.get((details[\"location\"], \"Embarcadero\"))\n\n        # Only meet if we can travel there and meet within available time\n        if current_time + timedelta(minutes=travel_time) <= available_to:\n            end_time = current_time + timedelta(minutes=travel_time + duration)\n            if end_time <= available_to:\n                itinerary.append({\n                    \"action\": \"meet\",\n                    \"location\": details[\"location\"],\n                    \"person\": person,\n                    \"start_time\": current_time.strftime(\"%H:%M\"),\n                    \"end_time\": end_time.strftime(\"%H:%M\"),\n                })\n                current_time = end_time + timedelta(minutes=travel_time)  # Return to Embarcadero\n\n    return {\"itinerary\": itinerary}\n\noptimal_schedule = schedule_meetings(start_time)\nprint(json.dumps(optimal_schedule, indent=2))\n```",
            "count": "meeting_planning_example_978"
        }
    ]
}