{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Friend",
                        "start_time": "9:00",
                        "end_time": "10:00"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Friend",
                        "start_time": "10:00",
                        "end_time": "11:00"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Friend",
                        "start_time": "11:00",
                        "end_time": "12:00"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Friend",
                        "start_time": "12:00",
                        "end_time": "13:00"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Friend",
                        "start_time": "13:00",
                        "end_time": "14:00"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Friend",
                        "start_time": "14:00",
                        "end_time": "15:00"
                    },
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "David",
                        "start_time": "15:23",
                        "end_time": "17:08"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "David",
                        "start_time": "16:00",
                        "end_time": "17:45"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Constants\nTRAVEL_TIME = 23  # minutes to travel between Golden Gate Park and Chinatown\nARRIVAL_TIME = datetime.strptime(\"9:00\", \"%H:%M\")\nDAVID_START_TIME = datetime.strptime(\"16:00\", \"%H:%M\")\nDAVID_END_TIME = datetime.strptime(\"21:45\", \"%H:%M\")\nMIN_MEETING_TIME = timedelta(minutes=105)\n\ndef calculate_schedule():\n    # Start at Golden Gate Park\n    current_time = ARRIVAL_TIME\n    itinerary = []\n\n    # Possible evening schedule with David\n    # 1. Leave Golden Gate Park at the latest 15:37 to meet David for 105 minutes\n    latest_david_meet_start = DAVID_START_TIME - MIN_MEETING_TIME\n\n    # 2. If we can meet David while arriving no later than 15:37\n    while current_time < latest_david_meet_start:\n        # Meet a friend at Golden Gate Park for 1 hour\n        meeting_start = current_time\n        meeting_end = current_time + timedelta(hours=1)  # 1 hour meeting\n        \n        # Add the meeting to the itinerary\n        itinerary.append({\n            \"action\": \"meet\",\n            \"location\": \"Golden Gate Park\",\n            \"person\": \"Friend\",\n            \"start_time\": meeting_start.strftime(\"%H:%M\"),\n            \"end_time\": meeting_end.strftime(\"%H:%M\")\n        })\n        \n        # Move current time forward\n        current_time = meeting_end\n\n    # 3. Now travel to Chinatown to meet David\n    if current_time + timedelta(minutes=TRAVEL_TIME) <= DAVID_END_TIME:\n        travel_time = current_time + timedelta(minutes=TRAVEL_TIME)\n        \n        # Meet David from the latest possible start\n        david_meeting_start = travel_time\n        david_meeting_end = david_meeting_start + MIN_MEETING_TIME\n        \n        # Add David meeting to itinerary\n        itinerary.append({\n            \"action\": \"meet\",\n            \"location\": \"Chinatown\",\n            \"person\": \"David\",\n            \"start_time\": david_meeting_start.strftime(\"%H:%M\"),\n            \"end_time\": david_meeting_end.strftime(\"%H:%M\")\n        })\n        \n        # Update current time after meeting with David\n        current_time = david_meeting_end\n\n    return {\"itinerary\": itinerary}\n\n# Calculate the schedule\nschedule = calculate_schedule()\n\n# Output as JSON\nprint(json.dumps(schedule, indent=2))\n```",
            "count": "meeting_planning_example_25"
        }
    ]
}