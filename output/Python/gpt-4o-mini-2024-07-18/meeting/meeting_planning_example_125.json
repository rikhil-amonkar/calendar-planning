{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Financial District",
                        "person": "Stephanie",
                        "start_time": "9:05",
                        "end_time": "10:35"
                    },
                    {
                        "action": "meet",
                        "location": "Alamo Square",
                        "person": "John",
                        "start_time": "10:52",
                        "end_time": "11:22"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Financial District",
                        "person": "Stephanie",
                        "start_time": "9:05",
                        "end_time": "10:35"
                    },
                    {
                        "action": "meet",
                        "location": "Alamo Square",
                        "person": "John",
                        "start_time": "10:52",
                        "end_time": "11:22"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Define travel times\ntravel_times = {\n    (\"Embarcadero\", \"Financial District\"): 5,\n    (\"Embarcadero\", \"Alamo Square\"): 19,\n    (\"Financial District\", \"Embarcadero\"): 4,\n    (\"Financial District\", \"Alamo Square\"): 17,\n    (\"Alamo Square\", \"Embarcadero\"): 17,\n    (\"Alamo Square\", \"Financial District\"): 17,\n}\n\n# Define meeting constraints\narrival_time = datetime.strptime(\"9:00\", \"%H:%M\")\nstephanie_start = datetime.strptime(\"8:15\", \"%H:%M\")\nstephanie_end = datetime.strptime(\"11:30\", \"%H:%M\")\njohn_start = datetime.strptime(\"10:15\", \"%H:%M\")\njohn_end = datetime.strptime(\"20:45\", \"%H:%M\")\n\nstephanie_meeting_time = 90  # minutes\njohn_meeting_time = 30  # minutes\n\n# Initialize itinerary\nitinerary = []\n\n# Helper function to format time\ndef format_time(dt):\n    return dt.strftime(\"%H:%M\")\n\n# Function to schedule meetings\ndef schedule_meetings():\n    global itinerary\n    # Meeting with Stephanie\n    start_time = arrival_time + timedelta(minutes=travel_times[(\"Embarcadero\", \"Financial District\")])\n    \n    if start_time < stephanie_start:\n        start_time = stephanie_start\n\n    end_time = start_time + timedelta(minutes=stephanie_meeting_time)\n    \n    if end_time > stephanie_end:\n        end_time = stephanie_end\n\n    if end_time - start_time >= timedelta(minutes=stephanie_meeting_time):\n        itinerary.append({\n            \"action\": \"meet\",\n            \"location\": \"Financial District\",\n            \"person\": \"Stephanie\",\n            \"start_time\": format_time(start_time),\n            \"end_time\": format_time(end_time)\n        })\n        \n        # Travel to John\n        travel_to_john = end_time + timedelta(minutes=travel_times[(\"Financial District\", \"Alamo Square\")])\n        \n        # Meeting with John\n        john_meeting_start = max(travel_to_john, john_start)\n        john_meeting_end = john_meeting_start + timedelta(minutes=john_meeting_time)\n\n        if john_meeting_end <= john_end:\n            itinerary.append({\n                \"action\": \"meet\",\n                \"location\": \"Alamo Square\",\n                \"person\": \"John\",\n                \"start_time\": format_time(john_meeting_start),\n                \"end_time\": format_time(john_meeting_end)\n            })\n\nschedule_meetings()\n\n# Output the result in JSON format\noutput = {\"itinerary\": itinerary}\nprint(json.dumps(output, indent=2))\n```",
            "count": "meeting_planning_example_125"
        }
    ]
}