{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Steven",
                        "start_time": "9:07",
                        "end_time": "10:22"
                    },
                    {
                        "action": "meet",
                        "location": "Alamo Square",
                        "person": "Anthony",
                        "start_time": "10:32",
                        "end_time": "10:47"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Sandra",
                        "start_time": "14:45",
                        "end_time": "15:30"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Kevin",
                        "start_time": "19:15",
                        "end_time": "20:30"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Steven",
                        "start_time": "9:07",
                        "end_time": "10:22"
                    },
                    {
                        "action": "meet",
                        "location": "Alamo Square",
                        "person": "Anthony",
                        "start_time": "10:32",
                        "end_time": "10:47"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Sandra",
                        "start_time": "14:45",
                        "end_time": "15:30"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Stephanie",
                        "start_time": "20:00",
                        "end_time": "20:15"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Kevin",
                        "start_time": "20:22",
                        "end_time": "21:37"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\nfrom itertools import permutations\n\ndef time_to_minutes(time_str):\n    hours, minutes = map(int, time_str.split(':'))\n    return hours * 60 + minutes\n\ndef minutes_to_time(minutes):\n    hours = minutes // 60\n    mins = minutes % 60\n    return f\"{hours}:{mins:02d}\"\n\n# Travel times dictionary: {from_location: {to_location: minutes}}\ntravel_times = {\n    'Haight-Ashbury': {\n        'Russian Hill': 17,\n        'Fisherman\\'s Wharf': 23,\n        'Nob Hill': 15,\n        'Golden Gate Park': 7,\n        'Alamo Square': 5,\n        'Pacific Heights': 12\n    },\n    'Russian Hill': {\n        'Haight-Ashbury': 17,\n        'Fisherman\\'s Wharf': 7,\n        'Nob Hill': 5,\n        'Golden Gate Park': 21,\n        'Alamo Square': 15,\n        'Pacific Heights': 7\n    },\n    'Fisherman\\'s Wharf': {\n        'Haight-Ashbury': 22,\n        'Russian Hill': 7,\n        'Nob Hill': 11,\n        'Golden Gate Park': 25,\n        'Alamo Square': 20,\n        'Pacific Heights': 12\n    },\n    'Nob Hill': {\n        'Haight-Ashbury': 13,\n        'Russian Hill': 5,\n        'Fisherman\\'s Wharf': 11,\n        'Golden Gate Park': 17,\n        'Alamo Square': 11,\n        'Pacific Heights': 8\n    },\n    'Golden Gate Park': {\n        'Haight-Ashbury': 7,\n        'Russian Hill': 19,\n        'Fisherman\\'s Wharf': 24,\n        'Nob Hill': 20,\n        'Alamo Square': 10,\n        'Pacific Heights': 16\n    },\n    'Alamo Square': {\n        'Haight-Ashbury': 5,\n        'Russian Hill': 13,\n        'Fisherman\\'s Wharf': 19,\n        'Nob Hill': 11,\n        'Golden Gate Park': 9,\n        'Pacific Heights': 10\n    },\n    'Pacific Heights': {\n        'Haight-Ashbury': 11,\n        'Russian Hill': 7,\n        'Fisherman\\'s Wharf': 13,\n        'Nob Hill': 8,\n        'Golden Gate Park': 15,\n        'Alamo Square': 10\n    }\n}\n\n# Friend constraints\nfriends = [\n    {\n        'name': 'Stephanie',\n        'location': 'Russian Hill',\n        'available_start': '20:00',\n        'available_end': '20:45',\n        'min_duration': 15\n    },\n    {\n        'name': 'Kevin',\n        'location': 'Fisherman\\'s Wharf',\n        'available_start': '19:15',\n        'available_end': '21:45',\n        'min_duration': 75\n    },\n    {\n        'name': 'Robert',\n        'location': 'Nob Hill',\n        'available_start': '7:45',\n        'available_end': '10:30',\n        'min_duration': 90\n    },\n    {\n        'name': 'Steven',\n        'location': 'Golden Gate Park',\n        'available_start': '8:30',\n        'available_end': '17:00',\n        'min_duration': 75\n    },\n    {\n        'name': 'Anthony',\n        'location': 'Alamo Square',\n        'available_start': '7:45',\n        'available_end': '19:45',\n        'min_duration': 15\n    },\n    {\n        'name': 'Sandra',\n        'location': 'Pacific Heights',\n        'available_start': '14:45',\n        'available_end': '21:45',\n        'min_duration': 45\n    }\n]\n\ndef calculate_schedule():\n    current_time = time_to_minutes('9:00')\n    current_location = 'Haight-Ashbury'\n    itinerary = []\n    met_friends = set()\n\n    # First, meet Robert (only available in the morning)\n    robert = next(f for f in friends if f['name'] == 'Robert')\n    travel_time = travel_times[current_location][robert['location']]\n    arrival_time = current_time + travel_time\n    available_start = time_to_minutes(robert['available_start'])\n    available_end = time_to_minutes(robert['available_end'])\n    \n    start_time = max(arrival_time, available_start)\n    end_time = start_time + robert['min_duration']\n    \n    if end_time <= available_end:\n        itinerary.append({\n            'action': 'meet',\n            'location': robert['location'],\n            'person': robert['name'],\n            'start_time': minutes_to_time(start_time),\n            'end_time': minutes_to_time(end_time)\n        })\n        current_time = end_time\n        current_location = robert['location']\n        met_friends.add(robert['name'])\n\n    # Next, meet Steven (available all day)\n    steven = next(f for f in friends if f['name'] == 'Steven')\n    travel_time = travel_times[current_location][steven['location']]\n    arrival_time = current_time + travel_time\n    available_start = time_to_minutes(steven['available_start'])\n    available_end = time_to_minutes(steven['available_end'])\n    \n    start_time = max(arrival_time, available_start)\n    end_time = start_time + steven['min_duration']\n    \n    if end_time <= available_end:\n        itinerary.append({\n            'action': 'meet',\n            'location': steven['location'],\n            'person': steven['name'],\n            'start_time': minutes_to_time(start_time),\n            'end_time': minutes_to_time(end_time)\n        })\n        current_time = end_time\n        current_location = steven['location']\n        met_friends.add(steven['name'])\n\n    # Next, meet Anthony (available all day)\n    anthony = next(f for f in friends if f['name'] == 'Anthony')\n    travel_time = travel_times[current_location][anthony['location']]\n    arrival_time = current_time + travel_time\n    available_start = time_to_minutes(anthony['available_start'])\n    available_end = time_to_minutes(anthony['available_end'])\n    \n    start_time = max(arrival_time, available_start)\n    end_time = start_time + anthony['min_duration']\n    \n    if end_time <= available_end:\n        itinerary.append({\n            'action': 'meet',\n            'location': anthony['location'],\n            'person': anthony['name'],\n            'start_time': minutes_to_time(start_time),\n            'end_time': minutes_to_time(end_time)\n        })\n        current_time = end_time\n        current_location = anthony['location']\n        met_friends.add(anthony['name'])\n\n    # Next, meet Sandra (afternoon/evening)\n    sandra = next(f for f in friends if f['name'] == 'Sandra')\n    travel_time = travel_times[current_location][sandra['location']]\n    arrival_time = current_time + travel_time\n    available_start = time_to_minutes(sandra['available_start'])\n    available_end = time_to_minutes(sandra['available_end'])\n    \n    start_time = max(arrival_time, available_start)\n    end_time = start_time + sandra['min_duration']\n    \n    if end_time <= available_end:\n        itinerary.append({\n            'action': 'meet',\n            'location': sandra['location'],\n            'person': sandra['name'],\n            'start_time': minutes_to_time(start_time),\n            'end_time': minutes_to_time(end_time)\n        })\n        current_time = end_time\n        current_location = sandra['location']\n        met_friends.add(sandra['name'])\n\n    # Next, meet Kevin (evening)\n    kevin = next(f for f in friends if f['name'] == 'Kevin')\n    travel_time = travel_times[current_location][kevin['location']]\n    arrival_time = current_time + travel_time\n    available_start = time_to_minutes(kevin['available_start'])\n    available_end = time_to_minutes(kevin['available_end'])\n    \n    start_time = max(arrival_time, available_start)\n    end_time = start_time + kevin['min_duration']\n    \n    if end_time <= available_end:\n        itinerary.append({\n            'action': 'meet',\n            'location': kevin['location'],\n            'person': kevin['name'],\n            'start_time': minutes_to_time(start_time),\n            'end_time': minutes_to_time(end_time)\n        })\n        current_time = end_time\n        current_location = kevin['location']\n        met_friends.add(kevin['name'])\n\n    # Finally, meet Stephanie (evening)\n    stephanie = next(f for f in friends if f['name'] == 'Stephanie')\n    travel_time = travel_times[current_location][stephanie['location']]\n    arrival_time = current_time + travel_time\n    available_start = time_to_minutes(stephanie['available_start'])\n    available_end = time_to_minutes(stephanie['available_end'])\n    \n    start_time = max(arrival_time, available_start)\n    end_time = start_time + stephanie['min_duration']\n    \n    if end_time <= available_end:\n        itinerary.append({\n            'action': 'meet',\n            'location': stephanie['location'],\n            'person': stephanie['name'],\n            'start_time': minutes_to_time(start_time),\n            'end_time': minutes_to_time(end_time)\n        })\n        met_friends.add(stephanie['name'])\n\n    return {'itinerary': itinerary}\n\nschedule = calculate_schedule()\nprint(json.dumps(schedule, indent=2))\n```",
            "count": "meeting_planning_example_577"
        }
    ]
}