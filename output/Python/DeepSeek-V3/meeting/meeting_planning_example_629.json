{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Presidio",
                        "person": "Matthew",
                        "start_time": "11:00",
                        "end_time": "12:30"
                    },
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "Margaret",
                        "start_time": "12:51",
                        "end_time": "14:21"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Nancy",
                        "start_time": "14:31",
                        "end_time": "14:46"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Kimberly",
                        "start_time": "15:01",
                        "end_time": "16:30"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Kenneth",
                        "start_time": "16:53",
                        "end_time": "17:53"
                    },
                    {
                        "action": "meet",
                        "location": "Richmond District",
                        "person": "Helen",
                        "start_time": "19:45",
                        "end_time": "20:45"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Rebecca",
                        "start_time": "21:15",
                        "end_time": "22:15"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Presidio",
                        "person": "Matthew",
                        "start_time": "11:00",
                        "end_time": "12:30"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Kimberly",
                        "start_time": "13:00",
                        "end_time": "15:00"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Nancy",
                        "start_time": "15:16",
                        "end_time": "15:31"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Kenneth",
                        "start_time": "15:53",
                        "end_time": "16:53"
                    },
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "Margaret",
                        "start_time": "17:11",
                        "end_time": "18:41"
                    },
                    {
                        "action": "meet",
                        "location": "Richmond District",
                        "person": "Helen",
                        "start_time": "19:45",
                        "end_time": "20:45"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Rebecca",
                        "start_time": "21:15",
                        "end_time": "22:15"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\nfrom itertools import permutations\n\ndef time_to_minutes(time_str):\n    h, m = map(int, time_str.split(':'))\n    return h * 60 + m\n\ndef minutes_to_time(minutes):\n    h = minutes // 60\n    m = minutes % 60\n    return f\"{h}:{m:02d}\"\n\n# Input data\ntravel_times = {\n    'Russian Hill': {\n        'Presidio': 14,\n        'Chinatown': 9,\n        'Pacific Heights': 7,\n        'Richmond District': 14,\n        'Fisherman\\'s Wharf': 7,\n        'Golden Gate Park': 21,\n        'Bayview': 23\n    },\n    'Presidio': {\n        'Russian Hill': 14,\n        'Chinatown': 21,\n        'Pacific Heights': 11,\n        'Richmond District': 7,\n        'Fisherman\\'s Wharf': 19,\n        'Golden Gate Park': 12,\n        'Bayview': 31\n    },\n    'Chinatown': {\n        'Russian Hill': 7,\n        'Presidio': 19,\n        'Pacific Heights': 10,\n        'Richmond District': 20,\n        'Fisherman\\'s Wharf': 8,\n        'Golden Gate Park': 23,\n        'Bayview': 22\n    },\n    'Pacific Heights': {\n        'Russian Hill': 7,\n        'Presidio': 11,\n        'Chinatown': 11,\n        'Richmond District': 12,\n        'Fisherman\\'s Wharf': 13,\n        'Golden Gate Park': 15,\n        'Bayview': 22\n    },\n    'Richmond District': {\n        'Russian Hill': 13,\n        'Presidio': 7,\n        'Chinatown': 20,\n        'Pacific Heights': 10,\n        'Fisherman\\'s Wharf': 18,\n        'Golden Gate Park': 9,\n        'Bayview': 26\n    },\n    'Fisherman\\'s Wharf': {\n        'Russian Hill': 7,\n        'Presidio': 17,\n        'Chinatown': 12,\n        'Pacific Heights': 12,\n        'Richmond District': 18,\n        'Golden Gate Park': 25,\n        'Bayview': 26\n    },\n    'Golden Gate Park': {\n        'Russian Hill': 19,\n        'Presidio': 11,\n        'Chinatown': 23,\n        'Pacific Heights': 16,\n        'Richmond District': 7,\n        'Fisherman\\'s Wharf': 24,\n        'Bayview': 23\n    },\n    'Bayview': {\n        'Russian Hill': 23,\n        'Presidio': 31,\n        'Chinatown': 18,\n        'Pacific Heights': 23,\n        'Richmond District': 25,\n        'Fisherman\\'s Wharf': 25,\n        'Golden Gate Park': 22\n    }\n}\n\nfriends = [\n    {\n        'name': 'Matthew',\n        'location': 'Presidio',\n        'available_start': '11:00',\n        'available_end': '21:00',\n        'duration': 90\n    },\n    {\n        'name': 'Margaret',\n        'location': 'Chinatown',\n        'available_start': '9:15',\n        'available_end': '18:45',\n        'duration': 90\n    },\n    {\n        'name': 'Nancy',\n        'location': 'Pacific Heights',\n        'available_start': '14:15',\n        'available_end': '17:00',\n        'duration': 15\n    },\n    {\n        'name': 'Helen',\n        'location': 'Richmond District',\n        'available_start': '19:45',\n        'available_end': '22:00',\n        'duration': 60\n    },\n    {\n        'name': 'Rebecca',\n        'location': 'Fisherman\\'s Wharf',\n        'available_start': '21:15',\n        'available_end': '22:15',\n        'duration': 60\n    },\n    {\n        'name': 'Kimberly',\n        'location': 'Golden Gate Park',\n        'available_start': '13:00',\n        'available_end': '16:30',\n        'duration': 120\n    },\n    {\n        'name': 'Kenneth',\n        'location': 'Bayview',\n        'available_start': '14:30',\n        'available_end': '18:00',\n        'duration': 60\n    }\n]\n\ndef generate_schedules():\n    current_location = 'Russian Hill'\n    current_time = time_to_minutes('9:00')\n    max_meetings = 0\n    best_schedule = []\n    \n    # Try all possible orders of meeting friends\n    for order in permutations(friends):\n        schedule = []\n        location = current_location\n        time = current_time\n        meetings = 0\n        \n        for friend in order:\n            # Check if we can meet this friend\n            travel_time = travel_times[location][friend['location']]\n            arrival_time = time + travel_time\n            available_start = time_to_minutes(friend['available_start'])\n            available_end = time_to_minutes(friend['available_end'])\n            \n            # Calculate possible meeting window\n            start_time = max(arrival_time, available_start)\n            end_time = min(start_time + friend['duration'], available_end)\n            \n            if end_time > start_time and end_time <= available_end:\n                schedule.append({\n                    'action': 'meet',\n                    'location': friend['location'],\n                    'person': friend['name'],\n                    'start_time': minutes_to_time(start_time),\n                    'end_time': minutes_to_time(end_time)\n                })\n                meetings += 1\n                time = end_time\n                location = friend['location']\n            else:\n                # Try to adjust meeting time if possible\n                if available_end - available_start >= friend['duration']:\n                    start_time = available_start\n                    end_time = start_time + friend['duration']\n                    if arrival_time <= start_time:\n                        schedule.append({\n                            'action': 'meet',\n                            'location': friend['location'],\n                            'person': friend['name'],\n                            'start_time': minutes_to_time(start_time),\n                            'end_time': minutes_to_time(end_time)\n                        })\n                        meetings += 1\n                        time = end_time\n                        location = friend['location']\n        \n        if meetings > max_meetings or (meetings == max_meetings and len(schedule) > len(best_schedule)):\n            max_meetings = meetings\n            best_schedule = schedule\n    \n    return best_schedule\n\n# Generate the best schedule\nbest_schedule = generate_schedules()\n\n# Output as JSON\noutput = {\n    \"itinerary\": best_schedule\n}\n\nprint(json.dumps(output, indent=2))\n```",
            "count": "meeting_planning_example_629"
        }
    ]
}