[
    {
        "role": "user",
        "content": "You are an expert computational meeting planner. Your task is to write a Python program that algorithmically calculates the optimal meeting schedule based on the participants' constraints.\nThe program must actually compute the plan using the given parameters, not just print a pre-determined answer.\nInput parameters:\nYou are visiting San Francisco for the day and want to meet as many friends as possible. Solve the problem by considering various different schedules and picking the best one to optimize your goals.\n\nTravel distances (in minutes):\nUnion Square to Mission District: 14.\nUnion Square to Fisherman's Wharf: 15.\nUnion Square to Russian Hill: 13.\nUnion Square to Marina District: 18.\nUnion Square to North Beach: 10.\nUnion Square to Chinatown: 7.\nUnion Square to Pacific Heights: 15.\nUnion Square to The Castro: 17.\nUnion Square to Nob Hill: 9.\nUnion Square to Sunset District: 27.\nMission District to Union Square: 15.\nMission District to Fisherman's Wharf: 22.\nMission District to Russian Hill: 15.\nMission District to Marina District: 19.\nMission District to North Beach: 17.\nMission District to Chinatown: 16.\nMission District to Pacific Heights: 16.\nMission District to The Castro: 7.\nMission District to Nob Hill: 12.\nMission District to Sunset District: 24.\nFisherman's Wharf to Union Square: 13.\nFisherman's Wharf to Mission District: 22.\nFisherman's Wharf to Russian Hill: 7.\nFisherman's Wharf to Marina District: 9.\nFisherman's Wharf to North Beach: 6.\nFisherman's Wharf to Chinatown: 12.\nFisherman's Wharf to Pacific Heights: 12.\nFisherman's Wharf to The Castro: 27.\nFisherman's Wharf to Nob Hill: 11.\nFisherman's Wharf to Sunset District: 27.\nRussian Hill to Union Square: 10.\nRussian Hill to Mission District: 16.\nRussian Hill to Fisherman's Wharf: 7.\nRussian Hill to Marina District: 7.\nRussian Hill to North Beach: 5.\nRussian Hill to Chinatown: 9.\nRussian Hill to Pacific Heights: 7.\nRussian Hill to The Castro: 21.\nRussian Hill to Nob Hill: 5.\nRussian Hill to Sunset District: 23.\nMarina District to Union Square: 16.\nMarina District to Mission District: 20.\nMarina District to Fisherman's Wharf: 10.\nMarina District to Russian Hill: 8.\nMarina District to North Beach: 11.\nMarina District to Chinatown: 15.\nMarina District to Pacific Heights: 7.\nMarina District to The Castro: 22.\nMarina District to Nob Hill: 12.\nMarina District to Sunset District: 19.\nNorth Beach to Union Square: 7.\nNorth Beach to Mission District: 18.\nNorth Beach to Fisherman's Wharf: 5.\nNorth Beach to Russian Hill: 4.\nNorth Beach to Marina District: 9.\nNorth Beach to Chinatown: 6.\nNorth Beach to Pacific Heights: 8.\nNorth Beach to The Castro: 23.\nNorth Beach to Nob Hill: 7.\nNorth Beach to Sunset District: 27.\nChinatown to Union Square: 7.\nChinatown to Mission District: 17.\nChinatown to Fisherman's Wharf: 8.\nChinatown to Russian Hill: 7.\nChinatown to Marina District: 12.\nChinatown to North Beach: 3.\nChinatown to Pacific Heights: 10.\nChinatown to The Castro: 22.\nChinatown to Nob Hill: 9.\nChinatown to Sunset District: 29.\nPacific Heights to Union Square: 12.\nPacific Heights to Mission District: 15.\nPacific Heights to Fisherman's Wharf: 13.\nPacific Heights to Russian Hill: 7.\nPacific Heights to Marina District: 6.\nPacific Heights to North Beach: 9.\nPacific Heights to Chinatown: 11.\nPacific Heights to The Castro: 16.\nPacific Heights to Nob Hill: 8.\nPacific Heights to Sunset District: 21.\nThe Castro to Union Square: 19.\nThe Castro to Mission District: 7.\nThe Castro to Fisherman's Wharf: 24.\nThe Castro to Russian Hill: 18.\nThe Castro to Marina District: 21.\nThe Castro to North Beach: 20.\nThe Castro to Chinatown: 22.\nThe Castro to Pacific Heights: 16.\nThe Castro to Nob Hill: 16.\nThe Castro to Sunset District: 17.\nNob Hill to Union Square: 7.\nNob Hill to Mission District: 13.\nNob Hill to Fisherman's Wharf: 10.\nNob Hill to Russian Hill: 5.\nNob Hill to Marina District: 11.\nNob Hill to North Beach: 8.\nNob Hill to Chinatown: 6.\nNob Hill to Pacific Heights: 8.\nNob Hill to The Castro: 17.\nNob Hill to Sunset District: 24.\nSunset District to Union Square: 30.\nSunset District to Mission District: 25.\nSunset District to Fisherman's Wharf: 29.\nSunset District to Russian Hill: 24.\nSunset District to Marina District: 21.\nSunset District to North Beach: 28.\nSunset District to Chinatown: 30.\nSunset District to Pacific Heights: 21.\nSunset District to The Castro: 17.\nSunset District to Nob Hill: 27.\n\nCONSTRAINTS: You arrive at Union Square at 9:00AM. Kevin will be at Mission District from 8:45PM to 9:45PM. You'd like to meet Kevin for a minimum of 60 minutes. Mark will be at Fisherman's Wharf from 5:15PM to 8:00PM. You'd like to meet Mark for a minimum of 90 minutes. Jessica will be at Russian Hill from 9:00AM to 3:00PM. You'd like to meet Jessica for a minimum of 120 minutes. Jason will be at Marina District from 3:15PM to 9:45PM. You'd like to meet Jason for a minimum of 120 minutes. John will be at North Beach from 9:45AM to 6:00PM. You'd like to meet John for a minimum of 15 minutes. Karen will be at Chinatown from 4:45PM to 7:00PM. You'd like to meet Karen for a minimum of 75 minutes. Sarah will be at Pacific Heights from 5:30PM to 6:15PM. You'd like to meet Sarah for a minimum of 45 minutes. Amanda will be at The Castro from 8:00PM to 9:15PM. You'd like to meet Amanda for a minimum of 60 minutes. Nancy will be at Nob Hill from 9:45AM to 1:00PM. You'd like to meet Nancy for a minimum of 45 minutes. Rebecca will be at Sunset District from 8:45AM to 3:00PM. You'd like to meet Rebecca for a minimum of 75 minutes.\n\nYour response should start with 'SOLUTION:'.\n\nGenerate a complete, self-contained Python program that:\n1. Takes the above meeting constraints as input variables\n2. Computes the optimal meeting schedule using logical rules and calculations\n3. Outputs the result as a JSON-formatted dictionary with the following structure:\n{\n  \"itinerary\": [\n    {\"action\": \"meet\", \"location\": \"Location Name\", \"person\": \"Person Name\", \"start_time\": \"H:MM\", \"end_time\": \"H:MM\"},\n    {\"action\": \"meet\", \"location\": \"Location Name\", \"person\": \"Person Name\", \"start_time\": \"H:MM\", \"end_time\": \"H:MM\"}\n  ]\n}\nRules for the program:\n- Times should be in 24-hour format like '9:00' or '13:30' (no leading zero)\n- The schedule must account for all travel times and constraints\n- The program must actually compute the schedule, not just print a static answer\n\nOutput only the complete Python code with no additional text or explanation.\nThe code must run independently and output valid JSON when executed."
    },
    {
        "role": "assistant",
        "content": "```python\nimport json\nfrom itertools import permutations\n\ndef time_to_minutes(time_str):\n    h, m = map(int, time_str.split(':'))\n    return h * 60 + m\n\ndef minutes_to_time(minutes):\n    h = minutes // 60\n    m = minutes % 60\n    return f\"{h}:{m:02d}\"\n\n# Travel times in minutes (from_location, to_location): time\ntravel_times = {\n    ('Union Square', 'Mission District'): 14,\n    ('Union Square', 'Fisherman\\'s Wharf'): 15,\n    ('Union Square', 'Russian Hill'): 13,\n    ('Union Square', 'Marina District'): 18,\n    ('Union Square', 'North Beach'): 10,\n    ('Union Square', 'Chinatown'): 7,\n    ('Union Square', 'Pacific Heights'): 15,\n    ('Union Square', 'The Castro'): 17,\n    ('Union Square', 'Nob Hill'): 9,\n    ('Union Square', 'Sunset District'): 27,\n    ('Mission District', 'Union Square'): 15,\n    ('Mission District', 'Fisherman\\'s Wharf'): 22,\n    ('Mission District', 'Russian Hill'): 15,\n    ('Mission District', 'Marina District'): 19,\n    ('Mission District', 'North Beach'): 17,\n    ('Mission District', 'Chinatown'): 16,\n    ('Mission District', 'Pacific Heights'): 16,\n    ('Mission District', 'The Castro'): 7,\n    ('Mission District', 'Nob Hill'): 12,\n    ('Mission District', 'Sunset District'): 24,\n    ('Fisherman\\'s Wharf', 'Union Square'): 13,\n    ('Fisherman\\'s Wharf', 'Mission District'): 22,\n    ('Fisherman\\'s Wharf', 'Russian Hill'): 7,\n    ('Fisherman\\'s Wharf', 'Marina District'): 9,\n    ('Fisherman\\'s Wharf', 'North Beach'): 6,\n    ('Fisherman\\'s Wharf', 'Chinatown'): 12,\n    ('Fisherman\\'s Wharf', 'Pacific Heights'): 12,\n    ('Fisherman\\'s Wharf', 'The Castro'): 27,\n    ('Fisherman\\'s Wharf', 'Nob Hill'): 11,\n    ('Fisherman\\'s Wharf', 'Sunset District'): 27,\n    ('Russian Hill', 'Union Square'): 10,\n    ('Russian Hill', 'Mission District'): 16,\n    ('Russian Hill', 'Fisherman\\'s Wharf'): 7,\n    ('Russian Hill', 'Marina District'): 7,\n    ('Russian Hill', 'North Beach'): 5,\n    ('Russian Hill', 'Chinatown'): 9,\n    ('Russian Hill', 'Pacific Heights'): 7,\n    ('Russian Hill', 'The Castro'): 21,\n    ('Russian Hill', 'Nob Hill'): 5,\n    ('Russian Hill', 'Sunset District'): 23,\n    ('Marina District', 'Union Square'): 16,\n    ('Marina District', 'Mission District'): 20,\n    ('Marina District', 'Fisherman\\'s Wharf'): 10,\n    ('Marina District', 'Russian Hill'): 8,\n    ('Marina District', 'North Beach'): 11,\n    ('Marina District', 'Chinatown'): 15,\n    ('Marina District', 'Pacific Heights'): 7,\n    ('Marina District', 'The Castro'): 22,\n    ('Marina District', 'Nob Hill'): 12,\n    ('Marina District', 'Sunset District'): 19,\n    ('North Beach', 'Union Square'): 7,\n    ('North Beach', 'Mission District'): 18,\n    ('North Beach', 'Fisherman\\'s Wharf'): 5,\n    ('North Beach', 'Russian Hill'): 4,\n    ('North Beach', 'Marina District'): 9,\n    ('North Beach', 'Chinatown'): 6,\n    ('North Beach', 'Pacific Heights'): 8,\n    ('North Beach', 'The Castro'): 23,\n    ('North Beach', 'Nob Hill'): 7,\n    ('North Beach', 'Sunset District'): 27,\n    ('Chinatown', 'Union Square'): 7,\n    ('Chinatown', 'Mission District'): 17,\n    ('Chinatown', 'Fisherman\\'s Wharf'): 8,\n    ('Chinatown', 'Russian Hill'): 7,\n    ('Chinatown', 'Marina District'): 12,\n    ('Chinatown', 'North Beach'): 3,\n    ('Chinatown', 'Pacific Heights'): 10,\n    ('Chinatown', 'The Castro'): 22,\n    ('Chinatown', 'Nob Hill'): 9,\n    ('Chinatown', 'Sunset District'): 29,\n    ('Pacific Heights', 'Union Square'): 12,\n    ('Pacific Heights', 'Mission District'): 15,\n    ('Pacific Heights', 'Fisherman\\'s Wharf'): 13,\n    ('Pacific Heights', 'Russian Hill'): 7,\n    ('Pacific Heights', 'Marina District'): 6,\n    ('Pacific Heights', 'North Beach'): 9,\n    ('Pacific Heights', 'Chinatown'): 11,\n    ('Pacific Heights', 'The Castro'): 16,\n    ('Pacific Heights', 'Nob Hill'): 8,\n    ('Pacific Heights', 'Sunset District'): 21,\n    ('The Castro', 'Union Square'): 19,\n    ('The Castro', 'Mission District'): 7,\n    ('The Castro', 'Fisherman\\'s Wharf'): 24,\n    ('The Castro', 'Russian Hill'): 18,\n    ('The Castro', 'Marina District'): 21,\n    ('The Castro', 'North Beach'): 20,\n    ('The Castro', 'Chinatown'): 22,\n    ('The Castro', 'Pacific Heights'): 16,\n    ('The Castro', 'Nob Hill'): 16,\n    ('The Castro', 'Sunset District'): 17,\n    ('Nob Hill', 'Union Square'): 7,\n    ('Nob Hill', 'Mission District'): 13,\n    ('Nob Hill', 'Fisherman\\'s Wharf'): 10,\n    ('Nob Hill', 'Russian Hill'): 5,\n    ('Nob Hill', 'Marina District'): 11,\n    ('Nob Hill', 'North Beach'): 8,\n    ('Nob Hill', 'Chinatown'): 6,\n    ('Nob Hill', 'Pacific Heights'): 8,\n    ('Nob Hill', 'The Castro'): 17,\n    ('Nob Hill', 'Sunset District'): 24,\n    ('Sunset District', 'Union Square'): 30,\n    ('Sunset District', 'Mission District'): 25,\n    ('Sunset District', 'Fisherman\\'s Wharf'): 29,\n    ('Sunset District', 'Russian Hill'): 24,\n    ('Sunset District', 'Marina District'): 21,\n    ('Sunset District', 'North Beach'): 28,\n    ('Sunset District', 'Chinatown'): 30,\n    ('Sunset District', 'Pacific Heights'): 21,\n    ('Sunset District', 'The Castro'): 17,\n    ('Sunset District', 'Nob Hill'): 27\n}\n\n# Friend data: name, location, available_start, available_end, min_duration\nfriends = [\n    ('Kevin', 'Mission District', '20:45', '21:45', 60),\n    ('Mark', 'Fisherman\\'s Wharf', '17:15', '20:00', 90),\n    ('Jessica', 'Russian Hill', '9:00', '15:00', 120),\n    ('Jason', 'Marina District', '15:15', '21:45', 120),\n    ('John', 'North Beach', '9:45', '18:00', 15),\n    ('Karen', 'Chinatown', '16:45', '19:00', 75),\n    ('Sarah', 'Pacific Heights', '17:30', '18:15', 45),\n    ('Amanda', 'The Castro', '20:00', '21:15', 60),\n    ('Nancy', 'Nob Hill', '9:45', '13:00', 45),\n    ('Rebecca', 'Sunset District', '8:45', '15:00', 75)\n]\n\ndef get_travel_time(from_loc, to_loc):\n    return travel_times.get((from_loc, to_loc), float('inf'))\n\ndef is_schedule_valid(schedule):\n    current_time = time_to_minutes('9:00')\n    current_location = 'Union Square'\n    \n    for entry in schedule:\n        name, location, avail_start, avail_end, min_duration = entry\n        travel_time = get_travel_time(current_location, location)\n        \n        # Arrival time at friend's location\n        arrival_time = current_time + travel_time\n        avail_start_min = time_to_minutes(avail_start)\n        avail_end_min = time_to_minutes(avail_end)\n        \n        # Can't arrive after availability ends\n        if arrival_time > avail_end_min:\n            return False\n        \n        # Start time is max of arrival time and friend's available start\n        start_time = max(arrival_time, avail_start_min)\n        \n        # End time is start time + min_duration\n        end_time = start_time + min_duration\n        \n        # Can't exceed friend's availability\n        if end_time > avail_end_min:\n            return False\n        \n        current_time = end_time\n        current_location = location\n    \n    return True\n\ndef calculate_total_meeting_time(schedule):\n    total = 0\n    for entry in schedule:\n        total += entry[4]  # min_duration\n    return total\n\ndef generate_schedules():\n    # Try different permutations of friends to find a valid schedule\n    # We'll limit to permutations of 5 friends to keep computation reasonable\n    from itertools import combinations\n    best_schedule = []\n    best_time = 0\n    \n    for friend_count in range(5, 6):\n        for friend_group in combinations(friends, friend_count):\n            for perm in permutations(friend_group):\n                if is_schedule_valid(perm):\n                    total_time = calculate_total_meeting_time(perm)\n                    if total_time > best_time:\n                        best_time = total_time\n                        best_schedule = perm\n                        # Early exit if we find a schedule with all friends\n                        if len(best_schedule) == len(friends):\n                            return best_schedule\n    \n    return best_schedule\n\ndef build_itinerary(schedule):\n    itinerary = []\n    current_time = time_to_minutes('9:00')\n    current_location = 'Union Square'\n    \n    for entry in schedule:\n        name, location, _, _, min_duration = entry\n        travel_time = get_travel_time(current_location, location)\n        \n        # Travel action\n        if travel_time > 0:\n            travel_start = minutes_to_time(current_time)\n            current_time += travel_time\n            travel_end = minutes_to_time(current_time)\n            itinerary.append({\n                \"action\": \"travel\",\n                \"from\": current_location,\n                \"to\": location,\n                \"start_time\": travel_start,\n                \"end_time\": travel_end\n            })\n        \n        # Meeting action\n        avail_start_min = time_to_minutes(entry[2])\n        start_time = max(current_time, avail_start_min)\n        end_time = start_time + min_duration\n        \n        itinerary.append({\n            \"action\": \"meet\",\n            \"location\": location,\n            \"person\": name,\n            \"start_time\": minutes_to_time(start_time),\n            \"end_time\": minutes_to_time(end_time)\n        })\n        \n        current_time = end_time\n        current_location = location\n    \n    return itinerary\n\n# Generate the best schedule\nbest_schedule = generate_schedules()\n\nif not best_schedule:\n    print(json.dumps({\"error\": \"No valid schedule found\"}))\nelse:\n    itinerary = build_itinerary(best_schedule)\n    print(json.dumps({\"itinerary\": itinerary}, indent=2))\n```"
    }
]