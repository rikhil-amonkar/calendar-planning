{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Joshua",
                        "start_time": "21:00",
                        "end_time": "21:15"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Joshua",
                        "start_time": "20:45",
                        "end_time": "21:00"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\ndef calculate_optimal_schedule():\n    # Input parameters\n    arrival_time = datetime.strptime(\"9:00\", \"%H:%M\")\n    joshua_start = datetime.strptime(\"20:45\", \"%H:%M\")\n    joshua_end = datetime.strptime(\"21:45\", \"%H:%M\")\n    min_meeting_duration = timedelta(minutes=15)\n    sunset_to_golden_gate = timedelta(minutes=11)\n    golden_gate_to_sunset = timedelta(minutes=10)\n    \n    # Calculate latest departure time to meet Joshua\n    latest_departure_from_sunset = joshua_start + min_meeting_duration - sunset_to_golden_gate\n    if latest_departure_from_sunset < arrival_time:\n        # Cannot meet Joshua\n        itinerary = []\n    else:\n        # Can meet Joshua\n        travel_start = latest_departure_from_sunset\n        travel_end = travel_start + sunset_to_golden_gate\n        meeting_end = min(travel_end + min_meeting_duration, joshua_end)\n        \n        itinerary = [\n            {\n                \"action\": \"travel\",\n                \"location\": \"Sunset District to Golden Gate Park\",\n                \"person\": None,\n                \"start_time\": travel_start.strftime(\"%-H:%M\"),\n                \"end_time\": travel_end.strftime(\"%-H:%M\")\n            },\n            {\n                \"action\": \"meet\",\n                \"location\": \"Golden Gate Park\",\n                \"person\": \"Joshua\",\n                \"start_time\": travel_end.strftime(\"%-H:%M\"),\n                \"end_time\": meeting_end.strftime(\"%-H:%M\")\n            }\n        ]\n    \n    return {\n        \"itinerary\": itinerary\n    }\n\nresult = calculate_optimal_schedule()\nprint(json.dumps(result, indent=2))\n```",
            "count": "meeting_planning_example_88"
        }
    ]
}