{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Rebecca",
                        "start_time": "9:10",
                        "end_time": "9:40"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Stephanie",
                        "start_time": "11:00",
                        "end_time": "12:45"
                    },
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "Karen",
                        "start_time": "13:45",
                        "end_time": "14:00"
                    },
                    {
                        "action": "meet",
                        "location": "North Beach",
                        "person": "Steven",
                        "start_time": "14:30",
                        "end_time": "16:30"
                    },
                    {
                        "action": "meet",
                        "location": "Union Square",
                        "person": "Brian",
                        "start_time": "16:37",
                        "end_time": "17:07"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Rebecca",
                        "start_time": "9:10",
                        "end_time": "9:40"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Stephanie",
                        "start_time": "11:00",
                        "end_time": "12:45"
                    },
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "Karen",
                        "start_time": "13:45",
                        "end_time": "14:00"
                    },
                    {
                        "action": "meet",
                        "location": "Union Square",
                        "person": "Brian",
                        "start_time": "15:00",
                        "end_time": "15:30"
                    },
                    {
                        "action": "meet",
                        "location": "North Beach",
                        "person": "Steven",
                        "start_time": "15:40",
                        "end_time": "17:40"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\nfrom itertools import permutations\n\ndef time_to_minutes(time_str):\n    h, m = map(int, time_str.split(':'))\n    return h * 60 + m\n\ndef minutes_to_time(minutes):\n    h = minutes // 60\n    m = minutes % 60\n    return f\"{h}:{m:02d}\"\n\ndef calculate_schedule():\n    # Travel times dictionary: {from_location: {to_location: minutes}}\n    travel_times = {\n        'Financial District': {\n            'Golden Gate Park': 23,\n            'Chinatown': 5,\n            'Union Square': 9,\n            'Fisherman\\'s Wharf': 10,\n            'Pacific Heights': 13,\n            'North Beach': 7\n        },\n        'Golden Gate Park': {\n            'Financial District': 26,\n            'Chinatown': 23,\n            'Union Square': 22,\n            'Fisherman\\'s Wharf': 24,\n            'Pacific Heights': 16,\n            'North Beach': 24\n        },\n        'Chinatown': {\n            'Financial District': 5,\n            'Golden Gate Park': 23,\n            'Union Square': 7,\n            'Fisherman\\'s Wharf': 8,\n            'Pacific Heights': 10,\n            'North Beach': 3\n        },\n        'Union Square': {\n            'Financial District': 9,\n            'Golden Gate Park': 22,\n            'Chinatown': 7,\n            'Fisherman\\'s Wharf': 15,\n            'Pacific Heights': 15,\n            'North Beach': 10\n        },\n        'Fisherman\\'s Wharf': {\n            'Financial District': 11,\n            'Golden Gate Park': 25,\n            'Chinatown': 12,\n            'Union Square': 13,\n            'Pacific Heights': 12,\n            'North Beach': 6\n        },\n        'Pacific Heights': {\n            'Financial District': 13,\n            'Golden Gate Park': 15,\n            'Chinatown': 11,\n            'Union Square': 12,\n            'Fisherman\\'s Wharf': 13,\n            'North Beach': 9\n        },\n        'North Beach': {\n            'Financial District': 8,\n            'Golden Gate Park': 22,\n            'Chinatown': 6,\n            'Union Square': 7,\n            'Fisherman\\'s Wharf': 5,\n            'Pacific Heights': 8\n        }\n    }\n\n    # Friend constraints\n    friends = [\n        {'name': 'Stephanie', 'location': 'Golden Gate Park', 'start': '11:00', 'end': '15:00', 'duration': 105},\n        {'name': 'Karen', 'location': 'Chinatown', 'start': '13:45', 'end': '16:30', 'duration': 15},\n        {'name': 'Brian', 'location': 'Union Square', 'start': '15:00', 'end': '17:15', 'duration': 30},\n        {'name': 'Rebecca', 'location': 'Fisherman\\'s Wharf', 'start': '8:00', 'end': '11:15', 'duration': 30},\n        {'name': 'Joseph', 'location': 'Pacific Heights', 'start': '8:15', 'end': '9:30', 'duration': 60},\n        {'name': 'Steven', 'location': 'North Beach', 'start': '14:30', 'end': '20:45', 'duration': 120}\n    ]\n\n    current_time = time_to_minutes('9:00')\n    current_location = 'Financial District'\n    itinerary = []\n\n    # Try to meet Joseph first (earliest availability)\n    joseph = next(f for f in friends if f['name'] == 'Joseph')\n    travel_time = travel_times[current_location][joseph['location']]\n    arrival_time = current_time + travel_time\n    joseph_start = time_to_minutes(joseph['start'])\n    joseph_end = time_to_minutes(joseph['end'])\n    \n    if arrival_time <= joseph_end - joseph['duration']:\n        meet_start = max(arrival_time, joseph_start)\n        meet_end = meet_start + joseph['duration']\n        if meet_end <= joseph_end:\n            itinerary.append({\n                'action': 'meet',\n                'location': joseph['location'],\n                'person': joseph['name'],\n                'start_time': minutes_to_time(meet_start),\n                'end_time': minutes_to_time(meet_end)\n            })\n            current_time = meet_end\n            current_location = joseph['location']\n\n    # Try to meet Rebecca next\n    rebecca = next(f for f in friends if f['name'] == 'Rebecca')\n    travel_time = travel_times[current_location][rebecca['location']]\n    arrival_time = current_time + travel_time\n    rebecca_start = time_to_minutes(rebecca['start'])\n    rebecca_end = time_to_minutes(rebecca['end'])\n    \n    if arrival_time <= rebecca_end - rebecca['duration']:\n        meet_start = max(arrival_time, rebecca_start)\n        meet_end = meet_start + rebecca['duration']\n        if meet_end <= rebecca_end:\n            itinerary.append({\n                'action': 'meet',\n                'location': rebecca['location'],\n                'person': rebecca['name'],\n                'start_time': minutes_to_time(meet_start),\n                'end_time': minutes_to_time(meet_end)\n            })\n            current_time = meet_end\n            current_location = rebecca['location']\n\n    # Try to meet Stephanie next\n    stephanie = next(f for f in friends if f['name'] == 'Stephanie')\n    travel_time = travel_times[current_location][stephanie['location']]\n    arrival_time = current_time + travel_time\n    stephanie_start = time_to_minutes(stephanie['start'])\n    stephanie_end = time_to_minutes(stephanie['end'])\n    \n    if arrival_time <= stephanie_end - stephanie['duration']:\n        meet_start = max(arrival_time, stephanie_start)\n        meet_end = meet_start + stephanie['duration']\n        if meet_end <= stephanie_end:\n            itinerary.append({\n                'action': 'meet',\n                'location': stephanie['location'],\n                'person': stephanie['name'],\n                'start_time': minutes_to_time(meet_start),\n                'end_time': minutes_to_time(meet_end)\n            })\n            current_time = meet_end\n            current_location = stephanie['location']\n\n    # Try to meet Karen next\n    karen = next(f for f in friends if f['name'] == 'Karen')\n    travel_time = travel_times[current_location][karen['location']]\n    arrival_time = current_time + travel_time\n    karen_start = time_to_minutes(karen['start'])\n    karen_end = time_to_minutes(karen['end'])\n    \n    if arrival_time <= karen_end - karen['duration']:\n        meet_start = max(arrival_time, karen_start)\n        meet_end = meet_start + karen['duration']\n        if meet_end <= karen_end:\n            itinerary.append({\n                'action': 'meet',\n                'location': karen['location'],\n                'person': karen['name'],\n                'start_time': minutes_to_time(meet_start),\n                'end_time': minutes_to_time(meet_end)\n            })\n            current_time = meet_end\n            current_location = karen['location']\n\n    # Try to meet Steven next\n    steven = next(f for f in friends if f['name'] == 'Steven')\n    travel_time = travel_times[current_location][steven['location']]\n    arrival_time = current_time + travel_time\n    steven_start = time_to_minutes(steven['start'])\n    steven_end = time_to_minutes(steven['end'])\n    \n    if arrival_time <= steven_end - steven['duration']:\n        meet_start = max(arrival_time, steven_start)\n        meet_end = meet_start + steven['duration']\n        if meet_end <= steven_end:\n            itinerary.append({\n                'action': 'meet',\n                'location': steven['location'],\n                'person': steven['name'],\n                'start_time': minutes_to_time(meet_start),\n                'end_time': minutes_to_time(meet_end)\n            })\n            current_time = meet_end\n            current_location = steven['location']\n\n    # Try to meet Brian last\n    brian = next(f for f in friends if f['name'] == 'Brian')\n    travel_time = travel_times[current_location][brian['location']]\n    arrival_time = current_time + travel_time\n    brian_start = time_to_minutes(brian['start'])\n    brian_end = time_to_minutes(brian['end'])\n    \n    if arrival_time <= brian_end - brian['duration']:\n        meet_start = max(arrival_time, brian_start)\n        meet_end = meet_start + brian['duration']\n        if meet_end <= brian_end:\n            itinerary.append({\n                'action': 'meet',\n                'location': brian['location'],\n                'person': brian['name'],\n                'start_time': minutes_to_time(meet_start),\n                'end_time': minutes_to_time(meet_end)\n            })\n\n    return {'itinerary': itinerary}\n\nif __name__ == '__main__':\n    schedule = calculate_schedule()\n    print(json.dumps(schedule, indent=2))\n```",
            "count": "meeting_planning_example_502"
        }
    ]
}