{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Jessica",
                        "start_time": "9:13",
                        "end_time": "11:13"
                    },
                    {
                        "action": "meet",
                        "location": "Sunset District",
                        "person": "Rebecca",
                        "start_time": "11:35",
                        "end_time": "12:50"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Jason",
                        "start_time": "15:15",
                        "end_time": "17:15"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Mark",
                        "start_time": "17:25",
                        "end_time": "18:55"
                    },
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Kevin",
                        "start_time": "20:45",
                        "end_time": "21:45"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Jessica",
                        "start_time": "9:13",
                        "end_time": "11:13"
                    },
                    {
                        "action": "meet",
                        "location": "North Beach",
                        "person": "John",
                        "start_time": "11:18",
                        "end_time": "11:33"
                    },
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Nancy",
                        "start_time": "11:40",
                        "end_time": "12:25"
                    },
                    {
                        "action": "meet",
                        "location": "Sunset District",
                        "person": "Rebecca",
                        "start_time": "12:49",
                        "end_time": "14:04"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Jason",
                        "start_time": "15:15",
                        "end_time": "17:15"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Sarah",
                        "start_time": "17:30",
                        "end_time": "18:15"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Mark",
                        "start_time": "18:28",
                        "end_time": "19:58"
                    },
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Kevin",
                        "start_time": "20:45",
                        "end_time": "21:45"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\nfrom itertools import permutations\n\n# Travel times dictionary (from -> to -> minutes)\ntravel_times = {\n    'Union Square': {\n        'Mission District': 14,\n        'Fisherman\\'s Wharf': 15,\n        'Russian Hill': 13,\n        'Marina District': 18,\n        'North Beach': 10,\n        'Chinatown': 7,\n        'Pacific Heights': 15,\n        'The Castro': 17,\n        'Nob Hill': 9,\n        'Sunset District': 27\n    },\n    'Mission District': {\n        'Union Square': 15,\n        'Fisherman\\'s Wharf': 22,\n        'Russian Hill': 15,\n        'Marina District': 19,\n        'North Beach': 17,\n        'Chinatown': 16,\n        'Pacific Heights': 16,\n        'The Castro': 7,\n        'Nob Hill': 12,\n        'Sunset District': 24\n    },\n    'Fisherman\\'s Wharf': {\n        'Union Square': 13,\n        'Mission District': 22,\n        'Russian Hill': 7,\n        'Marina District': 9,\n        'North Beach': 6,\n        'Chinatown': 12,\n        'Pacific Heights': 12,\n        'The Castro': 27,\n        'Nob Hill': 11,\n        'Sunset District': 27\n    },\n    'Russian Hill': {\n        'Union Square': 10,\n        'Mission District': 16,\n        'Fisherman\\'s Wharf': 7,\n        'Marina District': 7,\n        'North Beach': 5,\n        'Chinatown': 9,\n        'Pacific Heights': 7,\n        'The Castro': 21,\n        'Nob Hill': 5,\n        'Sunset District': 23\n    },\n    'Marina District': {\n        'Union Square': 16,\n        'Mission District': 20,\n        'Fisherman\\'s Wharf': 10,\n        'Russian Hill': 8,\n        'North Beach': 11,\n        'Chinatown': 15,\n        'Pacific Heights': 7,\n        'The Castro': 22,\n        'Nob Hill': 12,\n        'Sunset District': 19\n    },\n    'North Beach': {\n        'Union Square': 7,\n        'Mission District': 18,\n        'Fisherman\\'s Wharf': 5,\n        'Russian Hill': 4,\n        'Marina District': 9,\n        'Chinatown': 6,\n        'Pacific Heights': 8,\n        'The Castro': 23,\n        'Nob Hill': 7,\n        'Sunset District': 27\n    },\n    'Chinatown': {\n        'Union Square': 7,\n        'Mission District': 17,\n        'Fisherman\\'s Wharf': 8,\n        'Russian Hill': 7,\n        'Marina District': 12,\n        'North Beach': 3,\n        'Pacific Heights': 10,\n        'The Castro': 22,\n        'Nob Hill': 9,\n        'Sunset District': 29\n    },\n    'Pacific Heights': {\n        'Union Square': 12,\n        'Mission District': 15,\n        'Fisherman\\'s Wharf': 13,\n        'Russian Hill': 7,\n        'Marina District': 6,\n        'North Beach': 9,\n        'Chinatown': 11,\n        'The Castro': 16,\n        'Nob Hill': 8,\n        'Sunset District': 21\n    },\n    'The Castro': {\n        'Union Square': 19,\n        'Mission District': 7,\n        'Fisherman\\'s Wharf': 24,\n        'Russian Hill': 18,\n        'Marina District': 21,\n        'North Beach': 20,\n        'Chinatown': 22,\n        'Pacific Heights': 16,\n        'Nob Hill': 16,\n        'Sunset District': 17\n    },\n    'Nob Hill': {\n        'Union Square': 7,\n        'Mission District': 13,\n        'Fisherman\\'s Wharf': 10,\n        'Russian Hill': 5,\n        'Marina District': 11,\n        'North Beach': 8,\n        'Chinatown': 6,\n        'Pacific Heights': 8,\n        'The Castro': 17,\n        'Sunset District': 24\n    },\n    'Sunset District': {\n        'Union Square': 30,\n        'Mission District': 25,\n        'Fisherman\\'s Wharf': 29,\n        'Russian Hill': 24,\n        'Marina District': 21,\n        'North Beach': 28,\n        'Chinatown': 30,\n        'Pacific Heights': 21,\n        'The Castro': 17,\n        'Nob Hill': 27\n    }\n}\n\n# Friend availability\nfriends = {\n    'Kevin': {\n        'location': 'Mission District',\n        'start': 20.75,  # 8:45 PM\n        'end': 21.75,    # 9:45 PM\n        'duration': 1.0  # 60 minutes\n    },\n    'Mark': {\n        'location': 'Fisherman\\'s Wharf',\n        'start': 17.25,  # 5:15 PM\n        'end': 20.0,     # 8:00 PM\n        'duration': 1.5  # 90 minutes\n    },\n    'Jessica': {\n        'location': 'Russian Hill',\n        'start': 9.0,    # 9:00 AM\n        'end': 15.0,     # 3:00 PM\n        'duration': 2.0  # 120 minutes\n    },\n    'Jason': {\n        'location': 'Marina District',\n        'start': 15.25, # 3:15 PM\n        'end': 21.75,    # 9:45 PM\n        'duration': 2.0  # 120 minutes\n    },\n    'John': {\n        'location': 'North Beach',\n        'start': 9.75,   # 9:45 AM\n        'end': 18.0,     # 6:00 PM\n        'duration': 0.25 # 15 minutes\n    },\n    'Karen': {\n        'location': 'Chinatown',\n        'start': 16.75,  # 4:45 PM\n        'end': 19.0,     # 7:00 PM\n        'duration': 1.25 # 75 minutes\n    },\n    'Sarah': {\n        'location': 'Pacific Heights',\n        'start': 17.5,   # 5:30 PM\n        'end': 18.25,    # 6:15 PM\n        'duration': 0.75 # 45 minutes\n    },\n    'Amanda': {\n        'location': 'The Castro',\n        'start': 20.0,   # 8:00 PM\n        'end': 21.25,    # 9:15 PM\n        'duration': 1.0 # 60 minutes\n    },\n    'Nancy': {\n        'location': 'Nob Hill',\n        'start': 9.75,   # 9:45 AM\n        'end': 13.0,     # 1:00 PM\n        'duration': 0.75 # 45 minutes\n    },\n    'Rebecca': {\n        'location': 'Sunset District',\n        'start': 8.75,   # 8:45 AM\n        'end': 15.0,     # 3:00 PM\n        'duration': 1.25 # 75 minutes\n    }\n}\n\ndef time_to_float(time_str):\n    hours, minutes = map(int, time_str.split(':'))\n    return hours + minutes / 60.0\n\ndef float_to_time(time_float):\n    hours = int(time_float)\n    minutes = int((time_float - hours) * 60)\n    return f\"{hours}:{minutes:02d}\"\n\ndef get_travel_time(from_loc, to_loc):\n    return travel_times.get(from_loc, {}).get(to_loc, float('inf')) / 60.0\n\ndef is_schedule_valid(schedule):\n    current_time = 9.0  # Start at Union Square at 9:00 AM\n    current_location = 'Union Square'\n    \n    for entry in schedule:\n        # Travel to the location\n        travel_time = get_travel_time(current_location, entry['location'])\n        arrival_time = current_time + travel_time\n        \n        # Check if we arrive before the meeting window closes\n        friend = friends[entry['person']]\n        latest_start = friend['end'] - entry['duration']\n        \n        if arrival_time > latest_start:\n            return False\n        \n        # Start the meeting as soon as possible after arrival\n        start_time = max(arrival_time, friend['start'])\n        end_time = start_time + entry['duration']\n        \n        if end_time > friend['end']:\n            return False\n        \n        current_time = end_time\n        current_location = entry['location']\n    \n    return True\n\ndef calculate_total_meeting_time(schedule):\n    total = 0\n    for entry in schedule:\n        total += entry['duration']\n    return total\n\ndef generate_possible_schedules():\n    friend_names = list(friends.keys())\n    # We'll try permutations of all friends, but limit to reasonable length for performance\n    # In reality, we'd need a more sophisticated approach for larger problems\n    for perm in permutations(friend_names, min(5, len(friend_names))):\n        schedule = []\n        for name in perm:\n            schedule.append({\n                'person': name,\n                'location': friends[name]['location'],\n                'duration': friends[name]['duration']\n            })\n        if is_schedule_valid(schedule):\n            yield schedule\n\ndef find_best_schedule():\n    best_schedule = None\n    best_time = 0\n    \n    for schedule in generate_possible_schedules():\n        total_time = calculate_total_meeting_time(schedule)\n        if total_time > best_time:\n            best_time = total_time\n            best_schedule = schedule\n    \n    return best_schedule\n\ndef build_itinerary(schedule):\n    if not schedule:\n        return {\"itinerary\": []}\n    \n    itinerary = []\n    current_time = 9.0  # Start at Union Square at 9:00 AM\n    current_location = 'Union Square'\n    \n    for entry in schedule:\n        # Travel to the location\n        travel_time = get_travel_time(current_location, entry['location'])\n        arrival_time = current_time + travel_time\n        \n        # Calculate meeting times\n        friend = friends[entry['person']]\n        start_time = max(arrival_time, friend['start'])\n        end_time = start_time + entry['duration']\n        \n        # Add travel and meeting to itinerary\n        if arrival_time < start_time:\n            itinerary.append({\n                \"action\": \"travel\",\n                \"from\": current_location,\n                \"to\": entry['location'],\n                \"start_time\": float_to_time(current_time),\n                \"end_time\": float_to_time(arrival_time)\n            })\n            current_time = arrival_time\n        \n        itinerary.append({\n            \"action\": \"meet\",\n            \"location\": entry['location'],\n            \"person\": entry['person'],\n            \"start_time\": float_to_time(start_time),\n            \"end_time\": float_to_time(end_time)\n        })\n        \n        current_time = end_time\n        current_location = entry['location']\n    \n    return {\"itinerary\": itinerary}\n\nbest_schedule = find_best_schedule()\nresult = build_itinerary(best_schedule)\nprint(json.dumps(result, indent=2))\n```",
            "count": "meeting_planning_example_940"
        }
    ]
}