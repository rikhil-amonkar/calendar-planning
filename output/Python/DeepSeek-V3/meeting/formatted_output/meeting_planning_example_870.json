{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Alamo Square",
                        "person": "Paul",
                        "start_time": "21:00",
                        "end_time": "21:15"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Linda",
                        "start_time": "21:30",
                        "end_time": "22:00"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Financial District",
                        "person": "Carol",
                        "start_time": "10:15",
                        "end_time": "11:15"
                    },
                    {
                        "action": "meet",
                        "location": "Richmond District",
                        "person": "Kimberly",
                        "start_time": "14:15",
                        "end_time": "14:45"
                    },
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Kenneth",
                        "start_time": "15:01",
                        "end_time": "15:31"
                    },
                    {
                        "action": "meet",
                        "location": "Presidio",
                        "person": "Brian",
                        "start_time": "15:51",
                        "end_time": "17:06"
                    },
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Sandra",
                        "start_time": "17:24",
                        "end_time": "18:24"
                    },
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Laura",
                        "start_time": "18:37",
                        "end_time": "19:07"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Karen",
                        "start_time": "19:22",
                        "end_time": "20:37"
                    },
                    {
                        "action": "meet",
                        "location": "Alamo Square",
                        "person": "Paul",
                        "start_time": "21:00",
                        "end_time": "21:15"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Linda",
                        "start_time": "21:30",
                        "end_time": "22:00"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\nfrom itertools import permutations\n\ndef time_to_minutes(time_str):\n    h, m = map(int, time_str.split(':'))\n    return h * 60 + m\n\ndef minutes_to_time(minutes):\n    h = minutes // 60\n    m = minutes % 60\n    return f\"{h}:{m:02d}\"\n\n# Input data\nfriends = {\n    \"Linda\": {\"location\": \"Marina District\", \"start\": \"18:00\", \"end\": \"22:00\", \"duration\": 30},\n    \"Kenneth\": {\"location\": \"The Castro\", \"start\": \"14:45\", \"end\": \"16:15\", \"duration\": 30},\n    \"Kimberly\": {\"location\": \"Richmond District\", \"start\": \"14:15\", \"end\": \"22:00\", \"duration\": 30},\n    \"Paul\": {\"location\": \"Alamo Square\", \"start\": \"21:00\", \"end\": \"21:30\", \"duration\": 15},\n    \"Carol\": {\"location\": \"Financial District\", \"start\": \"10:15\", \"end\": \"12:00\", \"duration\": 60},\n    \"Brian\": {\"location\": \"Presidio\", \"start\": \"10:00\", \"end\": \"21:30\", \"duration\": 75},\n    \"Laura\": {\"location\": \"Mission District\", \"start\": \"16:15\", \"end\": \"20:30\", \"duration\": 30},\n    \"Sandra\": {\"location\": \"Nob Hill\", \"start\": \"9:15\", \"end\": \"18:30\", \"duration\": 60},\n    \"Karen\": {\"location\": \"Russian Hill\", \"start\": \"18:30\", \"end\": \"22:00\", \"duration\": 75}\n}\n\ntravel_times = {\n    \"Pacific Heights\": {\n        \"Marina District\": 6, \"The Castro\": 16, \"Richmond District\": 12, \"Alamo Square\": 10,\n        \"Financial District\": 13, \"Presidio\": 11, \"Mission District\": 15, \"Nob Hill\": 8, \"Russian Hill\": 7\n    },\n    \"Marina District\": {\n        \"Pacific Heights\": 7, \"The Castro\": 22, \"Richmond District\": 11, \"Alamo Square\": 15,\n        \"Financial District\": 17, \"Presidio\": 10, \"Mission District\": 20, \"Nob Hill\": 12, \"Russian Hill\": 8\n    },\n    \"The Castro\": {\n        \"Pacific Heights\": 16, \"Marina District\": 21, \"Richmond District\": 16, \"Alamo Square\": 8,\n        \"Financial District\": 21, \"Presidio\": 20, \"Mission District\": 7, \"Nob Hill\": 16, \"Russian Hill\": 18\n    },\n    \"Richmond District\": {\n        \"Pacific Heights\": 10, \"Marina District\": 9, \"The Castro\": 16, \"Alamo Square\": 13,\n        \"Financial District\": 22, \"Presidio\": 7, \"Mission District\": 20, \"Nob Hill\": 17, \"Russian Hill\": 13\n    },\n    \"Alamo Square\": {\n        \"Pacific Heights\": 10, \"Marina District\": 15, \"The Castro\": 8, \"Richmond District\": 11,\n        \"Financial District\": 17, \"Presidio\": 17, \"Mission District\": 10, \"Nob Hill\": 11, \"Russian Hill\": 13\n    },\n    \"Financial District\": {\n        \"Pacific Heights\": 13, \"Marina District\": 15, \"The Castro\": 20, \"Richmond District\": 21,\n        \"Alamo Square\": 17, \"Presidio\": 22, \"Mission District\": 17, \"Nob Hill\": 8, \"Russian Hill\": 11\n    },\n    \"Presidio\": {\n        \"Pacific Heights\": 11, \"Marina District\": 11, \"The Castro\": 21, \"Richmond District\": 7,\n        \"Alamo Square\": 19, \"Financial District\": 23, \"Mission District\": 26, \"Nob Hill\": 18, \"Russian Hill\": 14\n    },\n    \"Mission District\": {\n        \"Pacific Heights\": 16, \"Marina District\": 19, \"The Castro\": 7, \"Richmond District\": 20,\n        \"Alamo Square\": 11, \"Financial District\": 15, \"Presidio\": 25, \"Nob Hill\": 12, \"Russian Hill\": 15\n    },\n    \"Nob Hill\": {\n        \"Pacific Heights\": 8, \"Marina District\": 11, \"The Castro\": 17, \"Richmond District\": 14,\n        \"Alamo Square\": 11, \"Financial District\": 9, \"Presidio\": 17, \"Mission District\": 13, \"Russian Hill\": 5\n    },\n    \"Russian Hill\": {\n        \"Pacific Heights\": 7, \"Marina District\": 7, \"The Castro\": 21, \"Richmond District\": 14,\n        \"Alamo Square\": 15, \"Financial District\": 11, \"Presidio\": 14, \"Mission District\": 16, \"Nob Hill\": 5\n    }\n}\n\ncurrent_location = \"Pacific Heights\"\ncurrent_time = time_to_minutes(\"9:00\")\nitinerary = []\n\n# Helper function to get travel time\ndef get_travel_time(from_loc, to_loc):\n    if from_loc == to_loc:\n        return 0\n    try:\n        return travel_times[from_loc][to_loc]\n    except KeyError:\n        return travel_times[to_loc][from_loc]\n\n# Function to check if a meeting is possible\ndef can_meet(person, start_time, end_time):\n    friend = friends[person]\n    friend_start = time_to_minutes(friend[\"start\"])\n    friend_end = time_to_minutes(friend[\"end\"])\n    duration = friend[\"duration\"]\n    \n    # Check if meeting fits in friend's availability\n    meeting_start = max(start_time, friend_start)\n    meeting_end = min(end_time, friend_end)\n    \n    if meeting_end - meeting_start >= duration:\n        return True, meeting_start, meeting_start + duration\n    return False, 0, 0\n\n# Prioritize friends with tighter time windows first\npriority_order = [\"Paul\", \"Carol\", \"Kenneth\", \"Laura\", \"Linda\", \"Karen\", \"Brian\", \"Kimberly\", \"Sandra\"]\n\nscheduled = set()\n\nfor person in priority_order:\n    if person in scheduled:\n        continue\n        \n    friend = friends[person]\n    location = friend[\"location\"]\n    travel_time = get_travel_time(current_location, location)\n    \n    # Calculate possible meeting times\n    possible_start = current_time + travel_time\n    possible_end = time_to_minutes(friend[\"end\"])\n    \n    can_meet_flag, meeting_start, meeting_end = can_meet(person, possible_start, possible_end)\n    \n    if can_meet_flag:\n        # Schedule the meeting\n        itinerary.append({\n            \"action\": \"meet\",\n            \"location\": location,\n            \"person\": person,\n            \"start_time\": minutes_to_time(meeting_start),\n            \"end_time\": minutes_to_time(meeting_end)\n        })\n        scheduled.add(person)\n        current_location = location\n        current_time = meeting_end\n\n# Output the itinerary\noutput = {\n    \"itinerary\": itinerary\n}\n\nprint(json.dumps(output, indent=2))\n```",
            "count": "meeting_planning_example_870"
        }
    ]
}