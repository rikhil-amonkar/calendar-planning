{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "North Beach",
                        "person": "Sandra",
                        "start_time": "10:00",
                        "end_time": "10:15"
                    },
                    {
                        "action": "meet",
                        "location": "Union Square",
                        "person": "William",
                        "start_time": "10:45",
                        "end_time": "11:30"
                    },
                    {
                        "action": "meet",
                        "location": "Financial District",
                        "person": "Carol",
                        "start_time": "11:45",
                        "end_time": "12:45"
                    },
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Elizabeth",
                        "start_time": "12:53",
                        "end_time": "14:38"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Anthony",
                        "start_time": "14:55",
                        "end_time": "16:10"
                    },
                    {
                        "action": "meet",
                        "location": "Richmond District",
                        "person": "Stephanie",
                        "start_time": "16:17",
                        "end_time": "17:32"
                    },
                    {
                        "action": "meet",
                        "location": "Embarcadero",
                        "person": "Barbara",
                        "start_time": "19:15",
                        "end_time": "20:30"
                    },
                    {
                        "action": "meet",
                        "location": "Presidio",
                        "person": "Kenneth",
                        "start_time": "21:15",
                        "end_time": "22:00"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Union Square",
                        "person": "William",
                        "start_time": "10:45",
                        "end_time": "11:30"
                    },
                    {
                        "action": "meet",
                        "location": "North Beach",
                        "person": "Sandra",
                        "start_time": "11:40",
                        "end_time": "11:55"
                    },
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Elizabeth",
                        "start_time": "12:15",
                        "end_time": "14:00"
                    },
                    {
                        "action": "meet",
                        "location": "Financial District",
                        "person": "Carol",
                        "start_time": "14:09",
                        "end_time": "15:09"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Anthony",
                        "start_time": "15:32",
                        "end_time": "16:47"
                    },
                    {
                        "action": "meet",
                        "location": "Richmond District",
                        "person": "Stephanie",
                        "start_time": "16:54",
                        "end_time": "18:09"
                    },
                    {
                        "action": "meet",
                        "location": "Embarcadero",
                        "person": "Barbara",
                        "start_time": "19:15",
                        "end_time": "20:30"
                    },
                    {
                        "action": "meet",
                        "location": "Presidio",
                        "person": "Kenneth",
                        "start_time": "21:15",
                        "end_time": "22:00"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\nfrom itertools import permutations\n\n# Travel times dictionary (from_location, to_location) -> minutes\ntravel_times = {\n    ('Marina District', 'Richmond District'): 11,\n    ('Marina District', 'Union Square'): 16,\n    ('Marina District', 'Nob Hill'): 12,\n    ('Marina District', 'Fisherman\\'s Wharf'): 10,\n    ('Marina District', 'Golden Gate Park'): 18,\n    ('Marina District', 'Embarcadero'): 14,\n    ('Marina District', 'Financial District'): 17,\n    ('Marina District', 'North Beach'): 11,\n    ('Marina District', 'Presidio'): 10,\n    ('Richmond District', 'Marina District'): 9,\n    ('Richmond District', 'Union Square'): 21,\n    ('Richmond District', 'Nob Hill'): 17,\n    ('Richmond District', 'Fisherman\\'s Wharf'): 18,\n    ('Richmond District', 'Golden Gate Park'): 9,\n    ('Richmond District', 'Embarcadero'): 19,\n    ('Richmond District', 'Financial District'): 22,\n    ('Richmond District', 'North Beach'): 17,\n    ('Richmond District', 'Presidio'): 7,\n    ('Union Square', 'Marina District'): 18,\n    ('Union Square', 'Richmond District'): 20,\n    ('Union Square', 'Nob Hill'): 9,\n    ('Union Square', 'Fisherman\\'s Wharf'): 15,\n    ('Union Square', 'Golden Gate Park'): 22,\n    ('Union Square', 'Embarcadero'): 11,\n    ('Union Square', 'Financial District'): 9,\n    ('Union Square', 'North Beach'): 10,\n    ('Union Square', 'Presidio'): 24,\n    ('Nob Hill', 'Marina District'): 11,\n    ('Nob Hill', 'Richmond District'): 14,\n    ('Nob Hill', 'Union Square'): 7,\n    ('Nob Hill', 'Fisherman\\'s Wharf'): 10,\n    ('Nob Hill', 'Golden Gate Park'): 17,\n    ('Nob Hill', 'Embarcadero'): 9,\n    ('Nob Hill', 'Financial District'): 9,\n    ('Nob Hill', 'North Beach'): 8,\n    ('Nob Hill', 'Presidio'): 17,\n    ('Fisherman\\'s Wharf', 'Marina District'): 9,\n    ('Fisherman\\'s Wharf', 'Richmond District'): 18,\n    ('Fisherman\\'s Wharf', 'Union Square'): 13,\n    ('Fisherman\\'s Wharf', 'Nob Hill'): 11,\n    ('Fisherman\\'s Wharf', 'Golden Gate Park'): 25,\n    ('Fisherman\\'s Wharf', 'Embarcadero'): 8,\n    ('Fisherman\\'s Wharf', 'Financial District'): 11,\n    ('Fisherman\\'s Wharf', 'North Beach'): 6,\n    ('Fisherman\\'s Wharf', 'Presidio'): 17,\n    ('Golden Gate Park', 'Marina District'): 16,\n    ('Golden Gate Park', 'Richmond District'): 7,\n    ('Golden Gate Park', 'Union Square'): 22,\n    ('Golden Gate Park', 'Nob Hill'): 20,\n    ('Golden Gate Park', 'Fisherman\\'s Wharf'): 24,\n    ('Golden Gate Park', 'Embarcadero'): 25,\n    ('Golden Gate Park', 'Financial District'): 26,\n    ('Golden Gate Park', 'North Beach'): 23,\n    ('Golden Gate Park', 'Presidio'): 11,\n    ('Embarcadero', 'Marina District'): 12,\n    ('Embarcadero', 'Richmond District'): 21,\n    ('Embarcadero', 'Union Square'): 10,\n    ('Embarcadero', 'Nob Hill'): 10,\n    ('Embarcadero', 'Fisherman\\'s Wharf'): 6,\n    ('Embarcadero', 'Golden Gate Park'): 25,\n    ('Embarcadero', 'Financial District'): 5,\n    ('Embarcadero', 'North Beach'): 5,\n    ('Embarcadero', 'Presidio'): 20,\n    ('Financial District', 'Marina District'): 15,\n    ('Financial District', 'Richmond District'): 21,\n    ('Financial District', 'Union Square'): 9,\n    ('Financial District', 'Nob Hill'): 8,\n    ('Financial District', 'Fisherman\\'s Wharf'): 10,\n    ('Financial District', 'Golden Gate Park'): 23,\n    ('Financial District', 'Embarcadero'): 4,\n    ('Financial District', 'North Beach'): 7,\n    ('Financial District', 'Presidio'): 22,\n    ('North Beach', 'Marina District'): 9,\n    ('North Beach', 'Richmond District'): 18,\n    ('North Beach', 'Union Square'): 7,\n    ('North Beach', 'Nob Hill'): 7,\n    ('North Beach', 'Fisherman\\'s Wharf'): 5,\n    ('North Beach', 'Golden Gate Park'): 22,\n    ('North Beach', 'Embarcadero'): 6,\n    ('North Beach', 'Financial District'): 8,\n    ('North Beach', 'Presidio'): 17,\n    ('Presidio', 'Marina District'): 11,\n    ('Presidio', 'Richmond District'): 7,\n    ('Presidio', 'Union Square'): 22,\n    ('Presidio', 'Nob Hill'): 18,\n    ('Presidio', 'Fisherman\\'s Wharf'): 19,\n    ('Presidio', 'Golden Gate Park'): 12,\n    ('Presidio', 'Embarcadero'): 20,\n    ('Presidio', 'Financial District'): 23,\n    ('Presidio', 'North Beach'): 18\n}\n\n# Friend data: name -> (location, available_start, available_end, min_duration)\nfriends = {\n    'Stephanie': ('Richmond District', '16:15', '21:30', 75),\n    'William': ('Union Square', '10:45', '17:30', 45),\n    'Elizabeth': ('Nob Hill', '12:15', '15:00', 105),\n    'Joseph': ('Fisherman\\'s Wharf', '12:45', '14:00', 75),\n    'Anthony': ('Golden Gate Park', '13:00', '20:30', 75),\n    'Barbara': ('Embarcadero', '19:15', '20:30', 75),\n    'Carol': ('Financial District', '11:45', '16:15', 60),\n    'Sandra': ('North Beach', '10:00', '12:30', 15),\n    'Kenneth': ('Presidio', '21:15', '22:15', 45)\n}\n\ndef time_to_minutes(time_str):\n    h, m = map(int, time_str.split(':'))\n    return h * 60 + m\n\ndef minutes_to_time(minutes):\n    h = minutes // 60\n    m = minutes % 60\n    return f\"{h}:{m:02d}\"\n\ndef calculate_schedule():\n    current_location = 'Marina District'\n    current_time = time_to_minutes('9:00')\n    itinerary = []\n    remaining_friends = set(friends.keys())\n    \n    # We'll try to meet friends in order of their availability end times\n    sorted_friends = sorted(friends.items(), key=lambda x: time_to_minutes(x[1][1]))\n    \n    for name, (location, avail_start, avail_end, min_duration) in sorted_friends:\n        if name not in remaining_friends:\n            continue\n            \n        travel_time = travel_times.get((current_location, location), float('inf'))\n        arrival_time = current_time + travel_time\n        avail_start_min = time_to_minutes(avail_start)\n        avail_end_min = time_to_minutes(avail_end)\n        \n        # Can we meet this friend?\n        meeting_start = max(arrival_time, avail_start_min)\n        meeting_end = meeting_start + min_duration\n        \n        if meeting_end <= avail_end_min:\n            # Add to itinerary\n            itinerary.append({\n                \"action\": \"meet\",\n                \"location\": location,\n                \"person\": name,\n                \"start_time\": minutes_to_time(meeting_start),\n                \"end_time\": minutes_to_time(meeting_end)\n            })\n            current_location = location\n            current_time = meeting_end\n            remaining_friends.remove(name)\n    \n    # Try to fit remaining friends if possible\n    for name in list(remaining_friends):\n        location, avail_start, avail_end, min_duration = friends[name]\n        travel_time = travel_times.get((current_location, location), float('inf'))\n        arrival_time = current_time + travel_time\n        avail_start_min = time_to_minutes(avail_start)\n        avail_end_min = time_to_minutes(avail_end)\n        \n        meeting_start = max(arrival_time, avail_start_min)\n        meeting_end = meeting_start + min_duration\n        \n        if meeting_end <= avail_end_min:\n            itinerary.append({\n                \"action\": \"meet\",\n                \"location\": location,\n                \"person\": name,\n                \"start_time\": minutes_to_time(meeting_start),\n                \"end_time\": minutes_to_time(meeting_end)\n            })\n            current_location = location\n            current_time = meeting_end\n            remaining_friends.remove(name)\n    \n    return itinerary\n\ndef main():\n    itinerary = calculate_schedule()\n    result = {\n        \"itinerary\": itinerary\n    }\n    print(json.dumps(result, indent=2))\n\nif __name__ == \"__main__\":\n    main()\n```",
            "count": "meeting_planning_example_828"
        }
    ]
}