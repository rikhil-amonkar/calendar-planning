{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Embarcadero",
                        "person": "Joshua",
                        "start_time": "9:45",
                        "end_time": "11:30"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Jeffrey",
                        "start_time": "11:51",
                        "end_time": "13:06"
                    },
                    {
                        "action": "meet",
                        "location": "Union Square",
                        "person": "Charles",
                        "start_time": "13:24",
                        "end_time": "15:24"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Matthew",
                        "start_time": "15:46",
                        "end_time": "16:31"
                    },
                    {
                        "action": "meet",
                        "location": "Haight-Ashbury",
                        "person": "Paul",
                        "start_time": "19:15",
                        "end_time": "19:30"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "Joseph",
                        "start_time": "9:15",
                        "end_time": "10:15"
                    },
                    {
                        "action": "meet",
                        "location": "Financial District",
                        "person": "Carol",
                        "start_time": "10:45",
                        "end_time": "11:00"
                    },
                    {
                        "action": "meet",
                        "location": "Embarcadero",
                        "person": "Joshua",
                        "start_time": "11:04",
                        "end_time": "12:49"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Jeffrey",
                        "start_time": "13:10",
                        "end_time": "14:25"
                    },
                    {
                        "action": "meet",
                        "location": "Union Square",
                        "person": "Charles",
                        "start_time": "14:43",
                        "end_time": "16:43"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Matthew",
                        "start_time": "17:05",
                        "end_time": "17:50"
                    },
                    {
                        "action": "meet",
                        "location": "Haight-Ashbury",
                        "person": "Paul",
                        "start_time": "19:15",
                        "end_time": "19:30"
                    },
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Rebecca",
                        "start_time": "19:41",
                        "end_time": "20:26"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\nfrom itertools import permutations\n\n# Travel times dictionary (from -> to -> minutes)\ntravel_times = {\n    'Marina District': {\n        'Embarcadero': 14,\n        'Bayview': 27,\n        'Union Square': 16,\n        'Chinatown': 15,\n        'Sunset District': 19,\n        'Golden Gate Park': 18,\n        'Financial District': 17,\n        'Haight-Ashbury': 16,\n        'Mission District': 20\n    },\n    'Embarcadero': {\n        'Marina District': 12,\n        'Bayview': 21,\n        'Union Square': 10,\n        'Chinatown': 7,\n        'Sunset District': 30,\n        'Golden Gate Park': 25,\n        'Financial District': 5,\n        'Haight-Ashbury': 21,\n        'Mission District': 20\n    },\n    'Bayview': {\n        'Marina District': 27,\n        'Embarcadero': 19,\n        'Union Square': 18,\n        'Chinatown': 19,\n        'Sunset District': 23,\n        'Golden Gate Park': 22,\n        'Financial District': 19,\n        'Haight-Ashbury': 19,\n        'Mission District': 13\n    },\n    'Union Square': {\n        'Marina District': 18,\n        'Embarcadero': 11,\n        'Bayview': 15,\n        'Chinatown': 7,\n        'Sunset District': 27,\n        'Golden Gate Park': 22,\n        'Financial District': 9,\n        'Haight-Ashbury': 18,\n        'Mission District': 14\n    },\n    'Chinatown': {\n        'Marina District': 12,\n        'Embarcadero': 5,\n        'Bayview': 20,\n        'Union Square': 7,\n        'Sunset District': 29,\n        'Golden Gate Park': 23,\n        'Financial District': 5,\n        'Haight-Ashbury': 19,\n        'Mission District': 17\n    },\n    'Sunset District': {\n        'Marina District': 21,\n        'Embarcadero': 30,\n        'Bayview': 22,\n        'Union Square': 30,\n        'Chinatown': 30,\n        'Golden Gate Park': 11,\n        'Financial District': 30,\n        'Haight-Ashbury': 15,\n        'Mission District': 25\n    },\n    'Golden Gate Park': {\n        'Marina District': 16,\n        'Embarcadero': 25,\n        'Bayview': 23,\n        'Union Square': 22,\n        'Chinatown': 23,\n        'Sunset District': 10,\n        'Financial District': 26,\n        'Haight-Ashbury': 7,\n        'Mission District': 17\n    },\n    'Financial District': {\n        'Marina District': 15,\n        'Embarcadero': 4,\n        'Bayview': 19,\n        'Union Square': 9,\n        'Chinatown': 5,\n        'Sunset District': 30,\n        'Golden Gate Park': 23,\n        'Haight-Ashbury': 19,\n        'Mission District': 17\n    },\n    'Haight-Ashbury': {\n        'Marina District': 17,\n        'Embarcadero': 20,\n        'Bayview': 18,\n        'Union Square': 19,\n        'Chinatown': 19,\n        'Sunset District': 15,\n        'Golden Gate Park': 7,\n        'Financial District': 21,\n        'Mission District': 11\n    },\n    'Mission District': {\n        'Marina District': 19,\n        'Embarcadero': 19,\n        'Bayview': 14,\n        'Union Square': 15,\n        'Chinatown': 16,\n        'Sunset District': 24,\n        'Golden Gate Park': 17,\n        'Financial District': 15,\n        'Haight-Ashbury': 12\n    }\n}\n\n# Friend constraints\nfriends = [\n    {'name': 'Joshua', 'location': 'Embarcadero', 'start': '9:45', 'end': '18:00', 'duration': 105},\n    {'name': 'Jeffrey', 'location': 'Bayview', 'start': '9:45', 'end': '20:15', 'duration': 75},\n    {'name': 'Charles', 'location': 'Union Square', 'start': '10:45', 'end': '20:15', 'duration': 120},\n    {'name': 'Joseph', 'location': 'Chinatown', 'start': '7:00', 'end': '15:30', 'duration': 60},\n    {'name': 'Elizabeth', 'location': 'Sunset District', 'start': '9:00', 'end': '9:45', 'duration': 45},\n    {'name': 'Matthew', 'location': 'Golden Gate Park', 'start': '11:00', 'end': '19:30', 'duration': 45},\n    {'name': 'Carol', 'location': 'Financial District', 'start': '10:45', 'end': '11:15', 'duration': 15},\n    {'name': 'Paul', 'location': 'Haight-Ashbury', 'start': '19:15', 'end': '20:30', 'duration': 15},\n    {'name': 'Rebecca', 'location': 'Mission District', 'start': '17:00', 'end': '21:45', 'duration': 45}\n]\n\ndef time_to_minutes(time_str):\n    h, m = map(int, time_str.split(':'))\n    return h * 60 + m\n\ndef minutes_to_time(minutes):\n    h = minutes // 60\n    m = minutes % 60\n    return f\"{h}:{m:02d}\"\n\ndef can_schedule(friend, start_time, end_time):\n    friend_start = time_to_minutes(friend['start'])\n    friend_end = time_to_minutes(friend['end'])\n    return start_time >= friend_start and end_time <= friend_end\n\ndef find_best_schedule():\n    best_schedule = []\n    max_meetings = 0\n    \n    # Try all possible orders of meeting friends (limited to 5 for performance)\n    for friend_order in permutations(friends, min(5, len(friends))):\n        current_location = 'Marina District'\n        current_time = time_to_minutes('9:00')\n        schedule = []\n        meetings = 0\n        \n        for friend in friend_order:\n            # Calculate travel time\n            travel_time = travel_times[current_location][friend['location']]\n            arrival_time = current_time + travel_time\n            \n            # Calculate possible meeting window\n            meeting_start = max(arrival_time, time_to_minutes(friend['start']))\n            meeting_end = meeting_start + friend['duration']\n            \n            if can_schedule(friend, meeting_start, meeting_end):\n                # Add to schedule\n                schedule.append({\n                    'action': 'meet',\n                    'location': friend['location'],\n                    'person': friend['name'],\n                    'start_time': minutes_to_time(meeting_start),\n                    'end_time': minutes_to_time(meeting_end)\n                })\n                meetings += 1\n                current_location = friend['location']\n                current_time = meeting_end\n        \n        if meetings > max_meetings:\n            max_meetings = meetings\n            best_schedule = schedule\n    \n    return best_schedule\n\ndef main():\n    schedule = find_best_schedule()\n    result = {'itinerary': schedule}\n    print(json.dumps(result, indent=2))\n\nif __name__ == '__main__':\n    main()\n```",
            "count": "meeting_planning_example_813"
        }
    ]
}