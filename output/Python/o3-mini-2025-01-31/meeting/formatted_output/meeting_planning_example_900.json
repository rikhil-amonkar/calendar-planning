{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Emily",
                        "start_time": "11:15",
                        "end_time": "11:30"
                    },
                    {
                        "action": "meet",
                        "location": "Haight-Ashbury",
                        "person": "Karen",
                        "start_time": "11:45",
                        "end_time": "12:15"
                    },
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Stephanie",
                        "start_time": "13:00",
                        "end_time": "14:15"
                    },
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "James",
                        "start_time": "14:31",
                        "end_time": "16:31"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Steven",
                        "start_time": "16:38",
                        "end_time": "17:08"
                    },
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Matthew",
                        "start_time": "17:29",
                        "end_time": "18:14"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "William",
                        "start_time": "18:33",
                        "end_time": "20:03"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Brian",
                        "start_time": "20:30",
                        "end_time": "21:00"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Emily",
                        "start_time": "11:15",
                        "end_time": "11:30"
                    },
                    {
                        "action": "meet",
                        "location": "Haight-Ashbury",
                        "person": "Karen",
                        "start_time": "11:45",
                        "end_time": "12:15"
                    },
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Stephanie",
                        "start_time": "13:00",
                        "end_time": "14:15"
                    },
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "James",
                        "start_time": "14:31",
                        "end_time": "16:31"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Steven",
                        "start_time": "16:38",
                        "end_time": "17:08"
                    },
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Matthew",
                        "start_time": "17:29",
                        "end_time": "18:14"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "William",
                        "start_time": "18:33",
                        "end_time": "20:03"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Brian",
                        "start_time": "20:30",
                        "end_time": "21:00"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "SOLUTION:\nimport json\n\n# Define helper functions to convert between time formats (minutes from midnight to H:MM string)\ndef minutes_to_time_str(minutes):\n    hours = minutes // 60\n    mins = minutes % 60\n    return f\"{hours}:{mins:02d}\"\n\n# Define the travel times dictionary in both directions.\n# We'll store as travel_times[from_location][to_location] = minutes\ntravel_times = {\n    \"Richmond District\": {\n        \"The Castro\": 16, \"Nob Hill\": 17, \"Marina District\": 9, \"Pacific Heights\": 10,\n        \"Haight-Ashbury\": 10, \"Mission District\": 20, \"Chinatown\": 20, \"Russian Hill\": 13,\n        \"Alamo Square\": 13, \"Bayview\": 27\n    },\n    \"The Castro\": {\n        \"Richmond District\": 16, \"Nob Hill\": 16, \"Marina District\": 21, \"Pacific Heights\": 16,\n        \"Haight-Ashbury\": 6, \"Mission District\": 7, \"Chinatown\": 22, \"Russian Hill\": 18,\n        \"Alamo Square\": 8, \"Bayview\": 19\n    },\n    \"Nob Hill\": {\n        \"Richmond District\": 14, \"The Castro\": 17, \"Marina District\": 11, \"Pacific Heights\": 8,\n        \"Haight-Ashbury\": 13, \"Mission District\": 13, \"Chinatown\": 6, \"Russian Hill\": 5,\n        \"Alamo Square\": 11, \"Bayview\": 19\n    },\n    \"Marina District\": {\n        \"Richmond District\": 11, \"The Castro\": 22, \"Nob Hill\": 12, \"Pacific Heights\": 7,\n        \"Haight-Ashbury\": 16, \"Mission District\": 20, \"Chinatown\": 15, \"Russian Hill\": 8,\n        \"Alamo Square\": 15, \"Bayview\": 27\n    },\n    \"Pacific Heights\": {\n        \"Richmond District\": 12, \"The Castro\": 16, \"Nob Hill\": 8, \"Marina District\": 6,\n        \"Haight-Ashbury\": 11, \"Mission District\": 15, \"Chinatown\": 11, \"Russian Hill\": 7,\n        \"Alamo Square\": 10, \"Bayview\": 22\n    },\n    \"Haight-Ashbury\": {\n        \"Richmond District\": 10, \"The Castro\": 6, \"Nob Hill\": 15, \"Marina District\": 17,\n        \"Pacific Heights\": 12, \"Mission District\": 11, \"Chinatown\": 19, \"Russian Hill\": 17,\n        \"Alamo Square\": 5, \"Bayview\": 18\n    },\n    \"Mission District\": {\n        \"Richmond District\": 20, \"The Castro\": 7, \"Nob Hill\": 12, \"Marina District\": 19,\n        \"Pacific Heights\": 16, \"Haight-Ashbury\": 12, \"Chinatown\": 16, \"Russian Hill\": 15,\n        \"Alamo Square\": 11, \"Bayview\": 14\n    },\n    \"Chinatown\": {\n        \"Richmond District\": 20, \"The Castro\": 22, \"Nob Hill\": 9, \"Marina District\": 12,\n        \"Pacific Heights\": 10, \"Haight-Ashbury\": 19, \"Mission District\": 17, \"Russian Hill\": 7,\n        \"Alamo Square\": 17, \"Bayview\": 20\n    },\n    \"Russian Hill\": {\n        \"Richmond District\": 14, \"The Castro\": 21, \"Nob Hill\": 5, \"Marina District\": 7,\n        \"Pacific Heights\": 7, \"Haight-Ashbury\": 17, \"Mission District\": 16,\n        \"Chinatown\": 9, \"Alamo Square\": 15, \"Bayview\": 23\n    },\n    \"Alamo Square\": {\n        \"Richmond District\": 11, \"The Castro\": 8, \"Nob Hill\": 11, \"Marina District\": 15,\n        \"Pacific Heights\": 10, \"Haight-Ashbury\": 5, \"Mission District\": 10,\n        \"Chinatown\": 15, \"Russian Hill\": 13, \"Bayview\": 16\n    },\n    \"Bayview\": {\n        \"Richmond District\": 25, \"The Castro\": 19, \"Nob Hill\": 20, \"Marina District\": 27,\n        \"Pacific Heights\": 23, \"Haight-Ashbury\": 19, \"Mission District\": 13,\n        \"Chinatown\": 19, \"Russian Hill\": 23, \"Alamo Square\": 16\n    }\n}\n\n# Meeting constraints for each friend.\n# Times will be represented as minutes from midnight.\nmeetings = [\n    {\n        \"person\": \"Matthew\",\n        \"location\": \"The Castro\",\n        \"avail_start\": 16*60 + 30,  # 16:30\n        \"avail_end\": 20*60,         # 20:00\n        \"min_duration\": 45\n    },\n    {\n        \"person\": \"Rebecca\",\n        \"location\": \"Nob Hill\",\n        \"avail_start\": 15*60 + 15,  # 15:15\n        \"avail_end\": 19*60 + 15,    # 19:15\n        \"min_duration\": 105\n    },\n    {\n        \"person\": \"Brian\",\n        \"location\": \"Marina District\",\n        \"avail_start\": 14*60 + 15,  # 14:15\n        \"avail_end\": 22*60,         # 22:00\n        \"min_duration\": 30\n    },\n    {\n        \"person\": \"Emily\",\n        \"location\": \"Pacific Heights\",\n        \"avail_start\": 11*60 + 15,  # 11:15\n        \"avail_end\": 19*60 + 45,    # 19:45\n        \"min_duration\": 15\n    },\n    {\n        \"person\": \"Karen\",\n        \"location\": \"Haight-Ashbury\",\n        \"avail_start\": 11*60 + 45,  # 11:45\n        \"avail_end\": 17*60 + 30,    # 17:30\n        \"min_duration\": 30\n    },\n    {\n        \"person\": \"Stephanie\",\n        \"location\": \"Mission District\",\n        \"avail_start\": 13*60,       # 13:00\n        \"avail_end\": 15*60 + 45,      # 15:45\n        \"min_duration\": 75\n    },\n    {\n        \"person\": \"James\",\n        \"location\": \"Chinatown\",\n        \"avail_start\": 14*60 + 30,   # 14:30\n        \"avail_end\": 19*60,          # 19:00\n        \"min_duration\": 120\n    },\n    {\n        \"person\": \"Steven\",\n        \"location\": \"Russian Hill\",\n        \"avail_start\": 14*60,        # 14:00\n        \"avail_end\": 20*60,          # 20:00\n        \"min_duration\": 30\n    },\n    {\n        \"person\": \"Elizabeth\",\n        \"location\": \"Alamo Square\",\n        \"avail_start\": 13*60,        # 13:00\n        \"avail_end\": 17*60 + 15,       # 17:15\n        \"min_duration\": 120\n    },\n    {\n        \"person\": \"William\",\n        \"location\": \"Bayview\",\n        \"avail_start\": 18*60 + 15,     # 18:15\n        \"avail_end\": 20*60 + 15,       # 20:15\n        \"min_duration\": 90\n    },\n]\n\n# Starting point and time:\nstart_location = \"Richmond District\"\nstart_time = 9 * 60  # 9:00 in minutes\n\n# We'll perform a recursive search (backtracking) to try all orders that can be scheduled feasibly.\n# Our goal is to maximize the number of meetings.\nbest_schedule = []\nbest_count = 0\n\ndef backtrack(current_location, current_time, remaining_meetings, current_schedule):\n    global best_schedule, best_count\n\n    # Update best schedule if current_schedule is better (more meetings scheduled)\n    if len(current_schedule) > best_count:\n        best_count = len(current_schedule)\n        best_schedule = current_schedule.copy()\n    \n    for i, meeting in enumerate(remaining_meetings):\n        dest = meeting[\"location\"]\n        # Get travel time from current_location to dest.\n        if current_location in travel_times and dest in travel_times[current_location]:\n            travel_time = travel_times[current_location][dest]\n        else:\n            # If no route is defined, skip\n            continue\n        \n        arrival_time = current_time + travel_time\n        # The meeting can only start when both you arrive and the friend is available.\n        meeting_start = max(arrival_time, meeting[\"avail_start\"])\n        meeting_end = meeting_start + meeting[\"min_duration\"]\n        \n        # Check if meeting_end fits within friend's available window.\n        if meeting_end > meeting[\"avail_end\"]:\n            continue  # Cannot meet this friend given current schedule\n        \n        # Create a scheduled meeting entry.\n        meeting_entry = {\n            \"action\": \"meet\",\n            \"location\": dest,\n            \"person\": meeting[\"person\"],\n            \"start_time\": minutes_to_time_str(meeting_start),\n            \"end_time\": minutes_to_time_str(meeting_end)\n        }\n        \n        # Prepare the new remaining list without the scheduled meeting.\n        new_remaining = remaining_meetings[:i] + remaining_meetings[i+1:]\n        # Recurse: Now the current location is dest, and time is meeting_end.\n        backtrack(dest, meeting_end, new_remaining, current_schedule + [meeting_entry])\n\n# Start the backtracking with the starting location and time.\nbacktrack(start_location, start_time, meetings, [])\n\n# Prepare the JSON output dictionary. Use the best_schedule found.\noutput = {\"itinerary\": best_schedule}\n\nprint(json.dumps(output, indent=2))\n                    \nif __name__ == \"__main__\":\n    pass",
            "count": "meeting_planning_example_900"
        }
    ]
}