{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Melissa",
                        "start_time": "9:30",
                        "end_time": "10:00"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Matthew",
                        "start_time": "10:19",
                        "end_time": "10:49"
                    },
                    {
                        "action": "meet",
                        "location": "Alamo Square",
                        "person": "Robert",
                        "start_time": "11:15",
                        "end_time": "13:15"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Joseph",
                        "start_time": "13:24",
                        "end_time": "15:09"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Amanda",
                        "start_time": "15:25",
                        "end_time": "17:10"
                    },
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Karen",
                        "start_time": "17:30",
                        "end_time": "19:15"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Nancy",
                        "start_time": "19:31",
                        "end_time": "21:16"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Melissa",
                        "start_time": "9:30",
                        "end_time": "10:00"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Matthew",
                        "start_time": "10:19",
                        "end_time": "10:49"
                    },
                    {
                        "action": "meet",
                        "location": "Alamo Square",
                        "person": "Robert",
                        "start_time": "11:15",
                        "end_time": "13:15"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Joseph",
                        "start_time": "13:24",
                        "end_time": "15:09"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Amanda",
                        "start_time": "15:25",
                        "end_time": "17:10"
                    },
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Karen",
                        "start_time": "17:30",
                        "end_time": "19:15"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Nancy",
                        "start_time": "19:31",
                        "end_time": "21:16"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "SOLUTION:\n#!/usr/bin/env python3\nimport json\nimport copy\n\n# Utility functions to convert time strings \"H:MM\" <-> minutes since midnight\ndef time_to_minutes(t):\n    # t is string like \"9:00\" or \"13:30\"\n    parts = t.split(\":\")\n    return int(parts[0]) * 60 + int(parts[1])\n\ndef minutes_to_time(m):\n    # Format as H:MM with no leading zero on hour.\n    hour = m // 60\n    minute = m % 60\n    return f\"{hour}:{minute:02d}\"\n\n# Define travel times (in minutes) as nested dictionary.\ntravel_times = {\n    \"Presidio\": {\n        \"Marina District\": 11,\n        \"The Castro\": 21,\n        \"Fisherman's Wharf\": 19,\n        \"Bayview\": 31,\n        \"Pacific Heights\": 11,\n        \"Mission District\": 26,\n        \"Alamo Square\": 19,\n        \"Golden Gate Park\": 12\n    },\n    \"Marina District\": {\n        \"Presidio\": 10,\n        \"The Castro\": 22,\n        \"Fisherman's Wharf\": 10,\n        \"Bayview\": 27,\n        \"Pacific Heights\": 7,\n        \"Mission District\": 20,\n        \"Alamo Square\": 15,\n        \"Golden Gate Park\": 18\n    },\n    \"The Castro\": {\n        \"Presidio\": 20,\n        \"Marina District\": 21,\n        \"Fisherman's Wharf\": 24,\n        \"Bayview\": 19,\n        \"Pacific Heights\": 16,\n        \"Mission District\": 7,\n        \"Alamo Square\": 8,\n        \"Golden Gate Park\": 11\n    },\n    \"Fisherman's Wharf\": {\n        \"Presidio\": 17,\n        \"Marina District\": 9,\n        \"The Castro\": 27,\n        \"Bayview\": 26,\n        \"Pacific Heights\": 12,\n        \"Mission District\": 22,\n        \"Alamo Square\": 21,\n        \"Golden Gate Park\": 25\n    },\n    \"Bayview\": {\n        \"Presidio\": 32,\n        \"Marina District\": 27,\n        \"The Castro\": 19,\n        \"Fisherman's Wharf\": 25,\n        \"Pacific Heights\": 23,\n        \"Mission District\": 13,\n        \"Alamo Square\": 16,\n        \"Golden Gate Park\": 22\n    },\n    \"Pacific Heights\": {\n        \"Presidio\": 11,\n        \"Marina District\": 6,\n        \"The Castro\": 16,\n        \"Fisherman's Wharf\": 13,\n        \"Bayview\": 22,\n        \"Mission District\": 15,\n        \"Alamo Square\": 10,\n        \"Golden Gate Park\": 15\n    },\n    \"Mission District\": {\n        \"Presidio\": 25,\n        \"Marina District\": 19,\n        \"The Castro\": 7,\n        \"Fisherman's Wharf\": 22,\n        \"Bayview\": 14,\n        \"Pacific Heights\": 16,\n        \"Alamo Square\": 11,\n        \"Golden Gate Park\": 17\n    },\n    \"Alamo Square\": {\n        \"Presidio\": 17,\n        \"Marina District\": 15,\n        \"The Castro\": 8,\n        \"Fisherman's Wharf\": 19,\n        \"Bayview\": 16,\n        \"Pacific Heights\": 10,\n        \"Mission District\": 10,\n        \"Golden Gate Park\": 9\n    },\n    \"Golden Gate Park\": {\n        \"Presidio\": 11,\n        \"Marina District\": 16,\n        \"The Castro\": 13,\n        \"Fisherman's Wharf\": 24,\n        \"Bayview\": 23,\n        \"Pacific Heights\": 16,\n        \"Mission District\": 17,\n        \"Alamo Square\": 9\n    }\n}\n\n# Meeting constraints for each friend.\n# Each entry: friend: { \"location\": str, \"avail_start\": minutes, \"avail_end\": minutes, \"min_duration\": minutes }\nmeetings = {\n    \"Amanda\": {\n        \"location\": \"Marina District\",\n        \"avail_start\": time_to_minutes(\"14:45\"),  # 2:45 PM\n        \"avail_end\": time_to_minutes(\"19:30\"),    # 7:30 PM\n        \"min_duration\": 105\n    },\n    \"Melissa\": {\n        \"location\": \"The Castro\",\n        \"avail_start\": time_to_minutes(\"9:30\"),\n        \"avail_end\": time_to_minutes(\"17:00\"),\n        \"min_duration\": 30\n    },\n    \"Jeffrey\": {\n        \"location\": \"Fisherman's Wharf\",\n        \"avail_start\": time_to_minutes(\"12:45\"),\n        \"avail_end\": time_to_minutes(\"18:45\"),\n        \"min_duration\": 120\n    },\n    \"Matthew\": {\n        \"location\": \"Bayview\",\n        \"avail_start\": time_to_minutes(\"10:15\"),\n        \"avail_end\": time_to_minutes(\"13:15\"),\n        \"min_duration\": 30\n    },\n    \"Nancy\": {\n        \"location\": \"Pacific Heights\",\n        \"avail_start\": time_to_minutes(\"17:00\"),\n        \"avail_end\": time_to_minutes(\"21:30\"),\n        \"min_duration\": 105\n    },\n    \"Karen\": {\n        \"location\": \"Mission District\",\n        \"avail_start\": time_to_minutes(\"17:30\"),\n        \"avail_end\": time_to_minutes(\"20:30\"),\n        \"min_duration\": 105\n    },\n    \"Robert\": {\n        \"location\": \"Alamo Square\",\n        \"avail_start\": time_to_minutes(\"11:15\"),\n        \"avail_end\": time_to_minutes(\"17:30\"),\n        \"min_duration\": 120\n    },\n    \"Joseph\": {\n        \"location\": \"Golden Gate Park\",\n        \"avail_start\": time_to_minutes(\"8:30\"),\n        \"avail_end\": time_to_minutes(\"21:15\"),\n        \"min_duration\": 105\n    }\n}\n\n# Starting parameters\nstart_location = \"Presidio\"\nstart_time = time_to_minutes(\"9:00\")\n\n# We'll do a DFS search to try all orders in which meetings can be scheduled feasibly.\nbest_itinerary = []\nbest_count = 0\n\ndef dfs(current_location, current_time, visited, itinerary):\n    global best_itinerary, best_count\n    # Update best if current itinerary has more meetings\n    if len(itinerary) > best_count:\n        best_count = len(itinerary)\n        best_itinerary = copy.deepcopy(itinerary)\n    # Try all remaining friends.\n    for friend, info in meetings.items():\n        if friend in visited:\n            continue\n        # Calculate travel time from current_location to friend's meeting location.\n        if current_location not in travel_times or info[\"location\"] not in travel_times[current_location]:\n            continue  # no route defined\n        travel = travel_times[current_location][info[\"location\"]]\n        arrival_time = current_time + travel\n        # The meeting can only start when both you have arrived and the friend is available.\n        meeting_start = max(arrival_time, info[\"avail_start\"])\n        meeting_end = meeting_start + info[\"min_duration\"]\n        # Check if meeting can be completed within friend's available window.\n        if meeting_end > info[\"avail_end\"]:\n            continue  # Cannot meet this friend with required duration.\n        # Proceed with this meeting.\n        visited.add(friend)\n        itinerary.append({\n            \"action\": \"meet\",\n            \"location\": info[\"location\"],\n            \"person\": friend,\n            \"start_time\": minutes_to_time(meeting_start),\n            \"end_time\": minutes_to_time(meeting_end)\n        })\n        dfs(info[\"location\"], meeting_end, visited, itinerary)\n        # Backtrack.\n        itinerary.pop()\n        visited.remove(friend)\n\n# Start DFS from initial state\ndfs(start_location, start_time, set(), [])\n\n# Build the result as JSON-formatted dictionary.\nresult = {\"itinerary\": best_itinerary}\nprint(json.dumps(result, indent=2))\n",
            "count": "meeting_planning_example_715"
        }
    ]
}