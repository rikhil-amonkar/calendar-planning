{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Financial District",
                        "person": "Carol",
                        "start_time": "10:15",
                        "end_time": "11:15"
                    },
                    {
                        "action": "meet",
                        "location": "Richmond District",
                        "person": "Kimberly",
                        "start_time": "14:15",
                        "end_time": "14:45"
                    },
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Kenneth",
                        "start_time": "15:01",
                        "end_time": "15:31"
                    },
                    {
                        "action": "meet",
                        "location": "Presidio",
                        "person": "Brian",
                        "start_time": "15:51",
                        "end_time": "17:06"
                    },
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Sandra",
                        "start_time": "17:24",
                        "end_time": "18:24"
                    },
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Laura",
                        "start_time": "18:37",
                        "end_time": "19:07"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Karen",
                        "start_time": "19:22",
                        "end_time": "20:37"
                    },
                    {
                        "action": "meet",
                        "location": "Alamo Square",
                        "person": "Paul",
                        "start_time": "21:00",
                        "end_time": "21:15"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Linda",
                        "start_time": "21:30",
                        "end_time": "22:00"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Financial District",
                        "person": "Carol",
                        "start_time": "10:15",
                        "end_time": "11:15"
                    },
                    {
                        "action": "meet",
                        "location": "Richmond District",
                        "person": "Kimberly",
                        "start_time": "14:15",
                        "end_time": "14:45"
                    },
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Kenneth",
                        "start_time": "15:01",
                        "end_time": "15:31"
                    },
                    {
                        "action": "meet",
                        "location": "Presidio",
                        "person": "Brian",
                        "start_time": "15:51",
                        "end_time": "17:06"
                    },
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Sandra",
                        "start_time": "17:24",
                        "end_time": "18:24"
                    },
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Laura",
                        "start_time": "18:37",
                        "end_time": "19:07"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Karen",
                        "start_time": "19:22",
                        "end_time": "20:37"
                    },
                    {
                        "action": "meet",
                        "location": "Alamo Square",
                        "person": "Paul",
                        "start_time": "21:00",
                        "end_time": "21:15"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Linda",
                        "start_time": "21:30",
                        "end_time": "22:00"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "SOLUTION:\n#!/usr/bin/env python3\nimport json\n\n# Utility functions for time conversion\ndef minutes_to_time(m):\n    h = m // 60\n    m_remainder = m % 60\n    return f\"{h}:{m_remainder:02d}\"\n\n# Travel times between locations (in minutes)\ntravel_times = {\n    (\"Pacific Heights\", \"Marina District\"): 6,\n    (\"Pacific Heights\", \"The Castro\"): 16,\n    (\"Pacific Heights\", \"Richmond District\"): 12,\n    (\"Pacific Heights\", \"Alamo Square\"): 10,\n    (\"Pacific Heights\", \"Financial District\"): 13,\n    (\"Pacific Heights\", \"Presidio\"): 11,\n    (\"Pacific Heights\", \"Mission District\"): 15,\n    (\"Pacific Heights\", \"Nob Hill\"): 8,\n    (\"Pacific Heights\", \"Russian Hill\"): 7,\n\n    (\"Marina District\", \"Pacific Heights\"): 7,\n    (\"Marina District\", \"The Castro\"): 22,\n    (\"Marina District\", \"Richmond District\"): 11,\n    (\"Marina District\", \"Alamo Square\"): 15,\n    (\"Marina District\", \"Financial District\"): 17,\n    (\"Marina District\", \"Presidio\"): 10,\n    (\"Marina District\", \"Mission District\"): 20,\n    (\"Marina District\", \"Nob Hill\"): 12,\n    (\"Marina District\", \"Russian Hill\"): 8,\n\n    (\"The Castro\", \"Pacific Heights\"): 16,\n    (\"The Castro\", \"Marina District\"): 21,\n    (\"The Castro\", \"Richmond District\"): 16,\n    (\"The Castro\", \"Alamo Square\"): 8,\n    (\"The Castro\", \"Financial District\"): 21,\n    (\"The Castro\", \"Presidio\"): 20,\n    (\"The Castro\", \"Mission District\"): 7,\n    (\"The Castro\", \"Nob Hill\"): 16,\n    (\"The Castro\", \"Russian Hill\"): 18,\n\n    (\"Richmond District\", \"Pacific Heights\"): 10,\n    (\"Richmond District\", \"Marina District\"): 9,\n    (\"Richmond District\", \"The Castro\"): 16,\n    (\"Richmond District\", \"Alamo Square\"): 13,\n    (\"Richmond District\", \"Financial District\"): 22,\n    (\"Richmond District\", \"Presidio\"): 7,\n    (\"Richmond District\", \"Mission District\"): 20,\n    (\"Richmond District\", \"Nob Hill\"): 17,\n    (\"Richmond District\", \"Russian Hill\"): 13,\n\n    (\"Alamo Square\", \"Pacific Heights\"): 10,\n    (\"Alamo Square\", \"Marina District\"): 15,\n    (\"Alamo Square\", \"The Castro\"): 8,\n    (\"Alamo Square\", \"Richmond District\"): 11,\n    (\"Alamo Square\", \"Financial District\"): 17,\n    (\"Alamo Square\", \"Presidio\"): 17,\n    (\"Alamo Square\", \"Mission District\"): 10,\n    (\"Alamo Square\", \"Nob Hill\"): 11,\n    (\"Alamo Square\", \"Russian Hill\"): 13,\n\n    (\"Financial District\", \"Pacific Heights\"): 13,\n    (\"Financial District\", \"Marina District\"): 15,\n    (\"Financial District\", \"The Castro\"): 20,\n    (\"Financial District\", \"Richmond District\"): 21,\n    (\"Financial District\", \"Alamo Square\"): 17,\n    (\"Financial District\", \"Presidio\"): 22,\n    (\"Financial District\", \"Mission District\"): 17,\n    (\"Financial District\", \"Nob Hill\"): 8,\n    (\"Financial District\", \"Russian Hill\"): 11,\n\n    (\"Presidio\", \"Pacific Heights\"): 11,\n    (\"Presidio\", \"Marina District\"): 11,\n    (\"Presidio\", \"The Castro\"): 21,\n    (\"Presidio\", \"Richmond District\"): 7,\n    (\"Presidio\", \"Alamo Square\"): 19,\n    (\"Presidio\", \"Financial District\"): 23,\n    (\"Presidio\", \"Mission District\"): 26,\n    (\"Presidio\", \"Nob Hill\"): 18,\n    (\"Presidio\", \"Russian Hill\"): 14,\n\n    (\"Mission District\", \"Pacific Heights\"): 16,\n    (\"Mission District\", \"Marina District\"): 19,\n    (\"Mission District\", \"The Castro\"): 7,\n    (\"Mission District\", \"Richmond District\"): 20,\n    (\"Mission District\", \"Alamo Square\"): 11,\n    (\"Mission District\", \"Financial District\"): 15,\n    (\"Mission District\", \"Presidio\"): 25,\n    (\"Mission District\", \"Nob Hill\"): 12,\n    (\"Mission District\", \"Russian Hill\"): 15,\n\n    (\"Nob Hill\", \"Pacific Heights\"): 8,\n    (\"Nob Hill\", \"Marina District\"): 11,\n    (\"Nob Hill\", \"The Castro\"): 17,\n    (\"Nob Hill\", \"Richmond District\"): 14,\n    (\"Nob Hill\", \"Alamo Square\"): 11,\n    (\"Nob Hill\", \"Financial District\"): 9,\n    (\"Nob Hill\", \"Presidio\"): 17,\n    (\"Nob Hill\", \"Mission District\"): 13,\n    (\"Nob Hill\", \"Russian Hill\"): 5,\n\n    (\"Russian Hill\", \"Pacific Heights\"): 7,\n    (\"Russian Hill\", \"Marina District\"): 7,\n    (\"Russian Hill\", \"The Castro\"): 21,\n    (\"Russian Hill\", \"Richmond District\"): 14,\n    (\"Russian Hill\", \"Alamo Square\"): 15,\n    (\"Russian Hill\", \"Financial District\"): 11,\n    (\"Russian Hill\", \"Presidio\"): 14,\n    (\"Russian Hill\", \"Mission District\"): 16,\n    (\"Russian Hill\", \"Nob Hill\"): 5,\n}\n\n# Meeting constraints as input variables:\n# Times are represented in minutes from midnight.\nmeetings = {\n    \"Linda\": {\n        \"location\": \"Marina District\",\n        \"avail_start\": 18*60,      # 18:00 -> 1080\n        \"avail_end\": 22*60,        # 22:00 -> 1320\n        \"duration\": 30\n    },\n    \"Kenneth\": {\n        \"location\": \"The Castro\",\n        \"avail_start\": 14*60 + 45, # 14:45 -> 885\n        \"avail_end\": 16*60 + 15,   # 16:15 -> 975\n        \"duration\": 30\n    },\n    \"Kimberly\": {\n        \"location\": \"Richmond District\",\n        \"avail_start\": 14*60 + 15, # 14:15 -> 855\n        \"avail_end\": 22*60,        # 22:00 -> 1320\n        \"duration\": 30\n    },\n    \"Paul\": {\n        \"location\": \"Alamo Square\",\n        \"avail_start\": 21*60,      # 21:00 -> 1260\n        \"avail_end\": 21*60 + 30,   # 21:30 -> 1290\n        \"duration\": 15\n    },\n    \"Carol\": {\n        \"location\": \"Financial District\",\n        \"avail_start\": 10*60 + 15, # 10:15 -> 615\n        \"avail_end\": 12*60,        # 12:00 -> 720\n        \"duration\": 60\n    },\n    \"Brian\": {\n        \"location\": \"Presidio\",\n        \"avail_start\": 10*60,      # 10:00 -> 600\n        \"avail_end\": 21*60 + 30,   # 21:30 -> 1290\n        \"duration\": 75\n    },\n    \"Laura\": {\n        \"location\": \"Mission District\",\n        \"avail_start\": 16*60 + 15, # 16:15 -> 975\n        \"avail_end\": 20*60 + 30,   # 20:30 -> 1230\n        \"duration\": 30\n    },\n    \"Sandra\": {\n        \"location\": \"Nob Hill\",\n        \"avail_start\": 9*60 + 15,  # 9:15 -> 555\n        \"avail_end\": 18*60 + 30,   # 18:30 -> 1110\n        \"duration\": 60\n    },\n    \"Karen\": {\n        \"location\": \"Russian Hill\",\n        \"avail_start\": 18*60 + 30, # 18:30 -> 1110\n        \"avail_end\": 22*60,        # 22:00 -> 1320\n        \"duration\": 75\n    }\n}\n\n# Global variable to store the best schedule (max number of meetings scheduled)\nbest_schedule = []\nbest_count = 0\n\ndef can_schedule(current_loc, current_time, meeting):\n    # Get travel time from current_loc to meeting location\n    key = (current_loc, meeting[\"location\"])\n    if key not in travel_times:\n        return None  # no travel possible\n    travel = travel_times[key]\n    arrival_time = current_time + travel\n    # The meeting should start no earlier than meeting's available start time.\n    meeting_start = max(arrival_time, meeting[\"avail_start\"])\n    meeting_end = meeting_start + meeting[\"duration\"]\n    if meeting_end <= meeting[\"avail_end\"]:\n        return meeting_start, meeting_end, travel\n    else:\n        return None\n\ndef backtrack(current_loc, current_time, remaining, schedule):\n    global best_schedule, best_count\n\n    # If no remaining meetings, update best schedule if needed.\n    if len(schedule) > best_count:\n        best_schedule = schedule.copy()\n        best_count = len(schedule)\n    # Try to schedule each remaining meeting.\n    for person in list(remaining.keys()):\n        meeting = remaining[person]\n        possibility = can_schedule(current_loc, current_time, meeting)\n        if possibility:\n            meeting_start, meeting_end, travel_used = possibility\n            # Create a meeting record\n            meeting_record = {\n                \"action\": \"meet\",\n                \"location\": meeting[\"location\"],\n                \"person\": person,\n                \"start_time\": minutes_to_time(meeting_start),\n                \"end_time\": minutes_to_time(meeting_end)\n            }\n            # Prepare new remaining dictionary without the scheduled meeting.\n            new_remaining = remaining.copy()\n            del new_remaining[person]\n            # Continue backtracking from new location and time.\n            backtrack(meeting[\"location\"], meeting_end, new_remaining, schedule + [meeting_record])\n    # Also update best if current schedule is longer.\n    if len(schedule) > best_count:\n        best_schedule = schedule.copy()\n        best_count = len(schedule)\n\ndef main():\n    # Starting point: Pacific Heights at 9:00AM (9*60 = 540 minutes)\n    start_loc = \"Pacific Heights\"\n    start_time = 9*60  # 9:00 AM in minutes\n    # Create a copy of meetings for remaining meetings.\n    remaining_meetings = meetings.copy()\n    # Run backtracking search to schedule meetings.\n    backtrack(start_loc, start_time, remaining_meetings, [])\n    # Output the best itinerary in the required JSON structure.\n    output = {\"itinerary\": best_schedule}\n    print(json.dumps(output, indent=2))\n\nif __name__ == \"__main__\":\n    main()",
            "count": "meeting_planning_example_870"
        }
    ]
}