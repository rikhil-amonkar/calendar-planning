{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "day_range": "Day 1-2",
                        "place": "Split"
                    },
                    {
                        "day_range": "Day 3-4",
                        "place": "Helsinki"
                    },
                    {
                        "day_range": "Day 5-6",
                        "place": "Vilnius"
                    },
                    {
                        "day_range": "Day 7-9",
                        "place": "Vilnius"
                    },
                    {
                        "day_range": "Day 10-15",
                        "place": "Geneva"
                    },
                    {
                        "day_range": "Day 16-18",
                        "place": "Reykjavik"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "day_range": "Day 1-6",
                        "place": "Geneva"
                    },
                    {
                        "day_range": "Day 6-7",
                        "place": "Split"
                    },
                    {
                        "day_range": "Day 7-9",
                        "place": "Vilnius"
                    },
                    {
                        "day_range": "Day 9-10",
                        "place": "Helsinki"
                    },
                    {
                        "day_range": "Day 10-12",
                        "place": "Reykjavik"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\n\ndef calculate_trip_plan(constraints, direct_flights):\n    trip_plan = []\n    current_day = 1\n    cities = list(constraints.keys())\n    unvisited_cities = cities.copy()\n    current_city = None\n\n    # Start with Split\n    current_city = 'Split'\n    unvisited_cities.remove(current_city)\n    trip_plan.append({'day_range': f'Day {current_day}-{current_day + constraints[current_city] - 1}', 'place': current_city})\n    current_day += constraints[current_city]\n\n    # Visit Helsinki\n    next_city = 'Helsinki'\n    unvisited_cities.remove(next_city)\n    trip_plan.append({'flying': f'Day {current_day}-{current_day}', 'from': current_city, 'to': next_city})\n    trip_plan.append({'day_range': f'Day {current_day}-{current_day + constraints[next_city] - 1}', 'place': next_city})\n    current_city = next_city\n    current_day += constraints[next_city]\n\n    # Visit Vilnius\n    next_city = 'Vilnius'\n    unvisited_cities.remove(next_city)\n    trip_plan.append({'flying': f'Day {current_day}-{current_day}', 'from': current_city, 'to': next_city})\n    if current_day < 7:\n        trip_plan.append({'day_range': f'Day {current_day}-{6}', 'place': next_city})\n        current_day = 7\n    trip_plan.append({'day_range': f'Day {current_day}-{current_day + 2}', 'place': next_city})\n    current_city = next_city\n    current_day += 3\n\n    # Visit Geneva\n    next_city = 'Geneva'\n    unvisited_cities.remove(next_city)\n    trip_plan.append({'flying': f'Day {current_day}-{current_day}', 'from': current_city, 'to': next_city})\n    trip_plan.append({'day_range': f'Day {current_day}-{current_day + constraints[next_city] - 1}', 'place': next_city})\n    current_city = next_city\n    current_day += constraints[next_city]\n\n    # Visit Reykjavik\n    next_city = 'Reykjavik'\n    unvisited_cities.remove(next_city)\n    trip_plan.append({'flying': f'Day {current_day}-{current_day}', 'from': current_city, 'to': next_city})\n    if current_day < 10:\n        trip_plan.append({'day_range': f'Day {current_day}-{9}', 'place': next_city})\n        current_day = 10\n    trip_plan.append({'day_range': f'Day {current_day}-{current_day + 2}', 'place': next_city})\n\n    return trip_plan\n\nconstraints = {\n    'Split': 2,\n    'Helsinki': 2,\n    'Reykjavik': 3,\n    'Vilnius': 3,\n    'Geneva': 6\n}\n\ndirect_flights = [\n    ['Split', 'Helsinki'],\n    ['Geneva', 'Split'],\n    ['Geneva', 'Helsinki'],\n    ['Helsinki', 'Reykjavik'],\n    ['Vilnius', 'Helsinki'],\n    ['Split', 'Vilnius']\n]\n\ntrip_plan = calculate_trip_plan(constraints, direct_flights)\nprint(json.dumps(trip_plan, indent=4))\n```",
            "count": "trip_planning_example_440"
        }
    ]
}