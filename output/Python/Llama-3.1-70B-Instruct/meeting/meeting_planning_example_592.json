{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Sandra",
                        "start_time": "16:00",
                        "end_time": "16:15"
                    },
                    {
                        "action": "meet",
                        "location": "Union Square",
                        "person": "Jeffrey",
                        "start_time": "23:15",
                        "end_time": "25:15"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Mark",
                        "start_time": "47:15",
                        "end_time": "47:30"
                    },
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "Robert",
                        "start_time": "70:30",
                        "end_time": "24:00"
                    },
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Carol",
                        "start_time": "90:00",
                        "end_time": "42:15"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "James",
                        "start_time": "106:15",
                        "end_time": "36:15"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Union Square",
                        "person": "Jeffrey",
                        "start_time": "9:30",
                        "end_time": "11:30"
                    },
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "Robert",
                        "start_time": "12:15",
                        "end_time": "13:45"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Mark",
                        "start_time": "14:08",
                        "end_time": "14:23"
                    },
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Sandra",
                        "start_time": "14:43",
                        "end_time": "14:58"
                    },
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Carol",
                        "start_time": "18:15",
                        "end_time": "18:30"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "James",
                        "start_time": "20:00",
                        "end_time": "22:00"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\n\ndef calculate_travel_time(origin, destination, travel_times):\n    return travel_times.get((origin, destination), 0)\n\ndef calculate_meeting_time(person, start_time, duration):\n    end_time = (start_time + duration) % 24\n    if end_time < start_time:\n        end_time += 24\n    return f\"{int(start_time):02d}:{int((start_time % 1) * 60):02d}\", f\"{int(end_time):02d}:{int((end_time % 1) * 60):02d}\"\n\ndef plan_meeting(person, location, start_time, duration, travel_times, current_location, current_time):\n    travel_time = calculate_travel_time(current_location, location, travel_times)\n    meeting_start_time, meeting_end_time = calculate_meeting_time(person, current_time + travel_time, duration / 60)\n    return {\n        \"action\": \"meet\",\n        \"location\": location,\n        \"person\": person,\n        \"start_time\": meeting_start_time,\n        \"end_time\": meeting_end_time\n    }\n\ndef main():\n    travel_times = {\n        (\"North Beach\", \"Pacific Heights\"): 8,\n        (\"North Beach\", \"Chinatown\"): 6,\n        (\"North Beach\", \"Union Square\"): 7,\n        (\"North Beach\", \"Mission District\"): 18,\n        (\"North Beach\", \"Golden Gate Park\"): 22,\n        (\"North Beach\", \"Nob Hill\"): 7,\n        (\"Pacific Heights\", \"North Beach\"): 9,\n        (\"Pacific Heights\", \"Chinatown\"): 11,\n        (\"Pacific Heights\", \"Union Square\"): 12,\n        (\"Pacific Heights\", \"Mission District\"): 15,\n        (\"Pacific Heights\", \"Golden Gate Park\"): 15,\n        (\"Pacific Heights\", \"Nob Hill\"): 8,\n        (\"Chinatown\", \"North Beach\"): 3,\n        (\"Chinatown\", \"Pacific Heights\"): 10,\n        (\"Chinatown\", \"Union Square\"): 7,\n        (\"Chinatown\", \"Mission District\"): 18,\n        (\"Chinatown\", \"Golden Gate Park\"): 23,\n        (\"Chinatown\", \"Nob Hill\"): 8,\n        (\"Union Square\", \"North Beach\"): 10,\n        (\"Union Square\", \"Pacific Heights\"): 15,\n        (\"Union Square\", \"Chinatown\"): 7,\n        (\"Union Square\", \"Mission District\"): 14,\n        (\"Union Square\", \"Golden Gate Park\"): 22,\n        (\"Union Square\", \"Nob Hill\"): 9,\n        (\"Mission District\", \"North Beach\"): 17,\n        (\"Mission District\", \"Pacific Heights\"): 16,\n        (\"Mission District\", \"Chinatown\"): 16,\n        (\"Mission District\", \"Union Square\"): 15,\n        (\"Mission District\", \"Golden Gate Park\"): 17,\n        (\"Mission District\", \"Nob Hill\"): 12,\n        (\"Golden Gate Park\", \"North Beach\"): 24,\n        (\"Golden Gate Park\", \"Pacific Heights\"): 16,\n        (\"Golden Gate Park\", \"Chinatown\"): 23,\n        (\"Golden Gate Park\", \"Union Square\"): 22,\n        (\"Golden Gate Park\", \"Mission District\"): 17,\n        (\"Golden Gate Park\", \"Nob Hill\"): 20,\n        (\"Nob Hill\", \"North Beach\"): 8,\n        (\"Nob Hill\", \"Pacific Heights\"): 8,\n        (\"Nob Hill\", \"Chinatown\"): 6,\n        (\"Nob Hill\", \"Union Square\"): 7,\n        (\"Nob Hill\", \"Mission District\"): 13,\n        (\"Nob Hill\", \"Golden Gate Park\"): 17\n    }\n\n    meetings = [\n        {\"person\": \"Sandra\", \"location\": \"Nob Hill\", \"start_time\": 8, \"end_time\": 15.5, \"duration\": 15},\n        {\"person\": \"Jeffrey\", \"location\": \"Union Square\", \"start_time\": 9.5, \"end_time\": 15.5, \"duration\": 120},\n        {\"person\": \"Robert\", \"location\": \"Chinatown\", \"start_time\": 12.25, \"end_time\": 16.75, \"duration\": 90},\n        {\"person\": \"Mark\", \"location\": \"Golden Gate Park\", \"start_time\": 11.5, \"end_time\": 17.75, \"duration\": 15},\n        {\"person\": \"Carol\", \"location\": \"Mission District\", \"start_time\": 18.25, \"end_time\": 21.25, \"duration\": 15},\n        {\"person\": \"James\", \"location\": \"Pacific Heights\", \"start_time\": 20, \"end_time\": 22, \"duration\": 120}\n    ]\n\n    itinerary = []\n    current_location = \"North Beach\"\n    current_time = 9\n\n    # Sort meetings by start time\n    meetings.sort(key=lambda x: x[\"start_time\"])\n\n    for meeting in meetings:\n        travel_time = calculate_travel_time(current_location, meeting[\"location\"], travel_times)\n        if current_time + travel_time < meeting[\"start_time\"]:\n            current_time = meeting[\"start_time\"] - travel_time\n        itinerary.append(plan_meeting(meeting[\"person\"], meeting[\"location\"], current_time + travel_time, meeting[\"duration\"], travel_times, current_location, current_time))\n        current_location = meeting[\"location\"]\n        current_time += travel_time + meeting[\"duration\"] / 60\n\n    print(json.dumps({\"itinerary\": itinerary}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
            "count": "meeting_planning_example_592"
        }
    ]
}