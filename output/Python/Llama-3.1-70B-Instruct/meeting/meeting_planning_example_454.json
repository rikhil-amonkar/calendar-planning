{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Daniel",
                        "start_time": "35:00",
                        "end_time": "36:45"
                    },
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "Ronald",
                        "start_time": "52:45",
                        "end_time": "30:15"
                    },
                    {
                        "action": "meet",
                        "location": "North Beach",
                        "person": "William",
                        "start_time": "57:15",
                        "end_time": "33:30"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Jessica",
                        "start_time": "79:30",
                        "end_time": "32:00"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Ashley",
                        "start_time": "103:00",
                        "end_time": "32:45"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Daniel",
                        "start_time": "9:26",
                        "end_time": "11:11"
                    },
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "Ronald",
                        "start_time": "11:27",
                        "end_time": "12:57"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Jessica",
                        "start_time": "13:45",
                        "end_time": "14:15"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Ashley",
                        "start_time": "17:15",
                        "end_time": "19:00"
                    },
                    {
                        "action": "meet",
                        "location": "North Beach",
                        "person": "William",
                        "start_time": "19:21",
                        "end_time": "19:36"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\n\ndef calculate_travel_time(origin, destination, travel_times):\n    return travel_times.get((origin, destination), 0)\n\ndef calculate_meeting_time(person, start_time, duration):\n    end_time = (start_time + duration) % 24\n    if end_time < start_time:\n        end_time += 24\n    return f\"{int(start_time):02d}:{int((start_time % 1) * 60):02d}\", f\"{int(end_time):02d}:{int((end_time % 1) * 60):02d}\"\n\ndef plan_meeting(person, location, start_time, duration, travel_times, current_location, current_time):\n    travel_time = calculate_travel_time(current_location, location, travel_times)\n    meeting_start_time, meeting_end_time = calculate_meeting_time(person, current_time + travel_time, duration / 60)\n    return {\n        \"action\": \"meet\",\n        \"location\": location,\n        \"person\": person,\n        \"start_time\": meeting_start_time,\n        \"end_time\": meeting_end_time\n    }\n\ndef main():\n    travel_times = {\n        (\"Presidio\", \"Golden Gate Park\"): 12,\n        (\"Presidio\", \"Bayview\"): 31,\n        (\"Presidio\", \"Chinatown\"): 21,\n        (\"Presidio\", \"North Beach\"): 18,\n        (\"Presidio\", \"Mission District\"): 26,\n        (\"Golden Gate Park\", \"Presidio\"): 11,\n        (\"Golden Gate Park\", \"Bayview\"): 23,\n        (\"Golden Gate Park\", \"Chinatown\"): 23,\n        (\"Golden Gate Park\", \"North Beach\"): 24,\n        (\"Golden Gate Park\", \"Mission District\"): 17,\n        (\"Bayview\", \"Presidio\"): 31,\n        (\"Bayview\", \"Golden Gate Park\"): 22,\n        (\"Bayview\", \"Chinatown\"): 18,\n        (\"Bayview\", \"North Beach\"): 21,\n        (\"Bayview\", \"Mission District\"): 13,\n        (\"Chinatown\", \"Presidio\"): 19,\n        (\"Chinatown\", \"Golden Gate Park\"): 23,\n        (\"Chinatown\", \"Bayview\"): 22,\n        (\"Chinatown\", \"North Beach\"): 3,\n        (\"Chinatown\", \"Mission District\"): 18,\n        (\"North Beach\", \"Presidio\"): 17,\n        (\"North Beach\", \"Golden Gate Park\"): 22,\n        (\"North Beach\", \"Bayview\"): 22,\n        (\"North Beach\", \"Chinatown\"): 6,\n        (\"North Beach\", \"Mission District\"): 18,\n        (\"Mission District\", \"Presidio\"): 25,\n        (\"Mission District\", \"Golden Gate Park\"): 17,\n        (\"Mission District\", \"Bayview\"): 15,\n        (\"Mission District\", \"Chinatown\"): 16,\n        (\"Mission District\", \"North Beach\"): 17\n    }\n\n    meetings = [\n        {\"person\": \"Jessica\", \"location\": \"Golden Gate Park\", \"start_time\": 13.75, \"end_time\": 15, \"duration\": 30},\n        {\"person\": \"Ashley\", \"location\": \"Bayview\", \"start_time\": 17.25, \"end_time\": 20, \"duration\": 105},\n        {\"person\": \"Ronald\", \"location\": \"Chinatown\", \"start_time\": 7.25, \"end_time\": 14.75, \"duration\": 90},\n        {\"person\": \"William\", \"location\": \"North Beach\", \"start_time\": 13.25, \"end_time\": 20.25, \"duration\": 15},\n        {\"person\": \"Daniel\", \"location\": \"Mission District\", \"start_time\": 7, \"end_time\": 11.25, \"duration\": 105}\n    ]\n\n    itinerary = []\n    current_location = \"Presidio\"\n    current_time = 9\n\n    # Sort meetings by start time\n    meetings.sort(key=lambda x: x[\"start_time\"])\n\n    for meeting in meetings:\n        travel_time = calculate_travel_time(current_location, meeting[\"location\"], travel_times)\n        if current_time + travel_time < meeting[\"start_time\"]:\n            current_time = meeting[\"start_time\"] - travel_time\n        itinerary.append(plan_meeting(meeting[\"person\"], meeting[\"location\"], current_time + travel_time, meeting[\"duration\"], travel_times, current_location, current_time))\n        current_location = meeting[\"location\"]\n        current_time += travel_time + meeting[\"duration\"] / 60\n\n    print(json.dumps({\"itinerary\": itinerary}, indent=4))\n\nif __name__ == \"__main__\":\n    main()\n```",
            "count": "meeting_planning_example_454"
        }
    ]
}