{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Kenneth",
                        "start_time": "11:15",
                        "end_time": "11:45"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Karen",
                        "start_time": "13:15",
                        "end_time": "15:15"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Mark",
                        "start_time": "17:30",
                        "end_time": "19:30"
                    },
                    {
                        "action": "meet",
                        "location": "Embarcadero",
                        "person": "Mary",
                        "start_time": "20:00",
                        "end_time": "21:15"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Kenneth",
                        "start_time": "11:15",
                        "end_time": "11:45"
                    },
                    {
                        "action": "meet",
                        "location": "Union Square",
                        "person": "Sarah",
                        "start_time": "12:04",
                        "end_time": "13:34"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Daniel",
                        "start_time": "13:49",
                        "end_time": "14:04"
                    },
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "Richard",
                        "start_time": "14:15",
                        "end_time": "14:45"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Karen",
                        "start_time": "14:52",
                        "end_time": "16:52"
                    },
                    {
                        "action": "meet",
                        "location": "North Beach",
                        "person": "Thomas",
                        "start_time": "19:15",
                        "end_time": "19:30"
                    },
                    {
                        "action": "meet",
                        "location": "Embarcadero",
                        "person": "Mary",
                        "start_time": "20:00",
                        "end_time": "21:15"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Define travel distances in minutes\ntravel_distances = {\n    ('Nob Hill', 'Embarcadero'): 9,\n    ('Nob Hill', 'The Castro'): 17,\n    ('Nob Hill', 'Haight-Ashbury'): 13,\n    ('Nob Hill', 'Union Square'): 7,\n    ('Nob Hill', 'North Beach'): 8,\n    ('Nob Hill', 'Pacific Heights'): 8,\n    ('Nob Hill', 'Chinatown'): 6,\n    ('Nob Hill', 'Golden Gate Park'): 17,\n    ('Nob Hill', 'Marina District'): 11,\n    ('Nob Hill', 'Russian Hill'): 5,\n    ('Embarcadero', 'Nob Hill'): 10,\n    ('Embarcadero', 'The Castro'): 25,\n    ('Embarcadero', 'Haight-Ashbury'): 21,\n    ('Embarcadero', 'Union Square'): 10,\n    ('Embarcadero', 'North Beach'): 5,\n    ('Embarcadero', 'Pacific Heights'): 11,\n    ('Embarcadero', 'Chinatown'): 7,\n    ('Embarcadero', 'Golden Gate Park'): 25,\n    ('Embarcadero', 'Marina District'): 12,\n    ('Embarcadero', 'Russian Hill'): 8,\n    ('The Castro', 'Nob Hill'): 16,\n    ('The Castro', 'Embarcadero'): 22,\n    ('The Castro', 'Haight-Ashbury'): 6,\n    ('The Castro', 'Union Square'): 19,\n    ('The Castro', 'North Beach'): 20,\n    ('The Castro', 'Pacific Heights'): 16,\n    ('The Castro', 'Chinatown'): 22,\n    ('The Castro', 'Golden Gate Park'): 11,\n    ('The Castro', 'Marina District'): 21,\n    ('The Castro', 'Russian Hill'): 18,\n    ('Haight-Ashbury', 'Nob Hill'): 15,\n    ('Haight-Ashbury', 'Embarcadero'): 20,\n    ('Haight-Ashbury', 'The Castro'): 6,\n    ('Haight-Ashbury', 'Union Square'): 19,\n    ('Haight-Ashbury', 'North Beach'): 19,\n    ('Haight-Ashbury', 'Pacific Heights'): 12,\n    ('Haight-Ashbury', 'Chinatown'): 19,\n    ('Haight-Ashbury', 'Golden Gate Park'): 7,\n    ('Haight-Ashbury', 'Marina District'): 17,\n    ('Haight-Ashbury', 'Russian Hill'): 17,\n    ('Union Square', 'Nob Hill'): 9,\n    ('Union Square', 'Embarcadero'): 11,\n    ('Union Square', 'The Castro'): 17,\n    ('Union Square', 'Haight-Ashbury'): 18,\n    ('Union Square', 'North Beach'): 10,\n    ('Union Square', 'Pacific Heights'): 15,\n    ('Union Square', 'Chinatown'): 7,\n    ('Union Square', 'Golden Gate Park'): 22,\n    ('Union Square', 'Marina District'): 18,\n    ('Union Square', 'Russian Hill'): 13,\n    ('North Beach', 'Nob Hill'): 7,\n    ('North Beach', 'Embarcadero'): 6,\n    ('North Beach', 'The Castro'): 23,\n    ('North Beach', 'Haight-Ashbury'): 18,\n    ('North Beach', 'Union Square'): 7,\n    ('North Beach', 'Pacific Heights'): 8,\n    ('North Beach', 'Chinatown'): 6,\n    ('North Beach', 'Golden Gate Park'): 22,\n    ('North Beach', 'Marina District'): 9,\n    ('North Beach', 'Russian Hill'): 4,\n    ('Pacific Heights', 'Nob Hill'): 8,\n    ('Pacific Heights', 'Embarcadero'): 10,\n    ('Pacific Heights', 'The Castro'): 16,\n    ('Pacific Heights', 'Haight-Ashbury'): 11,\n    ('Pacific Heights', 'Union Square'): 12,\n    ('Pacific Heights', 'North Beach'): 9,\n    ('Pacific Heights', 'Chinatown'): 11,\n    ('Pacific Heights', 'Golden Gate Park'): 15,\n    ('Pacific Heights', 'Marina District'): 6,\n    ('Pacific Heights', 'Russian Hill'): 7,\n    ('Chinatown', 'Nob Hill'): 9,\n    ('Chinatown', 'Embarcadero'): 5,\n    ('Chinatown', 'The Castro'): 22,\n    ('Chinatown', 'Haight-Ashbury'): 19,\n    ('Chinatown', 'Union Square'): 7,\n    ('Chinatown', 'North Beach'): 3,\n    ('Chinatown', 'Pacific Heights'): 10,\n    ('Chinatown', 'Golden Gate Park'): 23,\n    ('Chinatown', 'Marina District'): 12,\n    ('Chinatown', 'Russian Hill'): 7,\n    ('Golden Gate Park', 'Nob Hill'): 20,\n    ('Golden Gate Park', 'Embarcadero'): 25,\n    ('Golden Gate Park', 'The Castro'): 13,\n    ('Golden Gate Park', 'Haight-Ashbury'): 7,\n    ('Golden Gate Park', 'Union Square'): 22,\n    ('Golden Gate Park', 'North Beach'): 23,\n    ('Golden Gate Park', 'Pacific Heights'): 16,\n    ('Golden Gate Park', 'Chinatown'): 23,\n    ('Golden Gate Park', 'Marina District'): 16,\n    ('Golden Gate Park', 'Russian Hill'): 19,\n    ('Marina District', 'Nob Hill'): 12,\n    ('Marina District', 'Embarcadero'): 14,\n    ('Marina District', 'The Castro'): 22,\n    ('Marina District', 'Haight-Ashbury'): 16,\n    ('Marina District', 'Union Square'): 16,\n    ('Marina District', 'North Beach'): 11,\n    ('Marina District', 'Pacific Heights'): 7,\n    ('Marina District', 'Chinatown'): 15,\n    ('Marina District', 'Golden Gate Park'): 18,\n    ('Marina District', 'Russian Hill'): 8,\n    ('Russian Hill', 'Nob Hill'): 5,\n    ('Russian Hill', 'Embarcadero'): 8,\n    ('Russian Hill', 'The Castro'): 21,\n    ('Russian Hill', 'Haight-Ashbury'): 17,\n    ('Russian Hill', 'Union Square'): 10,\n    ('Russian Hill', 'North Beach'): 5,\n    ('Russian Hill', 'Pacific Heights'): 7,\n    ('Russian Hill', 'Chinatown'): 9,\n    ('Russian Hill', 'Golden Gate Park'): 21,\n    ('Russian Hill', 'Marina District'): 7\n}\n\n# Define meeting constraints\nmeetings = [\n    {'person': 'Mary', 'location': 'Embarcadero','start_time': '20:00', 'end_time': '21:15','min_duration': 75},\n    {'person': 'Kenneth', 'location': 'The Castro','start_time': '11:15', 'end_time': '19:15','min_duration': 30},\n    {'person': 'Joseph', 'location': 'Haight-Ashbury','start_time': '20:00', 'end_time': '22:00','min_duration': 120},\n    {'person': 'Sarah', 'location': 'Union Square','start_time': '11:45', 'end_time': '14:30','min_duration': 90},\n    {'person': 'Thomas', 'location': 'North Beach','start_time': '19:15', 'end_time': '19:45','min_duration': 15},\n    {'person': 'Daniel', 'location': 'Pacific Heights','start_time': '13:45', 'end_time': '20:30','min_duration': 15},\n    {'person': 'Richard', 'location': 'Chinatown','start_time': '08:00', 'end_time': '18:45','min_duration': 30},\n    {'person': 'Mark', 'location': 'Golden Gate Park','start_time': '17:30', 'end_time': '21:30','min_duration': 120},\n    {'person': 'David', 'location': 'Marina District','start_time': '20:00', 'end_time': '21:00','min_duration': 60},\n    {'person': 'Karen', 'location': 'Russian Hill','start_time': '13:15', 'end_time': '18:30','min_duration': 120}\n]\n\n# Define arrival time\narrival_time = '09:00'\n\n# Define current location and time\ncurrent_location = 'Nob Hill'\ncurrent_time = datetime.strptime(arrival_time, '%H:%M')\n\n# Initialize itinerary\nitinerary = []\n\n# Function to calculate end time\ndef calculate_end_time(start_time, duration):\n    return (datetime.strptime(start_time, '%H:%M') + timedelta(minutes=duration)).strftime('%H:%M')\n\n# Function to check if meeting can be scheduled\ndef can_schedule_meeting(meeting):\n    global current_time\n    global current_location\n    travel_time = travel_distances.get((current_location, meeting['location']), float('inf'))\n    meeting_start_time = datetime.strptime(meeting['start_time'], '%H:%M')\n    if current_time + timedelta(minutes=travel_time) <= meeting_start_time:\n        return True\n    return False\n\n# Function to schedule meeting\ndef schedule_meeting(meeting):\n    global current_time\n    global current_location\n    global itinerary\n    travel_time = travel_distances.get((current_location, meeting['location']), float('inf'))\n    current_time += timedelta(minutes=travel_time)\n    current_location = meeting['location']\n    meeting_end_time = calculate_end_time(meeting['start_time'], meeting['min_duration'])\n    itinerary.append({\n        'action':'meet',\n        'location': meeting['location'],\n        'person': meeting['person'],\n     'start_time': meeting['start_time'],\n        'end_time': meeting_end_time\n    })\n    current_time = datetime.strptime(meeting_end_time, '%H:%M')\n\n# Sort meetings by start time\nmeetings.sort(key=lambda x: x['start_time'])\n\n# Schedule meetings\nfor meeting in meetings:\n    if can_schedule_meeting(meeting):\n        schedule_meeting(meeting)\n\n# Print itinerary as JSON\nprint('SOLUTION:')\nprint(json.dumps({'itinerary': itinerary}, indent=4))\n```",
            "count": "meeting_planning_example_934"
        }
    ]
}