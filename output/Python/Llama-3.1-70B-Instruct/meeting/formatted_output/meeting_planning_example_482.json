{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Stephanie",
                        "start_time": "9:11",
                        "end_time": "10:41"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Jason",
                        "start_time": "11:03",
                        "end_time": "12:03"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Brian",
                        "start_time": "12:15",
                        "end_time": "14:15"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Sandra",
                        "start_time": "14:38",
                        "end_time": "14:53"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Stephanie",
                        "start_time": "9:11",
                        "end_time": "10:41"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Sandra",
                        "start_time": "13:00",
                        "end_time": "13:15"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Brian",
                        "start_time": "13:38",
                        "end_time": "15:38"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Jason",
                        "start_time": "15:45",
                        "end_time": "16:45"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Define travel distances in minutes\ntravel_distances = {\n    'Haight-Ashbury': {'Mission District': 11, 'Bayview': 18, 'Pacific Heights': 12, 'Russian Hill': 17, 'Fisherman\\'s Wharf': 23},\n    'Mission District': {'Haight-Ashbury': 12, 'Bayview': 15, 'Pacific Heights': 16, 'Russian Hill': 15, 'Fisherman\\'s Wharf': 22},\n    'Bayview': {'Haight-Ashbury': 19, 'Mission District': 13, 'Pacific Heights': 23, 'Russian Hill': 23, 'Fisherman\\'s Wharf': 25},\n    'Pacific Heights': {'Haight-Ashbury': 11, 'Mission District': 15, 'Bayview': 22, 'Russian Hill': 7, 'Fisherman\\'s Wharf': 13},\n    'Russian Hill': {'Haight-Ashbury': 17, 'Mission District': 16, 'Bayview': 23, 'Pacific Heights': 7, 'Fisherman\\'s Wharf': 7},\n    'Fisherman\\'s Wharf': {'Haight-Ashbury': 22, 'Mission District': 22, 'Bayview': 26, 'Pacific Heights': 12, 'Russian Hill': 7}\n}\n\n# Define meeting constraints\nmeeting_constraints = {\n    'Stephanie': {'location': 'Mission District','start_time': '08:15', 'end_time': '13:45', 'duration': 90},\n    'Sandra': {'location': 'Bayview','start_time': '13:00', 'end_time': '19:30', 'duration': 15},\n    'Richard': {'location': 'Pacific Heights','start_time': '07:15', 'end_time': '10:15', 'duration': 75},\n    'Brian': {'location': 'Russian Hill','start_time': '12:15', 'end_time': '16:00', 'duration': 120},\n    'Jason': {'location': 'Fisherman\\'s Wharf','start_time': '08:30', 'end_time': '17:45', 'duration': 60}\n}\n\ndef calculate_meeting_schedule():\n    # Initialize the schedule\n    schedule = []\n    current_location = 'Haight-Ashbury'\n    current_time = '9:00'\n\n    # Sort the meeting constraints by start time\n    sorted_constraints = sorted(meeting_constraints.items(), key=lambda x: x[1]['start_time'])\n\n    # Calculate the schedule for each person\n    for person, constraint in sorted_constraints:\n        # Calculate the travel time to the person's location\n        travel_time = travel_distances[current_location][constraint['location']]\n        arrival_time = add_time(current_time, travel_time)\n\n        # Check if we can meet the person within their available time\n        if arrival_time < constraint['start_time']:\n            # Wait until the person is available\n            start_time = constraint['start_time']\n        else:\n            start_time = arrival_time\n\n        # Calculate the end time of the meeting\n        end_time = add_time(start_time, constraint['duration'])\n\n        # Check if the meeting ends within the person's available time\n        if end_time > constraint['end_time']:\n            # We cannot meet the person within their available time\n            continue\n\n        # Add the meeting to the schedule\n        schedule.append({\n            'action':'meet',\n            'location': constraint['location'],\n            'person': person,\n          'start_time': start_time,\n            'end_time': end_time\n        })\n\n        # Update the current location and time\n        current_location = constraint['location']\n        current_time = end_time\n\n    return schedule\n\ndef add_time(time, minutes):\n    dt = datetime.strptime(time, '%H:%M')\n    dt += timedelta(minutes=minutes)\n    return dt.strftime('%H:%M')\n\ndef main():\n    schedule = calculate_meeting_schedule()\n    print(json.dumps({'itinerary': schedule}, indent=4))\n\nif __name__ == '__main__':\n    main()\n```",
            "count": "meeting_planning_example_482"
        }
    ]
}