{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Ronald",
                        "start_time": "9:00",
                        "end_time": "12:00"
                    },
                    {
                        "action": "meet",
                        "location": "Sunset District",
                        "person": "Patricia",
                        "start_time": "12:00",
                        "end_time": "19:00"
                    },
                    {
                        "action": "meet",
                        "location": "North Beach",
                        "person": "Laura",
                        "start_time": "19:00",
                        "end_time": "23:00"
                    },
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Emily",
                        "start_time": "23:00",
                        "end_time": "13:00"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Mary",
                        "start_time": "13:00",
                        "end_time": "19:30"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Sunset District",
                        "person": "Patricia",
                        "start_time": "9:31",
                        "end_time": "10:31"
                    },
                    {
                        "action": "meet",
                        "location": "North Beach",
                        "person": "Laura",
                        "start_time": "12:30",
                        "end_time": "12:45"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Ronald",
                        "start_time": "13:45",
                        "end_time": "15:30"
                    },
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Emily",
                        "start_time": "16:15",
                        "end_time": "17:15"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "```python\nimport json\nfrom datetime import datetime, timedelta\n\n# Travel distances (in minutes)\ntravel_distances = {\n    'Financial District': {'Russian Hill': 10, 'Sunset District': 31, 'North Beach': 7, 'The Castro': 23, 'Golden Gate Park': 23},\n    'Russian Hill': {'Financial District': 11, 'Sunset District': 23, 'North Beach': 5, 'The Castro': 21, 'Golden Gate Park': 21},\n    'Sunset District': {'Financial District': 30, 'Russian Hill': 24, 'North Beach': 29, 'The Castro': 17, 'Golden Gate Park': 11},\n    'North Beach': {'Financial District': 8, 'Russian Hill': 4, 'Sunset District': 27, 'The Castro': 22, 'Golden Gate Park': 22},\n    'The Castro': {'Financial District': 20, 'Russian Hill': 18, 'Sunset District': 17, 'North Beach': 20, 'Golden Gate Park': 13},\n    'Golden Gate Park': {'Financial District': 26, 'Russian Hill': 19, 'Sunset District': 10, 'North Beach': 24, 'The Castro': 13}\n}\n\n# Constraints\nconstraints = {\n    'Ronald': {'location': 'Russian Hill','start_time': '13:45', 'end_time': '17:15','required_time': 105},\n    'Patricia': {'location': 'Sunset District','start_time': '09:15', 'end_time': '22:00','required_time': 60},\n    'Laura': {'location': 'North Beach','start_time': '12:30', 'end_time': '12:45','required_time': 15},\n    'Emily': {'location': 'The Castro','start_time': '16:15', 'end_time': '18:30','required_time': 60},\n    'Mary': {'location': 'Golden Gate Park','start_time': '15:00', 'end_time': '16:30','required_time': 60}\n}\n\ndef calculate_travel_time(start_location, end_location):\n    return travel_distances[start_location][end_location]\n\ndef is_valid_meeting(person, start_time, end_time, required_time):\n    return (datetime.strptime(start_time, '%H:%M') + timedelta(minutes=required_time)).time() <= datetime.strptime(end_time, '%H:%M').time()\n\ndef schedule_meeting(person, start_time, end_time, required_time, location):\n    travel_time = calculate_travel_time('Financial District', location)\n    start_time = (datetime.strptime(start_time, '%H:%M') + timedelta(minutes=travel_time)).strftime('%H:%M')\n    end_time = (datetime.strptime(end_time, '%H:%M') + timedelta(minutes=travel_time)).strftime('%H:%M')\n    return is_valid_meeting(person, start_time, end_time, required_time)\n\ndef generate_itinerary():\n    itinerary = []\n    start_time = '09:00'\n    end_time = '12:00'\n    \n    for person in constraints:\n        location = constraints[person]['location']\n        start_person_time = constraints[person]['start_time']\n        end_person_time = constraints[person]['end_time']\n        required_time = constraints[person]['required_time']\n        \n        if schedule_meeting(person, start_time, end_time, required_time, location):\n            itinerary.append({\n                'action':'meet',\n                'location': location,\n                'person': person,\n            'start_time': start_time,\n                'end_time': end_time\n            })\n            start_time = end_time\n            end_time = (datetime.strptime(end_person_time, '%H:%M') + timedelta(minutes=required_time)).strftime('%H:%M')\n    \n    return itinerary\n\ndef main():\n    itinerary = generate_itinerary()\n    print(json.dumps({'itinerary': itinerary}, indent=4))\n\nif __name__ == '__main__':\n    main()\n```",
            "count": "meeting_planning_example_444"
        }
    ]
}