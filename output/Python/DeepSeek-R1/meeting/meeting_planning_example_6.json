{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Kenneth",
                        "start_time": "14:15",
                        "end_time": "15:45"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Kenneth",
                        "start_time": "14:15",
                        "end_time": "15:45"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "SOLUTION:\nimport json\n\ndef time_to_min(t):\n    h, m = map(int, t.split(':'))\n    return h * 60 + m\n\ndef min_to_time(m):\n    h = m // 60\n    mi = m % 60\n    return f\"{h}:{mi:02d}\"\n\nstart_time = \"9:00\"\nstart_loc = \"Fisherman's Wharf\"\nkenneth_loc = \"Nob Hill\"\ntravel_time = 11\nk_start = \"14:15\"\nk_end = \"19:45\"\nrequired_duration = 90\n\ncurrent_min = time_to_min(start_time)\nk_start_min = time_to_min(k_start)\nk_end_min = time_to_min(k_end)\n\nearliest_arrival = k_start_min\nlatest_arrival = k_end_min - required_duration\n\ndeparture_min = earliest_arrival - travel_time\n\nif departure_min < current_min:\n    departure_min = current_min\n    arrival_min = departure_min + travel_time\n    if arrival_min > latest_arrival:\n        meet = None\n    else:\n        meet_start = arrival_min\n        meet_end = arrival_min + required_duration\nelse:\n    meet_start = earliest_arrival\n    meet_end = meet_start + required_duration\n\nitinerary = []\nif meet_start <= latest_arrival:\n    itinerary.append({\n        \"action\": \"meet\",\n        \"location\": kenneth_loc,\n        \"person\": \"Kenneth\",\n        \"start_time\": min_to_time(meet_start),\n        \"end_time\": min_to_time(meet_end)\n    })\n\nprint(json.dumps({\"itinerary\": itinerary}, indent=2))",
            "count": "meeting_planning_example_6"
        }
    ]
}