[
    {
        "role": "user",
        "content": "You are an expert computational meeting planner. Your task is to write a Python program that algorithmically calculates the optimal meeting schedule based on the participants' constraints.\nThe program must actually compute the plan using the given parameters, not just print a pre-determined answer.\nInput parameters:\nYou are visiting San Francisco for the day and want to meet as many friends as possible. Solve the problem by considering various different schedules and picking the best one to optimize your goals.\n\nTravel distances (in minutes):\nSunset District to Presidio: 16.\nSunset District to Nob Hill: 27.\nSunset District to Pacific Heights: 21.\nSunset District to Mission District: 25.\nSunset District to Marina District: 21.\nSunset District to North Beach: 28.\nSunset District to Russian Hill: 24.\nSunset District to Richmond District: 12.\nSunset District to Embarcadero: 30.\nSunset District to Alamo Square: 17.\nPresidio to Sunset District: 15.\nPresidio to Nob Hill: 18.\nPresidio to Pacific Heights: 11.\nPresidio to Mission District: 26.\nPresidio to Marina District: 11.\nPresidio to North Beach: 18.\nPresidio to Russian Hill: 14.\nPresidio to Richmond District: 7.\nPresidio to Embarcadero: 20.\nPresidio to Alamo Square: 19.\nNob Hill to Sunset District: 24.\nNob Hill to Presidio: 17.\nNob Hill to Pacific Heights: 8.\nNob Hill to Mission District: 13.\nNob Hill to Marina District: 11.\nNob Hill to North Beach: 8.\nNob Hill to Russian Hill: 5.\nNob Hill to Richmond District: 14.\nNob Hill to Embarcadero: 9.\nNob Hill to Alamo Square: 11.\nPacific Heights to Sunset District: 21.\nPacific Heights to Presidio: 11.\nPacific Heights to Nob Hill: 8.\nPacific Heights to Mission District: 15.\nPacific Heights to Marina District: 6.\nPacific Heights to North Beach: 9.\nPacific Heights to Russian Hill: 7.\nPacific Heights to Richmond District: 12.\nPacific Heights to Embarcadero: 10.\nPacific Heights to Alamo Square: 10.\nMission District to Sunset District: 24.\nMission District to Presidio: 25.\nMission District to Nob Hill: 12.\nMission District to Pacific Heights: 16.\nMission District to Marina District: 19.\nMission District to North Beach: 17.\nMission District to Russian Hill: 15.\nMission District to Richmond District: 20.\nMission District to Embarcadero: 19.\nMission District to Alamo Square: 11.\nMarina District to Sunset District: 19.\nMarina District to Presidio: 10.\nMarina District to Nob Hill: 12.\nMarina District to Pacific Heights: 7.\nMarina District to Mission District: 20.\nMarina District to North Beach: 11.\nMarina District to Russian Hill: 8.\nMarina District to Richmond District: 11.\nMarina District to Embarcadero: 14.\nMarina District to Alamo Square: 15.\nNorth Beach to Sunset District: 27.\nNorth Beach to Presidio: 17.\nNorth Beach to Nob Hill: 7.\nNorth Beach to Pacific Heights: 8.\nNorth Beach to Mission District: 18.\nNorth Beach to Marina District: 9.\nNorth Beach to Russian Hill: 4.\nNorth Beach to Richmond District: 18.\nNorth Beach to Embarcadero: 6.\nNorth Beach to Alamo Square: 16.\nRussian Hill to Sunset District: 23.\nRussian Hill to Presidio: 14.\nRussian Hill to Nob Hill: 5.\nRussian Hill to Pacific Heights: 7.\nRussian Hill to Mission District: 16.\nRussian Hill to Marina District: 7.\nRussian Hill to North Beach: 5.\nRussian Hill to Richmond District: 14.\nRussian Hill to Embarcadero: 8.\nRussian Hill to Alamo Square: 15.\nRichmond District to Sunset District: 11.\nRichmond District to Presidio: 7.\nRichmond District to Nob Hill: 17.\nRichmond District to Pacific Heights: 10.\nRichmond District to Mission District: 20.\nRichmond District to Marina District: 9.\nRichmond District to North Beach: 17.\nRichmond District to Russian Hill: 13.\nRichmond District to Embarcadero: 19.\nRichmond District to Alamo Square: 13.\nEmbarcadero to Sunset District: 30.\nEmbarcadero to Presidio: 20.\nEmbarcadero to Nob Hill: 10.\nEmbarcadero to Pacific Heights: 11.\nEmbarcadero to Mission District: 20.\nEmbarcadero to Marina District: 12.\nEmbarcadero to North Beach: 5.\nEmbarcadero to Russian Hill: 8.\nEmbarcadero to Richmond District: 21.\nEmbarcadero to Alamo Square: 19.\nAlamo Square to Sunset District: 16.\nAlamo Square to Presidio: 17.\nAlamo Square to Nob Hill: 11.\nAlamo Square to Pacific Heights: 10.\nAlamo Square to Mission District: 10.\nAlamo Square to Marina District: 15.\nAlamo Square to North Beach: 15.\nAlamo Square to Russian Hill: 13.\nAlamo Square to Richmond District: 11.\nAlamo Square to Embarcadero: 16.\n\nCONSTRAINTS: You arrive at Sunset District at 9:00AM. Charles will be at Presidio from 1:15PM to 3:00PM. You'd like to meet Charles for a minimum of 105 minutes. Robert will be at Nob Hill from 1:15PM to 5:30PM. You'd like to meet Robert for a minimum of 90 minutes. Nancy will be at Pacific Heights from 2:45PM to 10:00PM. You'd like to meet Nancy for a minimum of 105 minutes. Brian will be at Mission District from 3:30PM to 10:00PM. You'd like to meet Brian for a minimum of 60 minutes. Kimberly will be at Marina District from 5:00PM to 7:45PM. You'd like to meet Kimberly for a minimum of 75 minutes. David will be at North Beach from 2:45PM to 4:30PM. You'd like to meet David for a minimum of 75 minutes. William will be at Russian Hill from 12:30PM to 7:15PM. You'd like to meet William for a minimum of 120 minutes. Jeffrey will be at Richmond District from 12:00PM to 7:15PM. You'd like to meet Jeffrey for a minimum of 45 minutes. Karen will be at Embarcadero from 2:15PM to 8:45PM. You'd like to meet Karen for a minimum of 60 minutes. Joshua will be at Alamo Square from 6:45PM to 10:00PM. You'd like to meet Joshua for a minimum of 60 minutes.\n\nYour response should start with 'SOLUTION:'.\n\nGenerate a complete, self-contained Python program that:\n1. Takes the above meeting constraints as input variables\n2. Computes the optimal meeting schedule using logical rules and calculations\n3. Outputs the result as a JSON-formatted dictionary with the following structure:\n{\n  \"itinerary\": [\n    {\"action\": \"meet\", \"location\": \"Location Name\", \"person\": \"Person Name\", \"start_time\": \"H:MM\", \"end_time\": \"H:MM\"},\n    {\"action\": \"meet\", \"location\": \"Location Name\", \"person\": \"Person Name\", \"start_time\": \"H:MM\", \"end_time\": \"H:MM\"}\n  ]\n}\nRules for the program:\n- Times should be in 24-hour format like '9:00' or '13:30' (no leading zero)\n- The schedule must account for all travel times and constraints\n- The program must actually compute the schedule, not just print a static answer\n\nOutput only the complete Python code with no additional text or explanation.\nThe code must run independently and output valid JSON when executed."
    },
    {
        "role": "assistant",
        "content": "SOLUTION:\n```python\nimport json\n\ndef format_time(minutes):\n    h = minutes // 60\n    m = minutes % 60\n    return f\"{h}:{m:02d}\"\n\ndef main():\n    travel = {\n        \"Sunset District\": {\"Presidio\": 16, \"Nob Hill\": 27, \"Pacific Heights\": 21, \"Mission District\": 25, \"Marina District\": 21, \"North Beach\": 28, \"Russian Hill\": 24, \"Richmond District\": 12, \"Embarcadero\": 30, \"Alamo Square\": 17},\n        \"Presidio\": {\"Sunset District\": 15, \"Nob Hill\": 18, \"Pacific Heights\": 11, \"Mission District\": 26, \"Marina District\": 11, \"North Beach\": 18, \"Russian Hill\": 14, \"Richmond District\": 7, \"Embarcadero\": 20, \"Alamo Square\": 19},\n        \"Nob Hill\": {\"Sunset District\": 24, \"Presidio\": 17, \"Pacific Heights\": 8, \"Mission District\": 13, \"Marina District\": 11, \"North Beach\": 8, \"Russian Hill\": 5, \"Richmond District\": 14, \"Embarcadero\": 9, \"Alamo Square\": 11},\n        \"Pacific Heights\": {\"Sunset District\": 21, \"Presidio\": 11, \"Nob Hill\": 8, \"Mission District\": 15, \"Marina District\": 6, \"North Beach\": 9, \"Russian Hill\": 7, \"Richmond District\": 12, \"Embarcadero\": 10, \"Alamo Square\": 10},\n        \"Mission District\": {\"Sunset District\": 24, \"Presidio\": 25, \"Nob Hill\": 12, \"Pacific Heights\": 16, \"Marina District\": 19, \"North Beach\": 17, \"Russian Hill\": 15, \"Richmond District\": 20, \"Embarcadero\": 19, \"Alamo Square\": 11},\n        \"Marina District\": {\"Sunset District\": 19, \"Presidio\": 10, \"Nob Hill\": 12, \"Pacific Heights\": 7, \"Mission District\": 20, \"North Beach\": 11, \"Russian Hill\": 8, \"Richmond District\": 11, \"Embarcadero\": 14, \"Alamo Square\": 15},\n        \"North Beach\": {\"Sunset District\": 27, \"Presidio\": 17, \"Nob Hill\": 7, \"Pacific Heights\": 8, \"Mission District\": 18, \"Marina District\": 9, \"Russian Hill\": 4, \"Richmond District\": 18, \"Embarcadero\": 6, \"Alamo Square\": 16},\n        \"Russian Hill\": {\"Sunset District\": 23, \"Presidio\": 14, \"Nob Hill\": 5, \"Pacific Heights\": 7, \"Mission District\": 16, \"Marina District\": 7, \"North Beach\": 5, \"Richmond District\": 14, \"Embarcadero\": 8, \"Alamo Square\": 15},\n        \"Richmond District\": {\"Sunset District\": 11, \"Presidio\": 7, \"Nob Hill\": 17, \"Pacific Heights\": 10, \"Mission District\": 20, \"Marina District\": 9, \"North Beach\": 17, \"Russian Hill\": 13, \"Embarcadero\": 19, \"Alamo Square\": 13},\n        \"Embarcadero\": {\"Sunset District\": 30, \"Presidio\": 20, \"Nob Hill\": 10, \"Pacific Heights\": 11, \"Mission District\": 20, \"Marina District\": 12, \"North Beach\": 5, \"Russian Hill\": 8, \"Richmond District\": 21, \"Alamo Square\": 19},\n        \"Alamo Square\": {\"Sunset District\": 16, \"Presidio\": 17, \"Nob Hill\": 11, \"Pacific Heights\": 10, \"Mission District\": 10, \"Marina District\": 15, \"North Beach\": 15, \"Russian Hill\": 13, \"Richmond District\": 11, \"Embarcadero\": 16}\n    }\n    \n    friends = [\n        {'name': 'Charles', 'location': 'Presidio', 'start': 795, 'end': 900, 'min_duration': 105},\n        {'name': 'Robert', 'location': 'Nob Hill', 'start': 795, 'end': 1050, 'min_duration': 90},\n        {'name': 'Nancy', 'location': 'Pacific Heights', 'start': 885, 'end': 1320, 'min_duration': 105},\n        {'name': 'Brian', 'location': 'Mission District', 'start': 930, 'end': 1320, 'min_duration': 60},\n        {'name': 'Kimberly', 'location': 'Marina District', 'start': 1020, 'end': 1185, 'min_duration': 75},\n        {'name': 'David', 'location': 'North Beach', 'start': 885, 'end': 990, 'min_duration': 75},\n        {'name': 'William', 'location': 'Russian Hill', 'start': 750, 'end': 1155, 'min_duration': 120},\n        {'name': 'Jeffrey', 'location': 'Richmond District', 'start': 720, 'end': 1155, 'min_duration': 45},\n        {'name': 'Karen', 'location': 'Embarcadero', 'start': 855, 'end': 1245, 'min_duration': 60},\n        {'name': 'Joshua', 'location': 'Alamo Square', 'start': 1125, 'end': 1320, 'min_duration': 60}\n    ]\n    \n    n = len(friends)\n    dp = {}\n    parent = {}\n    \n    start_state = (0, 'Sunset District')\n    dp[start_state] = 540\n    parent[start_state] = None\n    \n    masks_by_popcount = [[] for _ in range(n+1)]\n    for mask in range(1 << n):\n        cnt = bin(mask).count(\"1\")\n        masks_by_popcount[cnt].append(mask)\n    \n    for cnt in range(0, n+1):\n        for mask in masks_by_popcount[cnt]:\n            for loc in travel.keys():\n                state = (mask, loc)\n                if state not in dp:\n                    continue\n                current_time = dp[state]\n                for j in range(n):\n                    if mask & (1 << j):\n                        continue\n                    friend = friends[j]\n                    from_loc = loc\n                    to_loc = friend['location']\n                    tt = travel[from_loc][to_loc]\n                    arrival = current_time + tt\n                    meeting_start = max(arrival, friend['start'])\n                    meeting_end = meeting_start + friend['min_duration']\n                    if meeting_end > friend['end']:\n                        continue\n                    new_mask = mask | (1 << j)\n                    new_state = (new_mask, to_loc)\n                    if new_state not in dp or meeting_end < dp[new_state]:\n                        dp[new_state] = meeting_end\n                        parent[new_state] = (mask, loc, j, meeting_start, meeting_end)\n    \n    best_state = None\n    best_count = -1\n    best_time = float('inf')\n    for state, time_val in dp.items():\n        mask, loc = state\n        cnt = bin(mask).count(\"1\")\n        if cnt > best_count or (cnt == best_count and time_val < best_time):\n            best_count = cnt\n            best_time = time_val\n            best_state = state\n    \n    itinerary = []\n    current_state = best_state\n    while current_state in parent and parent[current_state] is not None:\n        mask, loc = current_state\n        prev_mask, prev_loc, j, start_time, end_time = parent[current_state]\n        itinerary.append({\n            \"action\": \"meet\",\n            \"location\": friends[j]['location'],\n            \"person\": friends[j]['name'],\n            \"start_time\": format_time(start_time),\n            \"end_time\": format_time(end_time)\n        })\n        current_state = (prev_mask, prev_loc)\n    \n    itinerary.reverse()\n    result = {\"itinerary\": itinerary}\n    print(json.dumps(result))\n\nif __name__ == \"__main__\":\n    main()\n```"
    }
]