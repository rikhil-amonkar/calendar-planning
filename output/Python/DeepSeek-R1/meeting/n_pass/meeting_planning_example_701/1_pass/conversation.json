[
    {
        "role": "user",
        "content": "You are an expert computational meeting planner. Your task is to write a Python program that algorithmically calculates the optimal meeting schedule based on the participants' constraints.\nThe program must actually compute the plan using the given parameters, not just print a pre-determined answer.\nInput parameters:\nYou are visiting San Francisco for the day and want to meet as many friends as possible. Solve the problem by considering various different schedules and picking the best one to optimize your goals.\n\nTravel distances (in minutes):\nMission District to The Castro: 7.\nMission District to Nob Hill: 12.\nMission District to Presidio: 25.\nMission District to Marina District: 19.\nMission District to Pacific Heights: 16.\nMission District to Golden Gate Park: 17.\nMission District to Chinatown: 16.\nMission District to Richmond District: 20.\nThe Castro to Mission District: 7.\nThe Castro to Nob Hill: 16.\nThe Castro to Presidio: 20.\nThe Castro to Marina District: 21.\nThe Castro to Pacific Heights: 16.\nThe Castro to Golden Gate Park: 11.\nThe Castro to Chinatown: 22.\nThe Castro to Richmond District: 16.\nNob Hill to Mission District: 13.\nNob Hill to The Castro: 17.\nNob Hill to Presidio: 17.\nNob Hill to Marina District: 11.\nNob Hill to Pacific Heights: 8.\nNob Hill to Golden Gate Park: 17.\nNob Hill to Chinatown: 6.\nNob Hill to Richmond District: 14.\nPresidio to Mission District: 26.\nPresidio to The Castro: 21.\nPresidio to Nob Hill: 18.\nPresidio to Marina District: 11.\nPresidio to Pacific Heights: 11.\nPresidio to Golden Gate Park: 12.\nPresidio to Chinatown: 21.\nPresidio to Richmond District: 7.\nMarina District to Mission District: 20.\nMarina District to The Castro: 22.\nMarina District to Nob Hill: 12.\nMarina District to Presidio: 10.\nMarina District to Pacific Heights: 7.\nMarina District to Golden Gate Park: 18.\nMarina District to Chinatown: 15.\nMarina District to Richmond District: 11.\nPacific Heights to Mission District: 15.\nPacific Heights to The Castro: 16.\nPacific Heights to Nob Hill: 8.\nPacific Heights to Presidio: 11.\nPacific Heights to Marina District: 6.\nPacific Heights to Golden Gate Park: 15.\nPacific Heights to Chinatown: 11.\nPacific Heights to Richmond District: 12.\nGolden Gate Park to Mission District: 17.\nGolden Gate Park to The Castro: 13.\nGolden Gate Park to Nob Hill: 20.\nGolden Gate Park to Presidio: 11.\nGolden Gate Park to Marina District: 16.\nGolden Gate Park to Pacific Heights: 16.\nGolden Gate Park to Chinatown: 23.\nGolden Gate Park to Richmond District: 7.\nChinatown to Mission District: 17.\nChinatown to The Castro: 22.\nChinatown to Nob Hill: 9.\nChinatown to Presidio: 19.\nChinatown to Marina District: 12.\nChinatown to Pacific Heights: 10.\nChinatown to Golden Gate Park: 23.\nChinatown to Richmond District: 20.\nRichmond District to Mission District: 20.\nRichmond District to The Castro: 16.\nRichmond District to Nob Hill: 17.\nRichmond District to Presidio: 7.\nRichmond District to Marina District: 9.\nRichmond District to Pacific Heights: 10.\nRichmond District to Golden Gate Park: 9.\nRichmond District to Chinatown: 20.\n\nCONSTRAINTS: You arrive at Mission District at 9:00AM. Lisa will be at The Castro from 7:15PM to 9:15PM. You'd like to meet Lisa for a minimum of 120 minutes. Daniel will be at Nob Hill from 8:15AM to 11:00AM. You'd like to meet Daniel for a minimum of 15 minutes. Elizabeth will be at Presidio from 9:15PM to 10:15PM. You'd like to meet Elizabeth for a minimum of 45 minutes. Steven will be at Marina District from 4:30PM to 8:45PM. You'd like to meet Steven for a minimum of 90 minutes. Timothy will be at Pacific Heights from 12:00PM to 6:00PM. You'd like to meet Timothy for a minimum of 90 minutes. Ashley will be at Golden Gate Park from 8:45PM to 9:45PM. You'd like to meet Ashley for a minimum of 60 minutes. Kevin will be at Chinatown from 12:00PM to 7:00PM. You'd like to meet Kevin for a minimum of 30 minutes. Betty will be at Richmond District from 1:15PM to 3:45PM. You'd like to meet Betty for a minimum of 30 minutes.\n\nYour response should start with 'SOLUTION:'.\n\nGenerate a complete, self-contained Python program that:\n1. Takes the above meeting constraints as input variables\n2. Computes the optimal meeting schedule using logical rules and calculations\n3. Outputs the result as a JSON-formatted dictionary with the following structure:\n{\n  \"itinerary\": [\n    {\"action\": \"meet\", \"location\": \"Location Name\", \"person\": \"Person Name\", \"start_time\": \"H:MM\", \"end_time\": \"H:MM\"},\n    {\"action\": \"meet\", \"location\": \"Location Name\", \"person\": \"Person Name\", \"start_time\": \"H:MM\", \"end_time\": \"H:MM\"}\n  ]\n}\nRules for the program:\n- Times should be in 24-hour format like '9:00' or '13:30' (no leading zero)\n- The schedule must account for all travel times and constraints\n- The program must actually compute the schedule, not just print a static answer\n\nOutput only the complete Python code with no additional text or explanation.\nThe code must run independently and output valid JSON when executed."
    },
    {
        "role": "assistant",
        "content": "```python\n# SOLUTION:\n\nimport itertools\nimport json\n\ndef format_time(minutes):\n    h = minutes // 60\n    m = minutes % 60\n    return f\"{h}:{m:02d}\"\n\ntravel_times = {\n    \"Mission District\": {\"The Castro\": 7, \"Nob Hill\": 12, \"Presidio\": 25, \"Marina District\": 19, \"Pacific Heights\": 16, \"Golden Gate Park\": 17, \"Chinatown\": 16, \"Richmond District\": 20},\n    \"The Castro\": {\"Mission District\": 7, \"Nob Hill\": 16, \"Presidio\": 20, \"Marina District\": 21, \"Pacific Heights\": 16, \"Golden Gate Park\": 11, \"Chinatown\": 22, \"Richmond District\": 16},\n    \"Nob Hill\": {\"Mission District\": 13, \"The Castro\": 17, \"Presidio\": 17, \"Marina District\": 11, \"Pacific Heights\": 8, \"Golden Gate Park\": 17, \"Chinatown\": 6, \"Richmond District\": 14},\n    \"Presidio\": {\"Mission District\": 26, \"The Castro\": 21, \"Nob Hill\": 18, \"Marina District\": 11, \"Pacific Heights\": 11, \"Golden Gate Park\": 12, \"Chinatown\": 21, \"Richmond District\": 7},\n    \"Marina District\": {\"Mission District\": 20, \"The Castro\": 22, \"Nob Hill\": 12, \"Presidio\": 10, \"Pacific Heights\": 7, \"Golden Gate Park\": 18, \"Chinatown\": 15, \"Richmond District\": 11},\n    \"Pacific Heights\": {\"Mission District\": 15, \"The Castro\": 16, \"Nob Hill\": 8, \"Presidio\": 11, \"Marina District\": 6, \"Golden Gate Park\": 15, \"Chinatown\": 11, \"Richmond District\": 12},\n    \"Golden Gate Park\": {\"Mission District\": 17, \"The Castro\": 13, \"Nob Hill\": 20, \"Presidio\": 11, \"Marina District\": 16, \"Pacific Heights\": 16, \"Chinatown\": 23, \"Richmond District\": 7},\n    \"Chinatown\": {\"Mission District\": 17, \"The Castro\": 22, \"Nob Hill\": 9, \"Presidio\": 19, \"Marina District\": 12, \"Pacific Heights\": 10, \"Golden Gate Park\": 23, \"Richmond District\": 20},\n    \"Richmond District\": {\"Mission District\": 20, \"The Castro\": 16, \"Nob Hill\": 17, \"Presidio\": 7, \"Marina District\": 9, \"Pacific Heights\": 10, \"Golden Gate Park\": 9, \"Chinatown\": 20}\n}\n\nfriends = [\n    {\"name\": \"Lisa\", \"location\": \"The Castro\", \"available_start\": 1155, \"available_end\": 1275, \"min_duration\": 120},\n    {\"name\": \"Daniel\", \"location\": \"Nob Hill\", \"available_start\": 495, \"available_end\": 660, \"min_duration\": 15},\n    {\"name\": \"Elizabeth\", \"location\": \"Presidio\", \"available_start\": 1275, \"available_end\": 1335, \"min_duration\": 45},\n    {\"name\": \"Steven\", \"location\": \"Marina District\", \"available_start\": 990, \"available_end\": 1245, \"min_duration\": 90},\n    {\"name\": \"Timothy\", \"location\": \"Pacific Heights\", \"available_start\": 720, \"available_end\": 1080, \"min_duration\": 90},\n    {\"name\": \"Ashley\", \"location\": \"Golden Gate Park\", \"available_start\": 1245, \"available_end\": 1305, \"min_duration\": 60},\n    {\"name\": \"Kevin\", \"location\": \"Chinatown\", \"available_start\": 720, \"available_end\": 1140, \"min_duration\": 30},\n    {\"name\": \"Betty\", \"location\": \"Richmond District\", \"available_start\": 795, \"available_end\": 945, \"min_duration\": 30}\n]\n\nstart_time_minutes = 540\nstart_location = \"Mission District\"\nbest_count = 0\nbest_finish = None\nbest_itinerary = None\n\nfor r in range(8, 0, -1):\n    current_r_best_finish = None\n    current_r_best_itinerary = None\n    for perm in itertools.permutations(friends, r):\n        current_time = start_time_minutes\n        current_location = start_location\n        itinerary = []\n        feasible = True\n        \n        for friend in perm:\n            next_loc = friend[\"location\"]\n            travel = travel_times[current_location][next_loc]\n            current_time += travel\n            meeting_start = max(current_time, friend[\"available_start\"])\n            meeting_end = meeting_start + friend[\"min_duration\"]\n            \n            if meeting_end > friend[\"available_end\"]:\n                feasible = False\n                break\n            \n            itinerary.append({\n                \"friend\": friend,\n                \"start\": meeting_start,\n                \"end\": meeting_end,\n                \"location\": next_loc\n            })\n            current_time = meeting_end\n            current_location = next_loc\n        \n        if feasible:\n            if current_r_best_finish is None or current_time < current_r_best_finish:\n                current_r_best_finish = current_time\n                current_r_best_itinerary = itinerary\n    \n    if current_r_best_finish is not None:\n        best_count = r\n        best_finish = current_r_best_finish\n        best_itinerary = current_r_best_itinerary\n        break\n\nresult = {\"itinerary\": []}\nif best_itinerary is not None:\n    for meeting in best_itinerary:\n        result[\"itinerary\"].append({\n            \"action\": \"meet\",\n            \"location\": meeting[\"location\"],\n            \"person\": meeting[\"friend\"][\"name\"],\n            \"start_time\": format_time(meeting[\"start\"]),\n            \"end_time\": format_time(meeting[\"end\"])\n        })\n\nprint(json.dumps(result))\n```"
    }
]