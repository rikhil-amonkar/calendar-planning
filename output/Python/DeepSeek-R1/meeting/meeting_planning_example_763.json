{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": []
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Haight-Ashbury",
                        "person": "Rebecca",
                        "start_time": "14:45",
                        "end_time": "15:45"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Mark",
                        "start_time": "15:57",
                        "end_time": "16:42"
                    },
                    {
                        "action": "meet",
                        "location": "Embarcadero",
                        "person": "Richard",
                        "start_time": "16:52",
                        "end_time": "18:22"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Margaret",
                        "start_time": "18:28",
                        "end_time": "18:43"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Matthew",
                        "start_time": "18:50",
                        "end_time": "20:20"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "SOLUTION:\nimport itertools\nimport json\n\ndef minutes_to_time(m):\n    hours = m // 60\n    minutes = m % 60\n    return f\"{hours}:{minutes:02d}\"\n\ndef main():\n    travel_times = {\n        'Chinatown': {'Embarcadero':5,'Pacific Heights':10,'Russian Hill':7,'Haight-Ashbury':19,'Golden Gate Park':23,'Fisherman\\'s Wharf':8,'Sunset District':29,'The Castro':22},\n        'Embarcadero': {'Chinatown':7,'Pacific Heights':11,'Russian Hill':8,'Haight-Ashbury':21,'Golden Gate Park':25,'Fisherman\\'s Wharf':6,'Sunset District':30,'The Castro':25},\n        'Pacific Heights': {'Chinatown':11,'Embarcadero':10,'Russian Hill':7,'Haight-Ashbury':11,'Golden Gate Park':15,'Fisherman\\'s Wharf':13,'Sunset District':21,'The Castro':16},\n        'Russian Hill': {'Chinatown':9,'Embarcadero':8,'Pacific Heights':7,'Haight-Ashbury':17,'Golden Gate Park':21,'Fisherman\\'s Wharf':7,'Sunset District':23,'The Castro':21},\n        'Haight-Ashbury': {'Chinatown':19,'Embarcadero':20,'Pacific Heights':12,'Russian Hill':17,'Golden Gate Park':7,'Fisherman\\'s Wharf':23,'Sunset District':15,'The Castro':6},\n        'Golden Gate Park': {'Chinatown':23,'Embarcadero':25,'Pacific Heights':16,'Russian Hill':19,'Haight-Ashbury':7,'Fisherman\\'s Wharf':24,'Sunset District':10,'The Castro':13},\n        'Fisherman\\'s Wharf': {'Chinatown':12,'Embarcadero':8,'Pacific Heights':12,'Russian Hill':7,'Haight-Ashbury':22,'Golden Gate Park':25,'Sunset District':27,'The Castro':27},\n        'Sunset District': {'Chinatown':30,'Embarcadero':30,'Pacific Heights':21,'Russian Hill':24,'Haight-Ashbury':15,'Golden Gate Park':11,'Fisherman\\'s Wharf':29,'The Castro':17},\n        'The Castro': {'Chinatown':22,'Embarcadero':22,'Pacific Heights':16,'Russian Hill':18,'Haight-Ashbury':6,'Golden Gate Park':11,'Fisherman\\'s Wharf':24,'Sunset District':17}\n    }\n\n    friends = [\n        {'name':'Richard','location':'Embarcadero','start':915,'end':1125,'duration':90},\n        {'name':'Mark','location':'Pacific Heights','start':900,'end':1020,'duration':45},\n        {'name':'Matthew','location':'Russian Hill','start':1050,'end':1260,'duration':90},\n        {'name':'Rebecca','location':'Haight-Ashbury','start':885,'end':1080,'duration':60},\n        {'name':'Melissa','location':'Golden Gate Park','start':825,'end':1050,'duration':90},\n        {'name':'Margaret','location':'Fisherman\\'s Wharf','start':885,'end':1215,'duration':15},\n        {'name':'Emily','location':'Sunset District','start':945,'end':1020,'duration':45},\n        {'name':'George','location':'The Castro','start':840,'end':975,'duration':75}\n    ]\n\n    best_count = 0\n    best_schedule = []\n    best_end = float('inf')\n\n    for perm in itertools.permutations(friends):\n        current_time = 540\n        current_loc = 'Chinatown'\n        meetings = []\n        valid = True\n\n        for f in perm:\n            try:\n                travel = travel_times[current_loc][f['location']]\n            except KeyError:\n                valid = False\n                break\n\n            arrival = current_time + travel\n            start = max(arrival, f['start'])\n            end = start + f['duration']\n\n            if end > f['end']:\n                valid = False\n                break\n\n            meetings.append((f, start, end))\n            current_time = end\n            current_loc = f['location']\n\n        if valid:\n            cnt = len(meetings)\n            if cnt > best_count or (cnt == best_count and current_time < best_end):\n                best_count = cnt\n                best_schedule = meetings\n                best_end = current_time\n\n    itinerary = []\n    for meet in best_schedule:\n        f = meet[0]\n        start = minutes_to_time(meet[1])\n        end = minutes_to_time(meet[2])\n        itinerary.append({\n            \"action\": \"meet\",\n            \"location\": f['location'],\n            \"person\": f['name'],\n            \"start_time\": start,\n            \"end_time\": end\n        })\n\n    print(json.dumps({\"itinerary\": itinerary}, indent=2))\n\nif __name__ == \"__main__\":\n    main()",
            "count": "meeting_planning_example_763"
        }
    ]
}