{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Sunset District",
                        "person": "Carol",
                        "start_time": "10:15",
                        "end_time": "10:45"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Karen",
                        "start_time": "12:45",
                        "end_time": "14:45"
                    },
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Rebecca",
                        "start_time": "14:58",
                        "end_time": "16:58"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Sunset District",
                        "person": "Carol",
                        "start_time": "10:15",
                        "end_time": "10:45"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Karen",
                        "start_time": "12:45",
                        "end_time": "14:45"
                    },
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Rebecca",
                        "start_time": "14:58",
                        "end_time": "16:58"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "SOLUTION:\n```python\nimport itertools\nimport json\n\nfriends = [\n    {'name': 'Rebecca', 'location': 'Mission District', 'start': 690, 'end': 1215, 'duration': 120},\n    {'name': 'Karen', 'location': 'Bayview', 'start': 765, 'end': 900, 'duration': 120},\n    {'name': 'Carol', 'location': 'Sunset District', 'start': 615, 'end': 705, 'duration': 30}\n]\n\ntravel_times = {\n    ('Union Square', 'Mission District'): 14,\n    ('Union Square', 'Bayview'): 15,\n    ('Union Square', 'Sunset District'): 26,\n    ('Mission District', 'Union Square'): 15,\n    ('Mission District', 'Bayview'): 15,\n    ('Mission District', 'Sunset District'): 24,\n    ('Bayview', 'Union Square'): 17,\n    ('Bayview', 'Mission District'): 13,\n    ('Bayview', 'Sunset District'): 23,\n    ('Sunset District', 'Union Square'): 30,\n    ('Sunset District', 'Mission District'): 24,\n    ('Sunset District', 'Bayview'): 22,\n}\n\ndef min_to_time(m):\n    return f\"{m // 60}:{m % 60:02d}\"\n\nbest = []\nmax_friends = 0\n\nfor perm in itertools.permutations(friends):\n    schedule = []\n    ct = 540  # 9:00 AM\n    cl = 'Union Square'\n    valid = True\n    for f in perm:\n        key = (cl, f['location'])\n        if key not in travel_times:\n            valid = False\n            break\n        arrive = ct + travel_times[key]\n        start = max(arrive, f['start'])\n        if start + f['duration'] > f['end']:\n            valid = False\n            break\n        schedule.append((f, start, start + f['duration']))\n        ct = start + f['duration']\n        cl = f['location']\n    if valid:\n        if len(perm) > max_friends or (len(perm) == max_friends and sum(f['duration'] for f in perm) > sum(b[0]['duration'] for b in best)):\n            max_friends = len(perm)\n            best = schedule\n\nitinerary = []\nfor entry in best:\n    f, s, e = entry\n    itinerary.append({\n        \"action\": \"meet\",\n        \"location\": f['location'],\n        \"person\": f['name'],\n        \"start_time\": min_to_time(s),\n        \"end_time\": min_to_time(e)\n    })\n\nprint(json.dumps({\"itinerary\": itinerary}, indent=2))\n```",
            "count": "meeting_planning_example_286"
        }
    ]
}