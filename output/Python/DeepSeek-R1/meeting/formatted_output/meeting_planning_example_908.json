{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": []
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Mark",
                        "start_time": "9:10",
                        "end_time": "9:40"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Betty",
                        "start_time": "10:06",
                        "end_time": "10:21"
                    },
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Brian",
                        "start_time": "10:40",
                        "end_time": "11:10"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Joseph",
                        "start_time": "11:31",
                        "end_time": "13:01"
                    },
                    {
                        "action": "meet",
                        "location": "Presidio",
                        "person": "Stephanie",
                        "start_time": "13:11",
                        "end_time": "14:26"
                    },
                    {
                        "action": "meet",
                        "location": "Haight-Ashbury",
                        "person": "Lisa",
                        "start_time": "15:30",
                        "end_time": "16:15"
                    },
                    {
                        "action": "meet",
                        "location": "Union Square",
                        "person": "Patricia",
                        "start_time": "16:34",
                        "end_time": "18:34"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "William",
                        "start_time": "18:47",
                        "end_time": "19:47"
                    },
                    {
                        "action": "meet",
                        "location": "Sunset District",
                        "person": "Karen",
                        "start_time": "20:10",
                        "end_time": "21:55"
                    }
                ]
            },
            "has_error": true,
            "raw_model_response": "SOLUTION:\n```python\nimport json\n\ndef time_to_min(t_str):\n    time_part, period = t_str[:-2], t_str[-2:]\n    hours, minutes = map(int, time_part.split(':'))\n    if period == 'PM':\n        if hours != 12:\n            hours += 12\n    elif period == 'AM' and hours == 12:\n        hours = 0\n    return hours * 60 + minutes\n\ndef min_to_time(m):\n    hours = m // 60\n    mins = m % 60\n    return f\"{hours}:{mins:02d}\" if mins != 0 else f\"{hours}:00\"\n\ntravel_times = {\n    'Financial District': {'Fisherman\\'s Wharf': 10, 'Presidio': 22, 'Bayview': 19, 'Haight-Ashbury': 19, 'Russian Hill': 11, 'The Castro': 20, 'Marina District': 15, 'Richmond District': 21, 'Union Square': 9, 'Sunset District': 30},\n    'Fisherman\\'s Wharf': {'Financial District': 11, 'Presidio': 17, 'Bayview': 26, 'Haight-Ashbury': 22, 'Russian Hill': 7, 'The Castro': 27, 'Marina District': 9, 'Richmond District': 18, 'Union Square': 13, 'Sunset District': 27},\n    'Presidio': {'Financial District': 23, 'Fisherman\\'s Wharf': 19, 'Bayview': 31, 'Haight-Ashbury': 15, 'Russian Hill': 14, 'The Castro': 21, 'Marina District': 11, 'Richmond District': 7, 'Union Square': 22, 'Sunset District': 15},\n    'Bayview': {'Financial District': 19, 'Fisherman\\'s Wharf': 25, 'Presidio': 32, 'Haight-Ashbury': 19, 'Russian Hill': 23, 'The Castro': 19, 'Marina District': 27, 'Richmond District': 25, 'Union Square': 18, 'Sunset District': 23},\n    'Haight-Ashbury': {'Financial District': 21, 'Fisherman\\'s Wharf': 23, 'Presidio': 15, 'Bayview': 18, 'Russian Hill': 17, 'The Castro': 6, 'Marina District': 17, 'Richmond District': 10, 'Union Square': 19, 'Sunset District': 15},\n    'Russian Hill': {'Financial District': 11, 'Fisherman\\'s Wharf': 7, 'Presidio': 14, 'Bayview': 23, 'Haight-Ashbury': 17, 'The Castro': 21, 'Marina District': 7, 'Richmond District': 14, 'Union Square': 10, 'Sunset District': 23},\n    'The Castro': {'Financial District': 21, 'Fisherman\\'s Wharf': 24, 'Presidio': 20, 'Bayview': 19, 'Haight-Ashbury': 6, 'Russian Hill': 18, 'Marina District': 21, 'Richmond District': 16, 'Union Square': 19, 'Sunset District': 17},\n    'Marina District': {'Financial District': 17, 'Fisherman\\'s Wharf': 10, 'Presidio': 10, 'Bayview': 27, 'Haight-Ashbury': 16, 'Russian Hill': 8, 'The Castro': 22, 'Richmond District': 11, 'Union Square': 16, 'Sunset District': 19},\n    'Richmond District': {'Financial District': 22, 'Fisherman\\'s Wharf': 18, 'Presidio': 7, 'Bayview': 27, 'Haight-Ashbury': 10, 'Russian Hill': 13, 'The Castro': 16, 'Marina District': 9, 'Union Square': 21, 'Sunset District': 11},\n    'Union Square': {'Financial District': 9, 'Fisherman\\'s Wharf': 15, 'Presidio': 24, 'Bayview': 15, 'Haight-Ashbury': 18, 'Russian Hill': 13, 'The Castro': 17, 'Marina District': 18, 'Richmond District': 20, 'Sunset District': 27},\n    'Sunset District': {'Financial District': 30, 'Fisherman\\'s Wharf': 29, 'Presidio': 16, 'Bayview': 22, 'Haight-Ashbury': 15, 'Russian Hill': 24, 'The Castro': 17, 'Marina District': 21, 'Richmond District': 12, 'Union Square': 30}\n}\n\nfriends = [\n    {'name': 'Mark', 'location': 'Fisherman\\'s Wharf', 'start': time_to_min('8:15AM'), 'end': time_to_min('10:00AM'), 'duration': 30},\n    {'name': 'Stephanie', 'location': 'Presidio', 'start': time_to_min('12:15PM'), 'end': time_to_min('3:00PM'), 'duration': 75},\n    {'name': 'Betty', 'location': 'Bayview', 'start': time_to_min('7:15AM'), 'end': time_to_min('8:30PM'), 'duration': 15},\n    {'name': 'Lisa', 'location': 'Haight-Ashbury', 'start': time_to_min('3:30PM'), 'end': time_to_min('6:30PM'), 'duration': 45},\n    {'name': 'William', 'location': 'Russian Hill', 'start': time_to_min('6:45PM'), 'end': time_to_min('8:00PM'), 'duration': 60},\n    {'name': 'Brian', 'location': 'The Castro', 'start': time_to_min('9:15AM'), 'end': time_to_min('1:15PM'), 'duration': 30},\n    {'name': 'Joseph', 'location': 'Marina District', 'start': time_to_min('10:45AM'), 'end': time_to_min('3:00PM'), 'duration': 90},\n    {'name': 'Ashley', 'location': 'Richmond District', 'start': time_to_min('9:45AM'), 'end': time_to_min('11:15AM'), 'duration': 45},\n    {'name': 'Patricia', 'location': 'Union Square', 'start': time_to_min('4:30PM'), 'end': time_to_min('8:00PM'), 'duration': 120},\n    {'name': 'Karen', 'location': 'Sunset District', 'start': time_to_min('4:30PM'), 'end': time_to_min('10:00PM'), 'duration': 105}\n]\n\nfriends_sorted = sorted(friends, key=lambda x: x['end'])\n\ncurrent_time = time_to_min('9:00AM')\ncurrent_location = 'Financial District'\nitinerary = []\n\nfor friend in friends_sorted:\n    loc = friend['location']\n    start = friend['start']\n    end = friend['end']\n    duration = friend['duration']\n    name = friend['name']\n    \n    if current_location not in travel_times or loc not in travel_times[current_location]:\n        continue\n    travel_time = travel_times[current_location][loc]\n    \n    earliest_start = max(start, current_time + travel_time)\n    if earliest_start + duration > end:\n        continue\n    \n    itinerary.append({\n        'action': 'meet',\n        'location': loc,\n        'person': name,\n        'start_time': min_to_time(earliest_start).replace(\":00\", \"\").replace(\":0\", \":\") if mins == 0 else min_to_time(earliest_start).lstrip(\"0\"),\n        'end_time': min_to_time(earliest_start + duration).replace(\":00\", \"\").replace(\":0\", \":\") if (earliest_start + duration) % 60 == 0 else min_to_time(earliest_start + duration).lstrip(\"0\")\n    })\n    \n    current_time = earliest_start + duration\n    current_location = loc\n\nprint(json.dumps({'itinerary': itinerary}, indent=2))\n```",
            "count": "meeting_planning_example_908"
        }
    ]
}