{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Presidio",
                        "person": "Matthew",
                        "start_time": "11:00",
                        "end_time": "12:30"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Kimberly",
                        "start_time": "13:00",
                        "end_time": "15:00"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Nancy",
                        "start_time": "15:16",
                        "end_time": "15:31"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Kenneth",
                        "start_time": "15:53",
                        "end_time": "16:53"
                    },
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "Margaret",
                        "start_time": "17:11",
                        "end_time": "18:41"
                    },
                    {
                        "action": "meet",
                        "location": "Richmond District",
                        "person": "Helen",
                        "start_time": "19:45",
                        "end_time": "20:45"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Rebecca",
                        "start_time": "21:15",
                        "end_time": "22:15"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Presidio",
                        "person": "Matthew",
                        "start_time": "11:00",
                        "end_time": "12:30"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Kimberly",
                        "start_time": "13:00",
                        "end_time": "15:00"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Nancy",
                        "start_time": "15:16",
                        "end_time": "15:31"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Kenneth",
                        "start_time": "15:53",
                        "end_time": "16:53"
                    },
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "Margaret",
                        "start_time": "17:11",
                        "end_time": "18:41"
                    },
                    {
                        "action": "meet",
                        "location": "Richmond District",
                        "person": "Helen",
                        "start_time": "19:45",
                        "end_time": "20:45"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Rebecca",
                        "start_time": "21:15",
                        "end_time": "22:15"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "SOLUTION:\n```python\nimport json\nimport itertools\n\n# Define travel times\ntravel_times = {\n    'Russian Hill': {\n        'Presidio': 14,\n        'Chinatown': 9,\n        'Pacific Heights': 7,\n        'Richmond District': 14,\n        'Fisherman\\'s Wharf': 7,\n        'Golden Gate Park': 21,\n        'Bayview': 23\n    },\n    'Presidio': {\n        'Russian Hill': 14,\n        'Chinatown': 21,\n        'Pacific Heights': 11,\n        'Richmond District': 7,\n        'Fisherman\\'s Wharf': 19,\n        'Golden Gate Park': 12,\n        'Bayview': 31\n    },\n    'Chinatown': {\n        'Russian Hill': 7,\n        'Presidio': 19,\n        'Pacific Heights': 10,\n        'Richmond District': 20,\n        'Fisherman\\'s Wharf': 8,\n        'Golden Gate Park': 23,\n        'Bayview': 22\n    },\n    'Pacific Heights': {\n        'Russian Hill': 7,\n        'Presidio': 11,\n        'Chinatown': 11,\n        'Richmond District': 12,\n        'Fisherman\\'s Wharf': 13,\n        'Golden Gate Park': 15,\n        'Bayview': 22\n    },\n    'Richmond District': {\n        'Russian Hill': 13,\n        'Presidio': 7,\n        'Chinatown': 20,\n        'Pacific Heights': 10,\n        'Fisherman\\'s Wharf': 18,\n        'Golden Gate Park': 9,\n        'Bayview': 26\n    },\n    'Fisherman\\'s Wharf': {\n        'Russian Hill': 7,\n        'Presidio': 17,\n        'Chinatown': 12,\n        'Pacific Heights': 12,\n        'Richmond District': 18,\n        'Golden Gate Park': 25,\n        'Bayview': 26\n    },\n    'Golden Gate Park': {\n        'Russian Hill': 19,\n        'Presidio': 11,\n        'Chinatown': 23,\n        'Pacific Heights': 16,\n        'Richmond District': 7,\n        'Fisherman\\'s Wharf': 24,\n        'Bayview': 23\n    },\n    'Bayview': {\n        'Russian Hill': 23,\n        'Presidio': 31,\n        'Chinatown': 18,\n        'Pacific Heights': 23,\n        'Richmond District': 25,\n        'Fisherman\\'s Wharf': 25,\n        'Golden Gate Park': 22\n    }\n}\n\n# Define friends' availability\nfriends = [\n    {'name': 'Matthew', 'location': 'Presidio', 'start': 11 * 60, 'end': 21 * 60, 'duration': 90},\n    {'name': 'Margaret', 'location': 'Chinatown', 'start': 9 * 60 + 15, 'end': 18 * 60 + 45, 'duration': 90},\n    {'name': 'Nancy', 'location': 'Pacific Heights', 'start': 14 * 60 + 15, 'end': 17 * 60, 'duration': 15},\n    {'name': 'Helen', 'location': 'Richmond District', 'start': 19 * 60 + 45, 'end': 22 * 60, 'duration': 60},\n    {'name': 'Rebecca', 'location': 'Fisherman\\'s Wharf', 'start': 21 * 60 + 15, 'end': 22 * 60 + 15, 'duration': 60},\n    {'name': 'Kimberly', 'location': 'Golden Gate Park', 'start': 13 * 60, 'end': 16 * 60 + 30, 'duration': 120},\n    {'name': 'Kenneth', 'location': 'Bayview', 'start': 14 * 60 + 30, 'end': 18 * 60, 'duration': 60},\n]\n\ndef format_time(minutes):\n    return f\"{minutes // 60}:{minutes % 60:02d}\"\n\nbest_count = 0\nbest_duration = 0\nbest_itinerary = []\n\n# Check all possible permutations\nfor r in range(1, len(friends) + 1):\n    for perm in itertools.permutations(friends, r):\n        current_time = 540  # Start at 9:00 AM\n        current_loc = 'Russian Hill'\n        itinerary = []\n        valid = True\n        \n        for friend in perm:\n            # Get travel time\n            if friend['location'] not in travel_times[current_loc]:\n                valid = False\n                break\n            travel = travel_times[current_loc][friend['location']]\n            arrival = current_time + travel\n            start = max(arrival, friend['start'])\n            end = start + friend['duration']\n            \n            if end > friend['end']:\n                valid = False\n                break\n            \n            itinerary.append((friend, start, end))\n            current_time = end\n            current_loc = friend['location']\n        \n        if valid:\n            count = len(perm)\n            duration = sum(f['duration'] for f, _, _ in itinerary)\n            if (count > best_count) or (count == best_count and duration > best_duration):\n                best_count = count\n                best_duration = duration\n                best_itinerary = itinerary\n\n# Convert to JSON format\nresult = {\"itinerary\": []}\nfor entry in best_itinerary:\n    friend, start, end = entry\n    result[\"itinerary\"].append({\n        \"action\": \"meet\",\n        \"location\": friend['location'],\n        \"person\": friend['name'],\n        \"start_time\": format_time(start),\n        \"end_time\": format_time(end)\n    })\n\nprint(json.dumps(result, indent=2))\n```",
            "count": "meeting_planning_example_629"
        }
    ]
}