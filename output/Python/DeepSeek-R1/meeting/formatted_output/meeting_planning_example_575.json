{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "William",
                        "start_time": "13:15",
                        "end_time": "13:45"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Robert",
                        "start_time": "14:15",
                        "end_time": "15:00"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Mark",
                        "start_time": "15:19",
                        "end_time": "16:34"
                    },
                    {
                        "action": "meet",
                        "location": "Sunset District",
                        "person": "Linda",
                        "start_time": "16:57",
                        "end_time": "17:27"
                    },
                    {
                        "action": "meet",
                        "location": "Haight-Ashbury",
                        "person": "Elizabeth",
                        "start_time": "17:42",
                        "end_time": "19:27"
                    },
                    {
                        "action": "meet",
                        "location": "Presidio",
                        "person": "Rebecca",
                        "start_time": "19:42",
                        "end_time": "20:42"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "William",
                        "start_time": "13:15",
                        "end_time": "13:45"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Robert",
                        "start_time": "14:15",
                        "end_time": "15:00"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Mark",
                        "start_time": "15:19",
                        "end_time": "16:34"
                    },
                    {
                        "action": "meet",
                        "location": "Sunset District",
                        "person": "Linda",
                        "start_time": "16:57",
                        "end_time": "17:27"
                    },
                    {
                        "action": "meet",
                        "location": "Haight-Ashbury",
                        "person": "Elizabeth",
                        "start_time": "17:42",
                        "end_time": "19:27"
                    },
                    {
                        "action": "meet",
                        "location": "Presidio",
                        "person": "Rebecca",
                        "start_time": "19:42",
                        "end_time": "20:42"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "SOLUTION:\n```python\nimport itertools\nimport json\n\ndef time_to_minutes(t):\n    hours, minutes = map(int, t.split(':'))\n    return hours * 60 + minutes\n\ndef minutes_to_time(m):\n    hours = m // 60\n    minutes = m % 60\n    return f\"{hours}:{minutes:02d}\"\n\nfriends = [\n    {'name': 'Rebecca', 'location': 'Presidio', 'start': time_to_minutes('18:15'), 'end': time_to_minutes('20:45'), 'duration': 60},\n    {'name': 'Linda', 'location': 'Sunset District', 'start': time_to_minutes('15:30'), 'end': time_to_minutes('19:45'), 'duration': 30},\n    {'name': 'Elizabeth', 'location': 'Haight-Ashbury', 'start': time_to_minutes('17:15'), 'end': time_to_minutes('19:30'), 'duration': 105},\n    {'name': 'William', 'location': 'Mission District', 'start': time_to_minutes('13:15'), 'end': time_to_minutes('19:30'), 'duration': 30},\n    {'name': 'Robert', 'location': 'Golden Gate Park', 'start': time_to_minutes('14:15'), 'end': time_to_minutes('21:30'), 'duration': 45},\n    {'name': 'Mark', 'location': 'Russian Hill', 'start': time_to_minutes('10:00'), 'end': time_to_minutes('21:15'), 'duration': 75}\n]\n\ntravel_times = {\n    ('The Castro', 'Presidio'): 20,\n    ('The Castro', 'Sunset District'): 17,\n    ('The Castro', 'Haight-Ashbury'): 6,\n    ('The Castro', 'Mission District'): 7,\n    ('The Castro', 'Golden Gate Park'): 11,\n    ('The Castro', 'Russian Hill'): 18,\n    ('Presidio', 'The Castro'): 21,\n    ('Presidio', 'Sunset District'): 15,\n    ('Presidio', 'Haight-Ashbury'): 15,\n    ('Presidio', 'Mission District'): 26,\n    ('Presidio', 'Golden Gate Park'): 12,\n    ('Presidio', 'Russian Hill'): 14,\n    ('Sunset District', 'The Castro'): 17,\n    ('Sunset District', 'Presidio'): 16,\n    ('Sunset District', 'Haight-Ashbury'): 15,\n    ('Sunset District', 'Mission District'): 24,\n    ('Sunset District', 'Golden Gate Park'): 11,\n    ('Sunset District', 'Russian Hill'): 24,\n    ('Haight-Ashbury', 'The Castro'): 6,\n    ('Haight-Ashbury', 'Presidio'): 15,\n    ('Haight-Ashbury', 'Sunset District'): 15,\n    ('Haight-Ashbury', 'Mission District'): 11,\n    ('Haight-Ashbury', 'Golden Gate Park'): 7,\n    ('Haight-Ashbury', 'Russian Hill'): 17,\n    ('Mission District', 'The Castro'): 7,\n    ('Mission District', 'Presidio'): 25,\n    ('Mission District', 'Sunset District'): 24,\n    ('Mission District', 'Haight-Ashbury'): 12,\n    ('Mission District', 'Golden Gate Park'): 17,\n    ('Mission District', 'Russian Hill'): 15,\n    ('Golden Gate Park', 'The Castro'): 13,\n    ('Golden Gate Park', 'Presidio'): 11,\n    ('Golden Gate Park', 'Sunset District'): 10,\n    ('Golden Gate Park', 'Haight-Ashbury'): 7,\n    ('Golden Gate Park', 'Mission District'): 17,\n    ('Golden Gate Park', 'Russian Hill'): 19,\n    ('Russian Hill', 'The Castro'): 21,\n    ('Russian Hill', 'Presidio'): 14,\n    ('Russian Hill', 'Sunset District'): 23,\n    ('Russian Hill', 'Haight-Ashbury'): 17,\n    ('Russian Hill', 'Mission District'): 16,\n    ('Russian Hill', 'Golden Gate Park'): 21\n}\n\nbest_itinerary = []\nmax_met = 0\n\nfor perm in itertools.permutations(friends):\n    current_loc = 'The Castro'\n    current_time = 540\n    itinerary = []\n    met = set()\n    \n    for friend in perm:\n        travel_time = travel_times.get((current_loc, friend['location']), float('inf'))\n        arrival = current_time + travel_time\n        if arrival > friend['end']:\n            continue\n        start = max(arrival, friend['start'])\n        if start + friend['duration'] > friend['end']:\n            continue\n        end = start + friend['duration']\n        itinerary.append({\n            'action': 'meet',\n            'location': friend['location'],\n            'person': friend['name'],\n            'start_time': minutes_to_time(start),\n            'end_time': minutes_to_time(end)\n        })\n        met.add(friend['name'])\n        current_time = end\n        current_loc = friend['location']\n    \n    if len(met) > max_met or (len(met) == max_met and current_time < max(current_time for x in best_itinerary if len(best_itinerary))):\n        max_met = len(met)\n        best_itinerary = itinerary.copy()\n\noutput = {\n    \"itinerary\": [\n        {\n            \"action\": \"meet\",\n            \"location\": item['location'],\n            \"person\": item['person'],\n            \"start_time\": item['start_time'],\n            \"end_time\": item['end_time']\n        } for item in best_itinerary\n    ]\n}\n\nprint(json.dumps(output, indent=2))\n```",
            "count": "meeting_planning_example_575"
        }
    ]
}