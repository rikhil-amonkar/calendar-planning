{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "Jason",
                        "start_time": "9:21",
                        "end_time": "10:36"
                    },
                    {
                        "action": "meet",
                        "location": "North Beach",
                        "person": "Kenneth",
                        "start_time": "10:39",
                        "end_time": "11:09"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Mark",
                        "start_time": "11:18",
                        "end_time": "12:33"
                    },
                    {
                        "action": "meet",
                        "location": "Embarcadero",
                        "person": "Kimberly",
                        "start_time": "12:47",
                        "end_time": "14:02"
                    },
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Jessica",
                        "start_time": "14:12",
                        "end_time": "15:42"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Brian",
                        "start_time": "15:47",
                        "end_time": "16:47"
                    },
                    {
                        "action": "meet",
                        "location": "Union Square",
                        "person": "Stephanie",
                        "start_time": "16:57",
                        "end_time": "18:42"
                    },
                    {
                        "action": "meet",
                        "location": "Financial District",
                        "person": "Steven",
                        "start_time": "18:51",
                        "end_time": "19:51"
                    },
                    {
                        "action": "meet",
                        "location": "Haight-Ashbury",
                        "person": "Karen",
                        "start_time": "21:00",
                        "end_time": "21:45"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Chinatown",
                        "person": "Jason",
                        "start_time": "9:21",
                        "end_time": "10:36"
                    },
                    {
                        "action": "meet",
                        "location": "North Beach",
                        "person": "Kenneth",
                        "start_time": "10:39",
                        "end_time": "11:09"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Mark",
                        "start_time": "11:18",
                        "end_time": "12:33"
                    },
                    {
                        "action": "meet",
                        "location": "Embarcadero",
                        "person": "Kimberly",
                        "start_time": "12:47",
                        "end_time": "14:02"
                    },
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Jessica",
                        "start_time": "14:12",
                        "end_time": "15:42"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Brian",
                        "start_time": "15:47",
                        "end_time": "16:47"
                    },
                    {
                        "action": "meet",
                        "location": "Union Square",
                        "person": "Stephanie",
                        "start_time": "16:57",
                        "end_time": "18:42"
                    },
                    {
                        "action": "meet",
                        "location": "Financial District",
                        "person": "Steven",
                        "start_time": "18:51",
                        "end_time": "19:51"
                    },
                    {
                        "action": "meet",
                        "location": "Haight-Ashbury",
                        "person": "Karen",
                        "start_time": "21:00",
                        "end_time": "21:45"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "SOLUTION:\n```python\nimport itertools\nimport json\n\nfriends = [\n    {\n        'name': 'Karen',\n        'location': 'Haight-Ashbury',\n        'start': 21 * 60,\n        'end': 21 * 60 + 45,\n        'duration': 45\n    },\n    {\n        'name': 'Jessica',\n        'location': 'Nob Hill',\n        'start': 13 * 60 + 45,\n        'end': 21 * 60,\n        'duration': 90\n    },\n    {\n        'name': 'Brian',\n        'location': 'Russian Hill',\n        'start': 15 * 60 + 30,\n        'end': 21 * 60 + 45,\n        'duration': 60\n    },\n    {\n        'name': 'Kenneth',\n        'location': 'North Beach',\n        'start': 9 * 60 + 45,\n        'end': 21 * 60,\n        'duration': 30\n    },\n    {\n        'name': 'Jason',\n        'location': 'Chinatown',\n        'start': 8 * 60 + 15,\n        'end': 11 * 60 + 45,\n        'duration': 75\n    },\n    {\n        'name': 'Stephanie',\n        'location': 'Union Square',\n        'start': 14 * 60 + 45,\n        'end': 18 * 60 + 45,\n        'duration': 105\n    },\n    {\n        'name': 'Kimberly',\n        'location': 'Embarcadero',\n        'start': 9 * 60 + 45,\n        'end': 19 * 60 + 30,\n        'duration': 75\n    },\n    {\n        'name': 'Steven',\n        'location': 'Financial District',\n        'start': 7 * 60 + 15,\n        'end': 21 * 60 + 15,\n        'duration': 60\n    },\n    {\n        'name': 'Mark',\n        'location': 'Marina District',\n        'start': 10 * 60 + 15,\n        'end': 13 * 60,\n        'duration': 75\n    }\n]\n\ntravel_times = {\n    'Presidio': {\n        'Haight-Ashbury': 15,\n        'Nob Hill': 18,\n        'Russian Hill': 14,\n        'North Beach': 18,\n        'Chinatown': 21,\n        'Union Square': 22,\n        'Embarcadero': 20,\n        'Financial District': 23,\n        'Marina District': 11\n    },\n    'Haight-Ashbury': {\n        'Presidio': 15,\n        'Nob Hill': 15,\n        'Russian Hill': 17,\n        'North Beach': 19,\n        'Chinatown': 19,\n        'Union Square': 19,\n        'Embarcadero': 20,\n        'Financial District': 21,\n        'Marina District': 17\n    },\n    'Nob Hill': {\n        'Presidio': 17,\n        'Haight-Ashbury': 13,\n        'Russian Hill': 5,\n        'North Beach': 8,\n        'Chinatown': 6,\n        'Union Square': 7,\n        'Embarcadero': 9,\n        'Financial District': 9,\n        'Marina District': 11\n    },\n    'Russian Hill': {\n        'Presidio': 14,\n        'Haight-Ashbury': 17,\n        'Nob Hill': 5,\n        'North Beach': 5,\n        'Chinatown': 9,\n        'Union Square': 10,\n        'Embarcadero': 8,\n        'Financial District': 11,\n        'Marina District': 7\n    },\n    'North Beach': {\n        'Presidio': 17,\n        'Haight-Ashbury': 18,\n        'Nob Hill': 7,\n        'Russian Hill': 4,\n        'Chinatown': 6,\n        'Union Square': 7,\n        'Embarcadero': 6,\n        'Financial District': 8,\n        'Marina District': 9\n    },\n    'Chinatown': {\n        'Presidio': 19,\n        'Haight-Ashbury': 19,\n        'Nob Hill': 9,\n        'Russian Hill': 7,\n        'North Beach': 3,\n        'Union Square': 7,\n        'Embarcadero': 5,\n        'Financial District': 5,\n        'Marina District': 12\n    },\n    'Union Square': {\n        'Presidio': 24,\n        'Haight-Ashbury': 18,\n        'Nob Hill': 9,\n        'Russian Hill': 13,\n        'North Beach': 10,\n        'Chinatown': 7,\n        'Embarcadero': 11,\n        'Financial District': 9,\n        'Marina District': 18\n    },\n    'Embarcadero': {\n        'Presidio': 20,\n        'Haight-Ashbury': 21,\n        'Nob Hill': 10,\n        'Russian Hill': 8,\n        'North Beach': 5,\n        'Chinatown': 7,\n        'Union Square': 10,\n        'Financial District': 5,\n        'Marina District': 12\n    },\n    'Financial District': {\n        'Presidio': 22,\n        'Haight-Ashbury': 19,\n        'Nob Hill': 8,\n        'Russian Hill': 11,\n        'North Beach': 7,\n        'Chinatown': 5,\n        'Union Square': 9,\n        'Embarcadero': 4,\n        'Marina District': 15\n    },\n    'Marina District': {\n        'Presidio': 10,\n        'Haight-Ashbury': 16,\n        'Nob Hill': 12,\n        'Russian Hill': 8,\n        'North Beach': 11,\n        'Chinatown': 15,\n        'Union Square': 16,\n        'Embarcadero': 14,\n        'Financial District': 17\n    }\n}\n\ndef time_to_str(minutes):\n    hours = minutes // 60\n    mins = minutes % 60\n    return f\"{hours}:{mins:02d}\"\n\nbest_count = 0\nbest_itinerary = []\nbest_end_time = float('inf')\n\nfor perm in itertools.permutations(friends):\n    current_location = 'Presidio'\n    current_time = 540\n    itinerary = []\n    count = 0\n    valid = True\n    for friend in perm:\n        from_loc = current_location\n        to_loc = friend['location']\n        try:\n            travel_time = travel_times[from_loc][to_loc]\n        except KeyError:\n            valid = False\n            break\n        arrival_time = current_time + travel_time\n        start_time = max(arrival_time, friend['start'])\n        end_time = start_time + friend['duration']\n        if end_time > friend['end']:\n            valid = False\n            break\n        itinerary.append({\n            \"action\": \"meet\",\n            \"location\": to_loc,\n            \"person\": friend['name'],\n            \"start_time\": time_to_str(start_time),\n            \"end_time\": time_to_str(end_time)\n        })\n        current_time = end_time\n        current_location = to_loc\n        count += 1\n    if valid:\n        if count > best_count or (count == best_count and current_time < best_end_time):\n            best_count = count\n            best_end_time = current_time\n            best_itinerary = itinerary.copy()\n\nprint(json.dumps({\"itinerary\": best_itinerary}, indent=2))\n```",
            "count": "meeting_planning_example_872"
        }
    ]
}