{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": []
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "North Beach",
                        "person": "Helen",
                        "start_time": "11:00",
                        "end_time": "11:45"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Emily",
                        "start_time": "16:15",
                        "end_time": "16:45"
                    },
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Mary",
                        "start_time": "17:30",
                        "end_time": "18:15"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Mark",
                        "start_time": "18:26",
                        "end_time": "19:41"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Michelle",
                        "start_time": "20:00",
                        "end_time": "20:15"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "SOLUTION:\nimport itertools\nimport json\n\nfriends = [\n    {\n        'name': 'Michelle',\n        'location': 'Golden Gate Park',\n        'start': 20 * 60,\n        'end': 21 * 60,\n        'duration': 15\n    },\n    {\n        'name': 'Emily',\n        'location': 'Fisherman\\'s Wharf',\n        'start': 16 * 60 + 15,\n        'end': 19 * 60,\n        'duration': 30\n    },\n    {\n        'name': 'Mark',\n        'location': 'Marina District',\n        'start': 18 * 60 + 15,\n        'end': 19 * 60 + 45,\n        'duration': 75\n    },\n    {\n        'name': 'Barbara',\n        'location': 'Alamo Square',\n        'start': 17 * 60,\n        'end': 19 * 60,\n        'duration': 120\n    },\n    {\n        'name': 'Laura',\n        'location': 'Sunset District',\n        'start': 19 * 60,\n        'end': 21 * 60 + 15,\n        'duration': 75\n    },\n    {\n        'name': 'Mary',\n        'location': 'Nob Hill',\n        'start': 17 * 60 + 30,\n        'end': 19 * 60,\n        'duration': 45\n    },\n    {\n        'name': 'Helen',\n        'location': 'North Beach',\n        'start': 11 * 60,\n        'end': 12 * 60 + 15,\n        'duration': 45\n    },\n]\n\ntravel_time = {\n    'Presidio': {'Pacific Heights': 11, 'Golden Gate Park': 12, 'Fisherman\\'s Wharf': 19, 'Marina District': 11, 'Alamo Square': 19, 'Sunset District': 15, 'Nob Hill': 18, 'North Beach': 18},\n    'Pacific Heights': {'Presidio': 11, 'Golden Gate Park': 15, 'Fisherman\\'s Wharf': 13, 'Marina District': 6, 'Alamo Square': 10, 'Sunset District': 21, 'Nob Hill': 8, 'North Beach': 9},\n    'Golden Gate Park': {'Presidio': 11, 'Pacific Heights': 16, 'Fisherman\\'s Wharf': 24, 'Marina District': 16, 'Alamo Square': 9, 'Sunset District': 10, 'Nob Hill': 20, 'North Beach': 23},\n    'Fisherman\\'s Wharf': {'Presidio': 17, 'Pacific Heights': 12, 'Golden Gate Park': 25, 'Marina District': 9, 'Alamo Square': 21, 'Sunset District': 27, 'Nob Hill': 11, 'North Beach': 6},\n    'Marina District': {'Presidio': 10, 'Pacific Heights': 7, 'Golden Gate Park': 18, 'Fisherman\\'s Wharf': 10, 'Alamo Square': 15, 'Sunset District': 19, 'Nob Hill': 12, 'North Beach': 11},\n    'Alamo Square': {'Presidio': 17, 'Pacific Heights': 10, 'Golden Gate Park': 9, 'Fisherman\\'s Wharf': 19, 'Marina District': 15, 'Sunset District': 16, 'Nob Hill': 11, 'North Beach': 15},\n    'Sunset District': {'Presidio': 16, 'Pacific Heights': 21, 'Golden Gate Park': 11, 'Fisherman\\'s Wharf': 29, 'Marina District': 21, 'Alamo Square': 17, 'Nob Hill': 27, 'North Beach': 28},\n    'Nob Hill': {'Presidio': 17, 'Pacific Heights': 8, 'Golden Gate Park': 17, 'Fisherman\\'s Wharf': 10, 'Marina District': 11, 'Alamo Square': 11, 'Sunset District': 24, 'North Beach': 8},\n    'North Beach': {'Presidio': 17, 'Pacific Heights': 8, 'Golden Gate Park': 22, 'Fisherman\\'s Wharf': 5, 'Marina District': 9, 'Alamo Square': 16, 'Sunset District': 27, 'Nob Hill': 7},\n}\n\ndef minutes_to_time(mins):\n    hours = mins // 60\n    minutes = mins % 60\n    return f\"{hours}:{minutes:02d}\".lstrip('0') if hours != 0 else f\"{hours}:{minutes:02d}\"\n\nbest_count = 0\nbest_duration = 0\nbest_itinerary = []\n\nfor perm in itertools.permutations(friends):\n    current_loc = 'Presidio'\n    current_time = 9 * 60\n    itinerary = []\n    total_dur = 0\n    count = 0\n    valid = True\n    for f in perm:\n        try:\n            tt = travel_time[current_loc][f['location']]\n        except KeyError:\n            valid = False\n            break\n        arrival = current_time + tt\n        start = max(arrival, f['start'])\n        end = start + f['duration']\n        if end > f['end'] or start > f['end']:\n            valid = False\n            break\n        itinerary.append((f, start, end))\n        current_time = end\n        current_loc = f['location']\n        total_dur += f['duration']\n        count += 1\n    if valid and (count > best_count or (count == best_count and total_dur > best_duration)):\n        best_count = count\n        best_duration = total_dur\n        best_itinerary = itinerary\n\noutput = {\"itinerary\": []}\nfor entry in best_itinerary:\n    f, start, end = entry\n    output[\"itinerary\"].append({\n        \"action\": \"meet\",\n        \"location\": f['location'],\n        \"person\": f['name'],\n        \"start_time\": minutes_to_time(start).replace(':00', ':0') if minutes_to_time(start).endswith(':00') else minutes_to_time(start),\n        \"end_time\": minutes_to_time(end).replace(':00', ':0') if minutes_to_time(end).endswith(':00') else minutes_to_time(end)\n    })\n\nprint(json.dumps(output, indent=2))",
            "count": "meeting_planning_example_700"
        }
    ]
}