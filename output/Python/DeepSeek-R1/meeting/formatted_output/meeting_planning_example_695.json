{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Presidio",
                        "person": "Nancy",
                        "start_time": "11:45",
                        "end_time": "12:15"
                    },
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Paul",
                        "start_time": "16:15",
                        "end_time": "17:15"
                    },
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Karen",
                        "start_time": "17:32",
                        "end_time": "18:17"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Matthew",
                        "start_time": "18:35",
                        "end_time": "19:50"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Jeffrey",
                        "start_time": "20:00",
                        "end_time": "20:45"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Paul",
                        "start_time": "16:15",
                        "end_time": "17:15"
                    },
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Karen",
                        "start_time": "17:32",
                        "end_time": "18:17"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Matthew",
                        "start_time": "18:35",
                        "end_time": "19:50"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Jeffrey",
                        "start_time": "20:00",
                        "end_time": "20:45"
                    },
                    {
                        "action": "meet",
                        "location": "Presidio",
                        "person": "Nancy",
                        "start_time": "20:56",
                        "end_time": "21:26"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "SOLUTION:\n```python\nimport itertools\nimport json\n\nfriends = [\n    {'name': 'Paul', 'location': 'Nob Hill', 'start': 975, 'end': 1275, 'duration': 60},\n    {'name': 'Carol', 'location': 'Union Square', 'start': 1080, 'end': 1215, 'duration': 120},\n    {'name': 'Patricia', 'location': 'Chinatown', 'start': 1200, 'end': 1290, 'duration': 75},\n    {'name': 'Karen', 'location': 'The Castro', 'start': 1020, 'end': 1140, 'duration': 45},\n    {'name': 'Nancy', 'location': 'Presidio', 'start': 705, 'end': 1320, 'duration': 30},\n    {'name': 'Jeffrey', 'location': 'Pacific Heights', 'start': 1200, 'end': 1245, 'duration': 45},\n    {'name': 'Matthew', 'location': 'Russian Hill', 'start': 945, 'end': 1305, 'duration': 75},\n]\n\ntravel_time = {\n    'Bayview': {\n        'Nob Hill': 20, 'Union Square': 17, 'Chinatown': 18, 'The Castro': 20,\n        'Presidio': 31, 'Pacific Heights': 23, 'Russian Hill': 23\n    },\n    'Nob Hill': {\n        'Bayview': 19, 'Union Square': 7, 'Chinatown': 6, 'The Castro': 17,\n        'Presidio': 17, 'Pacific Heights': 8, 'Russian Hill': 5\n    },\n    'Union Square': {\n        'Bayview': 15, 'Nob Hill': 9, 'Chinatown': 7, 'The Castro': 19,\n        'Presidio': 24, 'Pacific Heights': 15, 'Russian Hill': 13\n    },\n    'Chinatown': {\n        'Bayview': 22, 'Nob Hill': 8, 'Union Square': 7, 'The Castro': 22,\n        'Presidio': 19, 'Pacific Heights': 10, 'Russian Hill': 7\n    },\n    'The Castro': {\n        'Bayview': 19, 'Nob Hill': 16, 'Union Square': 19, 'Chinatown': 20,\n        'Presidio': 20, 'Pacific Heights': 16, 'Russian Hill': 18\n    },\n    'Presidio': {\n        'Bayview': 31, 'Nob Hill': 18, 'Union Square': 22, 'Chinatown': 21,\n        'The Castro': 21, 'Pacific Heights': 11, 'Russian Hill': 14\n    },\n    'Pacific Heights': {\n        'Bayview': 22, 'Nob Hill': 8, 'Union Square': 12, 'Chinatown': 11,\n        'The Castro': 16, 'Presidio': 11, 'Russian Hill': 7\n    },\n    'Russian Hill': {\n        'Bayview': 23, 'Nob Hill': 5, 'Union Square': 11, 'Chinatown': 9,\n        'The Castro': 21, 'Presidio': 14, 'Pacific Heights': 7\n    }\n}\n\nbest_count = 0\nbest_itinerary = []\nbest_end_time = float('inf')\n\nfor perm in itertools.permutations(friends):\n    current_location = 'Bayview'\n    current_time = 540  # 9:00 AM\n    itinerary = []\n    count = 0\n    for friend in perm:\n        tt = travel_time[current_location].get(friend['location'], 0)\n        arrival = current_time + tt\n        start = max(arrival, friend['start'])\n        end = start + friend['duration']\n        if end > friend['end']:\n            continue\n        itinerary.append((friend, start, end))\n        current_location = friend['location']\n        current_time = end\n        count += 1\n    if count > best_count or (count == best_count and current_time < best_end_time):\n        best_count = count\n        best_end_time = current_time\n        best_itinerary = itinerary\n\nformatted = []\nfor item in best_itinerary:\n    friend, start, end = item\n    start_h, start_m = divmod(start, 60)\n    end_h, end_m = divmod(end, 60)\n    start_str = f\"{start_h}:{start_m:02d}\".replace(\":00\", \":0\").replace(\":0\", \":\") if start_m <10 else f\"{start_h}:{start_m}\"\n    end_str = f\"{end_h}:{end_m:02d}\".replace(\":00\", \":0\").replace(\":0\", \":\") if end_m <10 else f\"{end_h}:{end_m}\"\n    formatted.append({\n        \"action\": \"meet\",\n        \"location\": friend['location'],\n        \"person\": friend['name'],\n        \"start_time\": start_str,\n        \"end_time\": end_str\n    })\n\nprint(json.dumps({\"itinerary\": formatted}, indent=2))\n```",
            "count": "meeting_planning_example_695"
        }
    ]
}