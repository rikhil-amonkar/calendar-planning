{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": []
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "North Beach",
                        "person": "Kimberly",
                        "start_time": "9:10",
                        "end_time": "9:25"
                    },
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Kenneth",
                        "start_time": "12:15",
                        "end_time": "14:00"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Brian",
                        "start_time": "14:10",
                        "end_time": "14:55"
                    },
                    {
                        "action": "meet",
                        "location": "Embarcadero",
                        "person": "Joseph",
                        "start_time": "15:30",
                        "end_time": "16:45"
                    },
                    {
                        "action": "meet",
                        "location": "Haight-Ashbury",
                        "person": "Betty",
                        "start_time": "19:00",
                        "end_time": "20:30"
                    },
                    {
                        "action": "meet",
                        "location": "The Castro",
                        "person": "Melissa",
                        "start_time": "20:36",
                        "end_time": "21:06"
                    },
                    {
                        "action": "meet",
                        "location": "Alamo Square",
                        "person": "Barbara",
                        "start_time": "21:14",
                        "end_time": "21:29"
                    }
                ]
            },
            "has_error": true,
            "raw_model_response": "SOLUTION:\nimport json\n\nfriends = [\n    {\n        'name': 'Melissa',\n        'location': 'The Castro',\n        'start': 20*60 +15,\n        'end': 21*60 +15,\n        'duration': 30\n    },\n    {\n        'name': 'Kimberly',\n        'location': 'North Beach',\n        'start': 7*60,\n        'end': 10*60 +30,\n        'duration': 15\n    },\n    {\n        'name': 'Joseph',\n        'location': 'Embarcadero',\n        'start': 15*60 +30,\n        'end': 19*60 +30,\n        'duration': 75\n    },\n    {\n        'name': 'Barbara',\n        'location': 'Alamo Square',\n        'start': 20*60 +45,\n        'end': 21*60 +45,\n        'duration': 15\n    },\n    {\n        'name': 'Kenneth',\n        'location': 'Nob Hill',\n        'start': 12*60 +15,\n        'end': 17*60 +15,\n        'duration': 105\n    },\n    {\n        'name': 'Joshua',\n        'location': 'Presidio',\n        'start': 16*60 +30,\n        'end': 18*60 +15,\n        'duration': 105\n    },\n    {\n        'name': 'Brian',\n        'location': 'Fisherman\\'s Wharf',\n        'start': 9*60 +30,\n        'end': 15*60 +30,\n        'duration': 45\n    },\n    {\n        'name': 'Steven',\n        'location': 'Mission District',\n        'start': 19*60 +30,\n        'end': 21*60,\n        'duration': 90\n    },\n    {\n        'name': 'Betty',\n        'location': 'Haight-Ashbury',\n        'start': 19*60,\n        'end': 20*60 +30,\n        'duration': 90\n    }\n]\n\ntravel_times = {\n    'Union Square': {'The Castro':17, 'North Beach':10, 'Embarcadero':11, 'Alamo Square':15, 'Nob Hill':9, 'Presidio':24, 'Fisherman\\'s Wharf':15, 'Mission District':14, 'Haight-Ashbury':18},\n    'The Castro': {'Union Square':19, 'North Beach':20, 'Embarcadero':22, 'Alamo Square':8, 'Nob Hill':16, 'Presidio':20, 'Fisherman\\'s Wharf':24, 'Mission District':7, 'Haight-Ashbury':6},\n    'North Beach': {'Union Square':7, 'The Castro':23, 'Embarcadero':6, 'Alamo Square':16, 'Nob Hill':7, 'Presidio':17, 'Fisherman\\'s Wharf':5, 'Mission District':18, 'Haight-Ashbury':18},\n    'Embarcadero': {'Union Square':10, 'The Castro':25, 'North Beach':5, 'Alamo Square':19, 'Nob Hill':10, 'Presidio':20, 'Fisherman\\'s Wharf':6, 'Mission District':20, 'Haight-Ashbury':21},\n    'Alamo Square': {'Union Square':14, 'The Castro':8, 'North Beach':15, 'Embarcadero':16, 'Nob Hill':11, 'Presidio':17, 'Fisherman\\'s Wharf':19, 'Mission District':10, 'Haight-Ashbury':5},\n    'Nob Hill': {'Union Square':7, 'The Castro':17, 'North Beach':8, 'Embarcadero':9, 'Alamo Square':11, 'Presidio':17, 'Fisherman\\'s Wharf':10, 'Mission District':13, 'Haight-Ashbury':13},\n    'Presidio': {'Union Square':22, 'The Castro':21, 'North Beach':18, 'Embarcadero':20, 'Alamo Square':19, 'Nob Hill':18, 'Fisherman\\'s Wharf':19, 'Mission District':26, 'Haight-Ashbury':15},\n    'Fisherman\\'s Wharf': {'Union Square':13, 'The Castro':27, 'North Beach':6, 'Embarcadero':8, 'Alamo Square':21, 'Nob Hill':11, 'Presidio':17, 'Mission District':22, 'Haight-Ashbury':22},\n    'Mission District': {'Union Square':15, 'The Castro':7, 'North Beach':17, 'Embarcadero':19, 'Alamo Square':11, 'Nob Hill':12, 'Presidio':25, 'Fisherman\\'s Wharf':22, 'Haight-Ashbury':12},\n    'Haight-Ashbury': {'Union Square':19, 'The Castro':6, 'North Beach':19, 'Embarcadero':20, 'Alamo Square':5, 'Nob Hill':15, 'Presidio':15, 'Fisherman\\'s Wharf':23, 'Mission District':11},\n}\n\ncurrent_time = 540  # 9:00 AM\ncurrent_location = 'Union Square'\nitinerary = []\nmet = set()\n\ndef format_time(minutes):\n    h = minutes // 60\n    m = minutes % 60\n    return f\"{h}:{m:02d}\" if m >=10 else f\"{h}:0{m}\"\n\nwhile True:\n    candidates = []\n    for friend in friends:\n        if friend['name'] in met:\n            continue\n        loc = friend['location']\n        if current_location not in travel_times or loc not in travel_times[current_location]:\n            continue\n        travel_time = travel_times[current_location][loc]\n        arrival = current_time + travel_time\n        start = max(arrival, friend['start'])\n        latest_start = friend['end'] - friend['duration']\n        if start > latest_start:\n            continue\n        end = start + friend['duration']\n        if end > friend['end']:\n            continue\n        candidates.append( (end, friend, start, end) )\n    if not candidates:\n        break\n    candidates.sort()\n    best = candidates[0]\n    end_time, friend, start_time, end_time = best\n    itinerary.append({\n        'location': friend['location'],\n        'person': friend['name'],\n        'start_time': start_time,\n        'end_time': end_time\n    })\n    current_time = end_time\n    current_location = friend['location']\n    met.add(friend['name'])\n\nformatted = []\nfor item in itinerary:\n    formatted.append({\n        'action': 'meet',\n        'location': item['location'],\n        'person': item['person'],\n        'start_time': format_time(item['start_time']).replace(':0', ':', 1) if item['start_time'] % 60 <10 else format_time(item['start_time']),\n        'end_time': format_time(item['end_time']).replace(':0', ':', 1) if item['end_time'] % 60 <10 else format_time(item['end_time'])\n    })\n\nprint(json.dumps({'itinerary': formatted}, indent=2))",
            "count": "meeting_planning_example_800"
        }
    ]
}