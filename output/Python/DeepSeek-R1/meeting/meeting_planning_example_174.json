{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Kenneth",
                        "start_time": "12:0",
                        "end_time": "12:45"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Thomas",
                        "start_time": "15:30",
                        "end_time": "16:45"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Mission District",
                        "person": "Kenneth",
                        "start_time": "12:00",
                        "end_time": "12:45"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Thomas",
                        "start_time": "15:30",
                        "end_time": "16:45"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "SOLUTION:\n```python\nimport json\n\ndef time_to_min(time_str):\n    h, m = map(int, time_str.split(':'))\n    return h * 60 + m\n\ndef min_to_time(m):\n    h, mm = divmod(m, 60)\n    return f\"{h}:{mm:02d}\".replace(\":0\", \":\") if mm < 10 else f\"{h}:{mm}\"\n\ntravel_times = {\n    'Nob Hill': {'Pacific Heights': 8, 'Mission District': 13},\n    'Pacific Heights': {'Nob Hill': 8, 'Mission District': 15},\n    'Mission District': {'Nob Hill': 12, 'Pacific Heights': 16}\n}\n\nstart_loc = 'Nob Hill'\nstart_time = time_to_min('9:00')\n\nkenneth_loc = 'Mission District'\nkenneth_start = time_to_min('12:00')\nkenneth_end = time_to_min('15:45')\nkenneth_duration = 45\n\nthomas_loc = 'Pacific Heights'\nthomas_start = time_to_min('15:30')\nthomas_end = time_to_min('19:15')\nthomas_duration = 75\n\nitinerary = []\n\n# Calculate Kenneth meeting\ntravel_to_k = travel_times[start_loc][kenneth_loc]\ndepart_k = max(kenneth_start - travel_to_k, start_time)\narrive_k = depart_k + travel_to_k\nmeet_k_end = arrive_k + kenneth_duration\n\nif meet_k_end <= kenneth_end:\n    itinerary.append({\n        \"action\": \"meet\",\n        \"location\": kenneth_loc,\n        \"person\": \"Kenneth\",\n        \"start_time\": min_to_time(arrive_k),\n        \"end_time\": min_to_time(meet_k_end)\n    })\n    \n    # Calculate Thomas meeting\n    travel_to_t = travel_times[kenneth_loc][thomas_loc]\n    depart_t = meet_k_end\n    arrive_t = depart_t + travel_to_t\n    start_t = max(arrive_t, thomas_start)\n    end_t = start_t + thomas_duration\n    \n    if end_t <= thomas_end:\n        itinerary.append({\n            \"action\": \"meet\",\n            \"location\": thomas_loc,\n            \"person\": \"Thomas\",\n            \"start_time\": min_to_time(start_t),\n            \"end_time\": min_to_time(end_t)\n        })\n\nprint(json.dumps({\"itinerary\": itinerary}, indent=2))\n```",
            "count": "meeting_planning_example_174"
        }
    ]
}