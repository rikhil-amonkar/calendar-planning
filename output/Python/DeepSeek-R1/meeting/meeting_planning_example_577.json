{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Steven",
                        "start_time": "9:07",
                        "end_time": "10:22"
                    },
                    {
                        "action": "meet",
                        "location": "Alamo Square",
                        "person": "Anthony",
                        "start_time": "10:32",
                        "end_time": "10:47"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Sandra",
                        "start_time": "14:45",
                        "end_time": "15:30"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Stephanie",
                        "start_time": "20:00",
                        "end_time": "20:15"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Kevin",
                        "start_time": "20:22",
                        "end_time": "21:37"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Steven",
                        "start_time": "9:07",
                        "end_time": "10:22"
                    },
                    {
                        "action": "meet",
                        "location": "Alamo Square",
                        "person": "Anthony",
                        "start_time": "10:32",
                        "end_time": "10:47"
                    },
                    {
                        "action": "meet",
                        "location": "Pacific Heights",
                        "person": "Sandra",
                        "start_time": "14:45",
                        "end_time": "15:30"
                    },
                    {
                        "action": "meet",
                        "location": "Russian Hill",
                        "person": "Stephanie",
                        "start_time": "20:00",
                        "end_time": "20:15"
                    },
                    {
                        "action": "meet",
                        "location": "Fisherman's Wharf",
                        "person": "Kevin",
                        "start_time": "20:22",
                        "end_time": "21:37"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "SOLUTION:\n```python\nimport itertools\nimport json\n\ndef format_time(minutes):\n    h = minutes // 60\n    m = minutes % 60\n    return f\"{h}:{m:02}\"\n\ntravel_times = {\n    'Haight-Ashbury': {'Russian Hill': 17, 'Fisherman\\'s Wharf': 23, 'Nob Hill': 15, 'Golden Gate Park': 7, 'Alamo Square': 5, 'Pacific Heights': 12},\n    'Russian Hill': {'Haight-Ashbury': 17, 'Fisherman\\'s Wharf': 7, 'Nob Hill': 5, 'Golden Gate Park': 21, 'Alamo Square': 15, 'Pacific Heights': 7},\n    'Fisherman\\'s Wharf': {'Haight-Ashbury': 22, 'Russian Hill': 7, 'Nob Hill': 11, 'Golden Gate Park': 25, 'Alamo Square': 20, 'Pacific Heights': 12},\n    'Nob Hill': {'Haight-Ashbury': 13, 'Russian Hill': 5, 'Fisherman\\'s Wharf': 11, 'Golden Gate Park': 17, 'Alamo Square': 11, 'Pacific Heights': 8},\n    'Golden Gate Park': {'Haight-Ashbury': 7, 'Russian Hill': 19, 'Fisherman\\'s Wharf': 24, 'Nob Hill': 20, 'Alamo Square': 10, 'Pacific Heights': 16},\n    'Alamo Square': {'Haight-Ashbury': 5, 'Russian Hill': 13, 'Fisherman\\'s Wharf': 19, 'Nob Hill': 11, 'Golden Gate Park': 9, 'Pacific Heights': 10},\n    'Pacific Heights': {'Haight-Ashbury': 11, 'Russian Hill': 7, 'Fisherman\\'s Wharf': 13, 'Nob Hill': 8, 'Golden Gate Park': 15, 'Alamo Square': 10}\n}\n\nfriends = [\n    {'name': 'Stephanie', 'location': 'Russian Hill', 'start': 20*60, 'end': 20*60+45, 'duration': 15},\n    {'name': 'Kevin', 'location': 'Fisherman\\'s Wharf', 'start': 19*60+15, 'end': 21*60+45, 'duration': 75},\n    {'name': 'Steven', 'location': 'Golden Gate Park', 'start': 8*60+30, 'end': 17*60, 'duration': 75},\n    {'name': 'Anthony', 'location': 'Alamo Square', 'start': 7*60+45, 'end': 19*60+45, 'duration': 15},\n    {'name': 'Sandra', 'location': 'Pacific Heights', 'start': 14*60+45, 'end': 21*60+45, 'duration': 45}\n]\n\nbest_schedule = []\nmax_meetings = 0\nmax_duration = 0\n\nfor perm in itertools.permutations(friends):\n    current_time = 540  # 9:00 AM\n    current_loc = 'Haight-Ashbury'\n    meetings = []\n    for friend in perm:\n        travel = travel_times[current_loc].get(friend['location'], float('inf'))\n        arrival = current_time + travel\n        if arrival > friend['end']:\n            continue\n        earliest_start = max(arrival, friend['start'])\n        latest_start = friend['end'] - friend['duration']\n        if earliest_start > latest_start:\n            continue\n        start = earliest_start\n        end = start + friend['duration']\n        meetings.append({\n            'person': friend['name'],\n            'location': friend['location'],\n            'start': start,\n            'end': end\n        })\n        current_time = end\n        current_loc = friend['location']\n    num_meetings = len(meetings)\n    total_duration = sum(m['end'] - m['start'] for m in meetings)\n    if num_meetings > max_meetings or (num_meetings == max_meetings and total_duration > max_duration):\n        max_meetings = num_meetings\n        max_duration = total_duration\n        best_schedule = meetings.copy()\n\nitinerary = []\nfor meet in best_schedule:\n    itinerary.append({\n        \"action\": \"meet\",\n        \"location\": meet['location'],\n        \"person\": meet['person'],\n        \"start_time\": format_time(meet['start']),\n        \"end_time\": format_time(meet['end'])\n    })\n\nprint(json.dumps({\"itinerary\": itinerary}, indent=2))\n```",
            "count": "meeting_planning_example_577"
        }
    ]
}