{
    "0shot": [
        {
            "final_program_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Laura",
                        "start_time": "9:11",
                        "end_time": "9:41"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Thomas",
                        "start_time": "15:30",
                        "end_time": "17:30"
                    },
                    {
                        "action": "meet",
                        "location": "Embarcadero",
                        "person": "Patricia",
                        "start_time": "17:49",
                        "end_time": "18:34"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Betty",
                        "start_time": "18:46",
                        "end_time": "19:31"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Stephanie",
                        "start_time": "19:49",
                        "end_time": "20:19"
                    }
                ]
            },
            "expected_time": {
                "itinerary": [
                    {
                        "action": "meet",
                        "location": "Nob Hill",
                        "person": "Laura",
                        "start_time": "9:11",
                        "end_time": "9:41"
                    },
                    {
                        "action": "meet",
                        "location": "Bayview",
                        "person": "Thomas",
                        "start_time": "15:30",
                        "end_time": "17:30"
                    },
                    {
                        "action": "meet",
                        "location": "Golden Gate Park",
                        "person": "Stephanie",
                        "start_time": "18:30",
                        "end_time": "19:00"
                    },
                    {
                        "action": "meet",
                        "location": "Marina District",
                        "person": "Betty",
                        "start_time": "19:16",
                        "end_time": "20:01"
                    },
                    {
                        "action": "meet",
                        "location": "Embarcadero",
                        "person": "Patricia",
                        "start_time": "20:15",
                        "end_time": "21:00"
                    }
                ]
            },
            "has_error": false,
            "raw_model_response": "SOLUTION:\nimport itertools\nimport json\n\ndef minutes_to_time(m):\n    hours = m // 60\n    minutes = m % 60\n    return f\"{hours}:{minutes:02d}\"\n\nfriends = [\n    {\n        'name': 'Thomas',\n        'location': 'Bayview',\n        'start': 15 * 60 + 30,\n        'end': 18 * 60 + 30,\n        'duration': 120\n    },\n    {\n        'name': 'Stephanie',\n        'location': 'Golden Gate Park',\n        'start': 18 * 60 + 30,\n        'end': 21 * 60 + 45,\n        'duration': 30\n    },\n    {\n        'name': 'Laura',\n        'location': 'Nob Hill',\n        'start': 8 * 60 + 45,\n        'end': 16 * 60 + 15,\n        'duration': 30\n    },\n    {\n        'name': 'Betty',\n        'location': 'Marina District',\n        'start': 18 * 60 + 45,\n        'end': 21 * 60 + 45,\n        'duration': 45\n    },\n    {\n        'name': 'Patricia',\n        'location': 'Embarcadero',\n        'start': 17 * 60 + 30,\n        'end': 22 * 60 + 0,\n        'duration': 45\n    }\n]\n\ntravel_times = {\n    'Fisherman\\'s Wharf': {\n        'Bayview': 26,\n        'Golden Gate Park': 25,\n        'Nob Hill': 11,\n        'Marina District': 9,\n        'Embarcadero': 8\n    },\n    'Bayview': {\n        'Fisherman\\'s Wharf': 25,\n        'Golden Gate Park': 22,\n        'Nob Hill': 20,\n        'Marina District': 25,\n        'Embarcadero': 19\n    },\n    'Golden Gate Park': {\n        'Fisherman\\'s Wharf': 24,\n        'Bayview': 23,\n        'Nob Hill': 20,\n        'Marina District': 16,\n        'Embarcadero': 25\n    },\n    'Nob Hill': {\n        'Fisherman\\'s Wharf': 11,\n        'Bayview': 19,\n        'Golden Gate Park': 17,\n        'Marina District': 11,\n        'Embarcadero': 9\n    },\n    'Marina District': {\n        'Fisherman\\'s Wharf': 10,\n        'Bayview': 27,\n        'Golden Gate Park': 18,\n        'Nob Hill': 12,\n        'Embarcadero': 14\n    },\n    'Embarcadero': {\n        'Fisherman\\'s Wharf': 6,\n        'Bayview': 21,\n        'Golden Gate Park': 25,\n        'Nob Hill': 10,\n        'Marina District': 12\n    }\n}\n\nbest_itinerary = []\nbest_count = 0\nbest_time = float('inf')\n\nfor perm in itertools.permutations(friends):\n    current_location = 'Fisherman\\'s Wharf'\n    current_time = 540\n    itinerary = []\n    for friend in perm:\n        if current_location == friend['location']:\n            travel_duration = 0\n        else:\n            try:\n                travel_duration = travel_times[current_location][friend['location']]\n            except KeyError:\n                continue\n        arrival_time = current_time + travel_duration\n        latest_start = friend['end'] - friend['duration']\n        if arrival_time > latest_start:\n            continue\n        start_time = max(arrival_time, friend['start'])\n        if start_time > latest_start:\n            continue\n        end_time = start_time + friend['duration']\n        if end_time > friend['end']:\n            continue\n        itinerary.append({\n            'action': 'meet',\n            'location': friend['location'],\n            'person': friend['name'],\n            'start_time': start_time,\n            'end_time': end_time\n        })\n        current_location = friend['location']\n        current_time = end_time\n    if len(itinerary) > best_count or (len(itinerary) == best_count and current_time < best_time):\n        best_count = len(itinerary)\n        best_itinerary = itinerary.copy()\n        best_time = current_time\n\nformatted_itinerary = []\nfor item in best_itinerary:\n    formatted_item = {\n        'action': 'meet',\n        'location': item['location'],\n        'person': item['person'],\n        'start_time': minutes_to_time(item['start_time']),\n        'end_time': minutes_to_time(item['end_time'])\n    }\n    formatted_itinerary.append(formatted_item)\n\nprint(json.dumps({'itinerary': formatted_itinerary}, indent=2))",
            "count": "meeting_planning_example_409"
        }
    ]
}