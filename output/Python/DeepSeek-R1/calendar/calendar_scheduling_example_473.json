{
    "0shot": [
        {
            "final_program_time": {
                "day": "Monday",
                "start_time": "{11:00",
                "end_time": "11:30}"
            },
            "expected_time": {
                "day": "Monday",
                "start_time": "{11:00",
                "end_time": "11:30}"
            },
            "has_error": false,
            "raw_model_response": "'''python\ndef time_to_minutes(t):\n    hours, minutes = map(int, t.split(':'))\n    return hours * 60 + minutes\n\ndef minutes_to_time(m):\n    return f\"{m // 60:02d}:{m % 60:02d}\"\n\nparticipants = [\n    {  # Gregory\n        'busy': [(time_to_minutes('09:00'), time_to_minutes('09:30')),\n                 (time_to_minutes('11:30'), time_to_minutes('12:00'))]\n    },\n    {  # Jonathan\n        'busy': [(time_to_minutes('09:00'), time_to_minutes('09:30')),\n                 (time_to_minutes('12:00'), time_to_minutes('12:30')),\n                 (time_to_minutes('13:00'), time_to_minutes('13:30')),\n                 (time_to_minutes('15:00'), time_to_minutes('16:00')),\n                 (time_to_minutes('16:30'), time_to_minutes('17:00'))]\n    },\n    {  # Barbara\n        'busy': [(time_to_minutes('10:00'), time_to_minutes('10:30')),\n                 (time_to_minutes('13:30'), time_to_minutes('14:00'))]\n    },\n    {  # Jesse\n        'busy': [(time_to_minutes('10:00'), time_to_minutes('11:00')),\n                 (time_to_minutes('12:30'), time_to_minutes('14:30'))]\n    },\n    {  # Alan\n        'busy': [(time_to_minutes('09:30'), time_to_minutes('11:00')),\n                 (time_to_minutes('11:30'), time_to_minutes('12:30')),\n                 (time_to_minutes('13:00'), time_to_minutes('15:30')),\n                 (time_to_minutes('16:00'), time_to_minutes('17:00'))]\n    },\n    {  # Nicole\n        'busy': [(time_to_minutes('09:00'), time_to_minutes('10:30')),\n                 (time_to_minutes('11:30'), time_to_minutes('12:00')),\n                 (time_to_minutes('12:30'), time_to_minutes('13:30')),\n                 (time_to_minutes('14:00'), time_to_minutes('17:00'))]\n    },\n    {  # Catherine\n        'busy': [(time_to_minutes('09:00'), time_to_minutes('10:30')),\n                 (time_to_minutes('12:00'), time_to_minutes('13:30')),\n                 (time_to_minutes('15:00'), time_to_minutes('15:30')),\n                 (time_to_minutes('16:00'), time_to_minutes('16:30'))]\n    }\n]\n\nstart_work = time_to_minutes('09:00')\nend_work = time_to_minutes('17:00')\nduration = 30\n\nfor start in range(start_work, end_work - duration + 1):\n    end = start + duration\n    all_available = True\n    for participant in participants:\n        busy = False\n        for (busy_start, busy_end) in participant['busy']:\n            if start < busy_end and end > busy_start:\n                busy = True\n                break\n        if busy:\n            all_available = False\n            break\n    if all_available:\n        print(f\"Monday {minutes_to_time(start)}:{minutes_to_time(end)}\")\n        exit()\n\nprint(\"No suitable time found\")\n'''",
            "count": "calendar_scheduling_example_473"
        }
    ]
}