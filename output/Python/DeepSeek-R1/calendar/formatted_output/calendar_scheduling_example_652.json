{
    "0shot": [
        {
            "final_program_time": {
                "day": "Tuesday",
                "start_time": "10:30",
                "end_time": "11:00"
            },
            "expected_time": {
                "day": "Tuesday",
                "start_time": "15:00",
                "end_time": "15:30"
            },
            "has_error": false,
            "raw_model_response": "'''python\nfrom datetime import datetime, timedelta\n\ndef parse_time(time_str):\n    return datetime.strptime(time_str, \"%H:%M\")\n\ndef time_range(start, end):\n    return (start.hour, start.minute), (end.hour, end.minute)\n\ndef is_available(busy_slots, start, end):\n    for busy_start, busy_end in busy_slots:\n        if not (end <= busy_start or start >= busy_end):\n            return False\n    return True\n\njesse_busy = {\n    \"Monday\": [(\"13:30\", \"14:00\"), (\"14:30\", \"15:00\")],\n    \"Tuesday\": [(\"09:00\", \"09:30\"), (\"13:00\", \"13:30\"), (\"14:00\", \"15:00\")]\n}\n\nlawrence_busy = {\n    \"Monday\": [(\"09:00\", \"17:00\")],\n    \"Tuesday\": [(\"09:30\", \"10:30\"), (\"11:30\", \"12:30\"), (\"13:00\", \"13:30\"), (\"14:30\", \"15:00\"), (\"15:30\", \"16:30\")]\n}\n\ndays = [\"Monday\", \"Tuesday\"]\nmeeting_duration = timedelta(minutes=30)\n\nfor day in days:\n    work_start = parse_time(\"09:00\")\n    work_end = parse_time(\"17:00\") if day == \"Monday\" else parse_time(\"16:30\")\n    \n    jesse_slots = [time_range(parse_time(s), parse_time(e)) for s, e in jesse_busy.get(day, [])]\n    lawrence_slots = [time_range(parse_time(s), parse_time(e)) for s, e in lawrence_busy.get(day, [])]\n    \n    current_time = work_start\n    while current_time + meeting_duration <= work_end:\n        slot_end = current_time + meeting_duration\n        start = (current_time.hour, current_time.minute)\n        end = (slot_end.hour, slot_end.minute)\n        \n        if (is_available(jesse_slots, start, end) and \n            is_available(lawrence_slots, start, end)):\n            print(f\"{day}\")\n            print(f\"{current_time.strftime('%H:%M')}:{slot_end.strftime('%H:%M')}\")\n            exit()\n        \n        current_time += timedelta(minutes=15)\n\nprint(\"No suitable time found\")\n'''",
            "count": "calendar_scheduling_example_652"
        }
    ]
}